

Microchip Technology PIC LITE Macro Assembler V1.11 build 48931 
                                                                                               Mon Dec 03 16:04:26 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 48931
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 48931"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 46 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    43  0000                     INDF equ 00h ;# 
    44                           # 52 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    45  0001                     TMR0 equ 01h ;# 
    46                           # 58 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    47  0002                     PCL equ 02h ;# 
    48                           # 64 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    49  0003                     STATUS equ 03h ;# 
    50                           # 151 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    51  0004                     FSR equ 04h ;# 
    52                           # 157 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    53  0005                     PORTA equ 05h ;# 
    54                           # 218 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    55  0006                     PORTB equ 06h ;# 
    56                           # 279 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    57  0007                     PORTC equ 07h ;# 
    58                           # 340 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    59  0008                     PORTD equ 08h ;# 
    60                           # 401 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    61  0009                     PORTE equ 09h ;# 
    62                           # 438 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    63  000A                     PCLATH equ 0Ah ;# 
    64                           # 444 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    65  000B                     INTCON equ 0Bh ;# 
    66                           # 521 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    67  000C                     PIR1 equ 0Ch ;# 
    68                           # 576 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    69  000D                     PIR2 equ 0Dh ;# 
    70                           # 632 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    71  000E                     TMR1 equ 0Eh ;# 
    72                           # 638 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    73  000E                     TMR1L equ 0Eh ;# 
    74                           # 644 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    75  000F                     TMR1H equ 0Fh ;# 
    76                           # 650 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    77  0010                     T1CON equ 010h ;# 
    78                           # 743 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    79  0011                     TMR2 equ 011h ;# 
    80                           # 749 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    81  0012                     T2CON equ 012h ;# 
    82                           # 819 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    83  0013                     SSPBUF equ 013h ;# 
    84                           # 825 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    85  0014                     SSPCON equ 014h ;# 
    86                           # 894 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    87  0015                     CCPR1 equ 015h ;# 
    88                           # 900 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    89  0015                     CCPR1L equ 015h ;# 
    90                           # 906 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    91  0016                     CCPR1H equ 016h ;# 
    92                           # 912 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    93  0017                     CCP1CON equ 017h ;# 
    94                           # 1008 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    95  0018                     RCSTA equ 018h ;# 
    96                           # 1102 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    97  0019                     TXREG equ 019h ;# 
    98                           # 1108 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
    99  001A                     RCREG equ 01Ah ;# 
   100                           # 1114 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   101  001B                     CCPR2 equ 01Bh ;# 
   102                           # 1120 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   103  001B                     CCPR2L equ 01Bh ;# 
   104                           # 1126 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   105  001C                     CCPR2H equ 01Ch ;# 
   106                           # 1132 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   107  001D                     CCP2CON equ 01Dh ;# 
   108                           # 1201 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   109  001E                     ADRESH equ 01Eh ;# 
   110                           # 1207 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   111  001F                     ADCON0 equ 01Fh ;# 
   112                           # 1307 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   113  0081                     OPTION_REG equ 081h ;# 
   114                           # 1376 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   115  0085                     TRISA equ 085h ;# 
   116                           # 1437 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   117  0086                     TRISB equ 086h ;# 
   118                           # 1498 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   119  0087                     TRISC equ 087h ;# 
   120                           # 1559 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   121  0088                     TRISD equ 088h ;# 
   122                           # 1620 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   123  0089                     TRISE equ 089h ;# 
   124                           # 1657 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   125  008C                     PIE1 equ 08Ch ;# 
   126                           # 1712 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   127  008D                     PIE2 equ 08Dh ;# 
   128                           # 1768 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   129  008E                     PCON equ 08Eh ;# 
   130                           # 1814 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   131  008F                     OSCCON equ 08Fh ;# 
   132                           # 1878 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   133  0090                     OSCTUNE equ 090h ;# 
   134                           # 1929 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   135  0091                     SSPCON2 equ 091h ;# 
   136                           # 1990 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   137  0092                     PR2 equ 092h ;# 
   138                           # 1996 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   139  0093                     SSPADD equ 093h ;# 
   140                           # 2002 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   141  0093                     SSPMSK equ 093h ;# 
   142                           # 2007 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   143  0093                     MSK equ 093h ;# 
   144                           # 2123 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   145  0094                     SSPSTAT equ 094h ;# 
   146                           # 2291 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   147  0095                     WPUB equ 095h ;# 
   148                           # 2360 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   149  0096                     IOCB equ 096h ;# 
   150                           # 2429 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   151  0097                     VRCON equ 097h ;# 
   152                           # 2498 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   153  0098                     TXSTA equ 098h ;# 
   154                           # 2583 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   155  0099                     SPBRG equ 099h ;# 
   156                           # 2644 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   157  009A                     SPBRGH equ 09Ah ;# 
   158                           # 2713 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   159  009B                     PWM1CON equ 09Bh ;# 
   160                           # 2782 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   161  009C                     ECCPAS equ 09Ch ;# 
   162                           # 2863 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   163  009D                     PSTRCON equ 09Dh ;# 
   164                           # 2906 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   165  009E                     ADRESL equ 09Eh ;# 
   166                           # 2912 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   167  009F                     ADCON1 equ 09Fh ;# 
   168                           # 2945 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   169  0105                     WDTCON equ 0105h ;# 
   170                           # 2997 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   171  0107                     CM1CON0 equ 0107h ;# 
   172                           # 3061 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   173  0108                     CM2CON0 equ 0108h ;# 
   174                           # 3125 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   175  0109                     CM2CON1 equ 0109h ;# 
   176                           # 3175 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   177  010C                     EEDATA equ 010Ch ;# 
   178                           # 3180 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   179  010C                     EEDAT equ 010Ch ;# 
   180                           # 3186 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   181  010D                     EEADR equ 010Dh ;# 
   182                           # 3192 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   183  010E                     EEDATH equ 010Eh ;# 
   184                           # 3198 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   185  010F                     EEADRH equ 010Fh ;# 
   186                           # 3204 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   187  0185                     SRCON equ 0185h ;# 
   188                           # 3260 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   189  0187                     BAUDCTL equ 0187h ;# 
   190                           # 3311 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   191  0188                     ANSEL equ 0188h ;# 
   192                           # 3372 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   193  0189                     ANSELH equ 0189h ;# 
   194                           # 3421 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   195  018C                     EECON1 equ 018Ch ;# 
   196                           # 3465 "C:\Program Files (x86)\Microchip\xc8\v1.11\include\pic16f887.h"
   197  018D                     EECON2 equ 018Dh ;# 
   198                           	FNCALL	_main,_initIO
   199                           	FNCALL	_main,_lcdinit
   200                           	FNCALL	_main,_UART_INIT
   201                           	FNCALL	_main,_lcd_clr
   202                           	FNCALL	_main,_lcd_goto
   203                           	FNCALL	_main,_send_string
   204                           	FNCALL	_main,_SetLED
   205                           	FNCALL	_main,_SetPos
   206                           	FNCALL	_main,_SetTorqueOnOff
   207                           	FNCALL	_main,_GetPos
   208                           	FNCALL	_main,___lwtoft
   209                           	FNCALL	_main,___fttol
   210                           	FNCALL	_main,___ftmul
   211                           	FNCALL	_main,___ftdiv
   212                           	FNCALL	_main,_lcd_num
   213                           	FNCALL	_SetTorqueOnOff,_send_packet
   214                           	FNCALL	_SetPos,_send_packet
   215                           	FNCALL	_SetLED,_send_packet
   216                           	FNCALL	_GetPos,_send_packet
   217                           	FNCALL	_send_packet,_UART_SEND
   218                           	FNCALL	_send_packet,_UART_REC
   219                           	FNCALL	_lcdinit,_send_config
   220                           	FNCALL	_lcdinit,_lcd_clr
   221                           	FNCALL	_lcd_clr,_send_config
   222                           	FNCALL	_lcd_clr,_delay
   223                           	FNCALL	_lcd_goto,_send_config
   224                           	FNCALL	_lcd_num,___lwmod
   225                           	FNCALL	_lcd_num,___lwdiv
   226                           	FNCALL	_lcd_num,_send_string
   227                           	FNCALL	_lcd_num,_send_char
   228                           	FNCALL	_send_string,_send_char
   229                           	FNCALL	_send_config,_delay
   230                           	FNCALL	_send_char,_delay
   231                           	FNCALL	___ftdiv,___ftpack
   232                           	FNCALL	___ftmul,___ftpack
   233                           	FNCALL	___lwtoft,___ftpack
   234                           	FNROOT	_main
   235                           	global	_UARTWAIT
   236                           psect	idataBANK0,class=CODE,space=0,delta=2
   237                           global __pidataBANK0
   238  0056                     __pidataBANK0:
   239                           	file	"Main.c"
   240                           	line	45
   241                           
   242                           ;initializer for _UARTWAIT
   243  0056  3498               	retlw	098h
   244  0057  343A               	retlw	03Ah
   245  0058  3400               	retlw	0
   246  0059  3400               	retlw	0
   247                           
   248                           	global	_ERR_FLAG
   249                           	global	_PORTB
   250  0006                     _PORTB	set	0x6
   251                           	global	_PORTC
   252  0007                     _PORTC	set	0x7
   253                           	global	_PORTD
   254  0008                     _PORTD	set	0x8
   255                           	global	_PORTE
   256  0009                     _PORTE	set	0x9
   257                           	global	_RCREG
   258  001A                     _RCREG	set	0x1A
   259                           	global	_RCSTAbits
   260  0018                     _RCSTAbits	set	0x18
   261                           	global	_TXREG
   262  0019                     _TXREG	set	0x19
   263                           	global	_FERR
   264  00C2                     _FERR	set	0xC2
   265                           	global	_RB0
   266  0030                     _RB0	set	0x30
   267                           	global	_RB1
   268  0031                     _RB1	set	0x31
   269                           	global	_RB4
   270  0034                     _RB4	set	0x34
   271                           	global	_RB5
   272  0035                     _RB5	set	0x35
   273                           	global	_RB6
   274  0036                     _RB6	set	0x36
   275                           	global	_RB7
   276  0037                     _RB7	set	0x37
   277                           	global	_RC4
   278  003C                     _RC4	set	0x3C
   279                           	global	_RCIF
   280  0065                     _RCIF	set	0x65
   281                           	global	_SPBRG
   282  0099                     _SPBRG	set	0x99
   283                           	global	_SPBRGH
   284  009A                     _SPBRGH	set	0x9A
   285                           	global	_TRISA
   286  0085                     _TRISA	set	0x85
   287                           	global	_TRISB
   288  0086                     _TRISB	set	0x86
   289                           	global	_TRISC
   290  0087                     _TRISC	set	0x87
   291                           	global	_TRISCbits
   292  0087                     _TRISCbits	set	0x87
   293                           	global	_TRISD
   294  0088                     _TRISD	set	0x88
   295                           	global	_TRISE
   296  0089                     _TRISE	set	0x89
   297                           	global	_TXSTAbits
   298  0098                     _TXSTAbits	set	0x98
   299                           	global	_TRISB4
   300  0434                     _TRISB4	set	0x434
   301                           	global	_TRISB5
   302  0435                     _TRISB5	set	0x435
   303                           	global	_TRMT
   304  04C1                     _TRMT	set	0x4C1
   305                           	global	_ANSEL
   306  0188                     _ANSEL	set	0x188
   307                           	global	_ANSELH
   308  0189                     _ANSELH	set	0x189
   309                           	global	_BAUDCTLbits
   310  0187                     _BAUDCTLbits	set	0x187
   311                           psect	strings,class=STRING,delta=2
   312                           global __pstrings
   313  0003                     __pstrings:
   314                           ;	global	stringdir,stringtab,__stringbase
   315  0003                     stringtab:
   316                           	global    __stringtab
   317  0003                     __stringtab:
   318                           ;	String table - string pointers are 1 byte each
   319  0003  1BFF               	btfsc	(btemp+1),7
   320  0004  280D               	ljmp	stringcode
   321  0005  1383               	bcf	status,7
   322  0006  187F               	btfsc	(btemp+1),0
   323  0007  1783               	bsf	status,7
   324  0008  0800               	movf	indf,w
   325  0009  0A84               	incf fsr
   326  000A  1903               skipnz
   327  000B  0AFF               incf btemp+1
   328  000C  0008               	return
   329  000D                     stringcode:stringdir:
      + 000D                     stringdir:	
   330  000D  3000               movlw high(stringdir)
   331  000E  008A               movwf pclath
   332  000F  0804               movf fsr,w
   333  0010  0A84               incf fsr
   334  0011  0782               	addwf pc
   335  0012                     __stringbase:
   336  0012  3400               	retlw	0
   337                           psect	strings
   338                           	global    __end_of__stringtab
   339  0013                     __end_of__stringtab:
   340                           	global __stringdata
   341  0013                     __stringdata:
   342                           	
   343  0013                     STR_2:	
   344  0013  3470               	retlw	112	;'p'
   345  0014  3472               	retlw	114	;'r'
   346  0015  3465               	retlw	101	;'e'
   347  0016  3473               	retlw	115	;'s'
   348  0017  3473               	retlw	115	;'s'
   349  0018  3420               	retlw	32	;' '
   350  0019  3453               	retlw	83	;'S'
   351  001A  3457               	retlw	87	;'W'
   352  001B  3431               	retlw	49	;'1'
   353  001C  3420               	retlw	32	;' '
   354  001D  346F               	retlw	111	;'o'
   355  001E  3472               	retlw	114	;'r'
   356  001F  3420               	retlw	32	;' '
   357  0020  3453               	retlw	83	;'S'
   358  0021  3457               	retlw	87	;'W'
   359  0022  3432               	retlw	50	;'2'
   360  0023  3420               	retlw	32	;' '
   361  0024  3400               	retlw	0
   362                           psect	strings
   363                           	
   364  0025                     STR_3:	
   365  0025  3450               	retlw	80	;'P'
   366  0026  346F               	retlw	111	;'o'
   367  0027  3473               	retlw	115	;'s'
   368  0028  3469               	retlw	105	;'i'
   369  0029  3474               	retlw	116	;'t'
   370  002A  3469               	retlw	105	;'i'
   371  002B  346F               	retlw	111	;'o'
   372  002C  346E               	retlw	110	;'n'
   373  002D  3469               	retlw	105	;'i'
   374  002E  346E               	retlw	110	;'n'
   375  002F  3467               	retlw	103	;'g'
   376  0030  3420               	retlw	32	;' '
   377  0031  3420               	retlw	32	;' '
   378  0032  3420               	retlw	32	;' '
   379  0033  3420               	retlw	32	;' '
   380  0034  3420               	retlw	32	;' '
   381  0035  3400               	retlw	0
   382                           psect	strings
   383                           	
   384  0036                     STR_4:	
   385  0036  3450               	retlw	80	;'P'
   386  0037  346F               	retlw	111	;'o'
   387  0038  3473               	retlw	115	;'s'
   388  0039  3469               	retlw	105	;'i'
   389  003A  3474               	retlw	116	;'t'
   390  003B  3469               	retlw	105	;'i'
   391  003C  346F               	retlw	111	;'o'
   392  003D  346E               	retlw	110	;'n'
   393  003E  343D               	retlw	61	;'='
   394  003F  3420               	retlw	32	;' '
   395  0040  3420               	retlw	32	;' '
   396  0041  3420               	retlw	32	;' '
   397  0042  3420               	retlw	32	;' '
   398  0043  3420               	retlw	32	;' '
   399  0044  3420               	retlw	32	;' '
   400  0045  3400               	retlw	0
   401                           psect	strings
   402                           	
   403  0046                     STR_1:	
   404  0046  3447               	retlw	71	;'G'
   405  0047  3431               	retlw	49	;'1'
   406  0048  3435               	retlw	53	;'5'
   407  0049  3420               	retlw	32	;' '
   408  004A  3444               	retlw	68	;'D'
   409  004B  3465               	retlw	101	;'e'
   410  004C  346D               	retlw	109	;'m'
   411  004D  346F               	retlw	111	;'o'
   412  004E  3420               	retlw	32	;' '
   413  004F  3400               	retlw	0
   414                           psect	strings
   415                           	global __end_of__stringdata
   416  0050                     __end_of__stringdata:
   417                           ; #config settings
   418                           global __CFG_BOREN$OFF
   419  0000                     __CFG_BOREN$OFF equ 0x0
   420                           global __CFG_FOSC$HS
   421  0000                     __CFG_FOSC$HS equ 0x0
   422                           global __CFG_WDTE$OFF
   423  0000                     __CFG_WDTE$OFF equ 0x0
   424                           global __CFG_LVP$OFF
   425  0000                     __CFG_LVP$OFF equ 0x0
   426                           	file	"C:\Users\yonghui\AppData\Local\Temp\s5r8."
   427                           	line	#
   428                           psect cinit,class=CODE,delta=2
   429                           global start_initialization
   430  0E80                     start_initialization:
   431                           
   432                           global __initialization
   433  0E80                     __initialization:
   434                           psect	bssBANK0,class=BANK0,space=1
   435                           global __pbssBANK0
   436  0065                     __pbssBANK0:
   437  0065                     _ERR_FLAG:
   438  0065                            ds      1
   439                           
   440                           psect	dataBANK0,class=BANK0,space=1
   441                           global __pdataBANK0
   442  0061                     __pdataBANK0:
   443                           	file	"Main.c"
   444  0061                     _UARTWAIT:
   445  0061                            ds      4
   446                           
   447                           ; Clear objects allocated to BANK0
   448                           psect cinit,class=CODE,delta=2,merge=1
   449  0E80  01E5               	clrf	((__pbssBANK0)+0)&07Fh
   450                           ; Initialize objects allocated to BANK0
   451                           	global __pidataBANK0
   452                           psect cinit,class=CODE,delta=2,merge=1
   453  0E81  120A  118A  2056   	fcall	__pidataBANK0+0		;fetch initializer
              120A  158A         
   454  0E86  00E1               	movwf	__pdataBANK0+0&07fh		
   455  0E87  120A  118A  2057   	fcall	__pidataBANK0+1		;fetch initializer
              120A  158A         
   456  0E8C  00E2               	movwf	__pdataBANK0+1&07fh		
   457  0E8D  120A  118A  2058   	fcall	__pidataBANK0+2		;fetch initializer
              120A  158A         
   458  0E92  00E3               	movwf	__pdataBANK0+2&07fh		
   459  0E93  120A  118A  2059   	fcall	__pidataBANK0+3		;fetch initializer
              120A  158A         
   460  0E98  00E4               	movwf	__pdataBANK0+3&07fh		
   461                           psect cinit,class=CODE,delta=2,merge=1
   462                           global end_of_initialization,__end_of__initialization
   463                           
   464                           ;End of C runtime variable initialization code
   465                           
   466  0E99                     end_of_initialization:
   467  0E99                     __end_of__initialization:clrf status
      + 0E99  0183               	clrf	3
   468  0E9A  120A  118A  2E3B   ljmp _main	;jump to C main() function
   469                           psect	cstackCOMMON,class=COMMON,space=1
   470                           global __pcstackCOMMON
   471  0070                     __pcstackCOMMON:
   472  0070                     ?_UART_SEND:	; 0 bytes @ 0x0
   473  0070                     ??_UART_SEND:	; 0 bytes @ 0x0
   474  0070                     ??_UART_REC:	; 0 bytes @ 0x0
   475  0070                     ?_initIO:	; 0 bytes @ 0x0
   476  0070                     ??_initIO:	; 0 bytes @ 0x0
   477  0070                     ?_lcdinit:	; 0 bytes @ 0x0
   478  0070                     ?_UART_INIT:	; 0 bytes @ 0x0
   479  0070                     ??_UART_INIT:	; 0 bytes @ 0x0
   480  0070                     ?_lcd_clr:	; 0 bytes @ 0x0
   481  0070                     ?_lcd_goto:	; 0 bytes @ 0x0
   482  0070                     ?_send_config:	; 0 bytes @ 0x0
   483  0070                     ?_main:	; 0 bytes @ 0x0
   484                           	global	?_delay
   485  0070                     ?_delay:	; 0 bytes @ 0x0
   486  0070                     ?_send_char:	; 0 bytes @ 0x0
   487  0070                     ?_UART_REC:	; 1 bytes @ 0x0
   488                           	global	?___lwdiv
   489  0070                     ?___lwdiv:	; 2 bytes @ 0x0
   490                           	global	?___lwmod
   491  0070                     ?___lwmod:	; 2 bytes @ 0x0
   492                           	global	?___ftpack
   493  0070                     ?___ftpack:	; 3 bytes @ 0x0
   494                           	global	UART_SEND@data
   495  0070                     UART_SEND@data:	; 1 bytes @ 0x0
   496                           	global	___lwdiv@divisor
   497  0070                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   498                           	global	___lwmod@divisor
   499  0070                     ___lwmod@divisor:	; 2 bytes @ 0x0
   500                           	global	___ftpack@arg
   501  0070                     ___ftpack@arg:	; 3 bytes @ 0x0
   502                           	global	delay@data
   503  0070                     delay@data:	; 4 bytes @ 0x0
   504  0070                     	ds	1
   505                           	global	UART_REC@waitcount
   506  0071                     UART_REC@waitcount:	; 4 bytes @ 0x1
   507  0071                     	ds	1
   508                           	global	___lwdiv@dividend
   509  0072                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   510                           	global	___lwmod@dividend
   511  0072                     ___lwmod@dividend:	; 2 bytes @ 0x2
   512  0072                     	ds	1
   513                           	global	___ftpack@exp
   514  0073                     ___ftpack@exp:	; 1 bytes @ 0x3
   515  0073                     	ds	1
   516  0074                     ??_delay:	; 0 bytes @ 0x4
   517  0074                     ??___lwdiv:	; 0 bytes @ 0x4
   518  0074                     ??___lwmod:	; 0 bytes @ 0x4
   519                           	global	___ftpack@sign
   520  0074                     ___ftpack@sign:	; 1 bytes @ 0x4
   521  0074                     	ds	1
   522  0075                     ??___ftpack:	; 0 bytes @ 0x5
   523                           	global	UART_REC@rec_data
   524  0075                     UART_REC@rec_data:	; 1 bytes @ 0x5
   525                           	global	___lwmod@counter
   526  0075                     ___lwmod@counter:	; 1 bytes @ 0x5
   527                           	global	___lwdiv@quotient
   528  0075                     ___lwdiv@quotient:	; 2 bytes @ 0x5
   529  0075                     	ds	1
   530                           	global	?_send_packet
   531  0076                     ?_send_packet:	; 2 bytes @ 0x6
   532                           	global	send_packet@inst
   533  0076                     send_packet@inst:	; 1 bytes @ 0x6
   534  0076                     	ds	1
   535                           	global	send_packet@data
   536  0077                     send_packet@data:	; 1 bytes @ 0x7
   537                           	global	___lwdiv@counter
   538  0077                     ___lwdiv@counter:	; 1 bytes @ 0x7
   539  0077                     	ds	1
   540  0078                     ??_send_config:	; 0 bytes @ 0x8
   541  0078                     ??_send_char:	; 0 bytes @ 0x8
   542                           	global	?___fttol
   543  0078                     ?___fttol:	; 4 bytes @ 0x8
   544                           	global	send_packet@param_len
   545  0078                     send_packet@param_len:	; 1 bytes @ 0x8
   546                           	global	send_config@data
   547  0078                     send_config@data:	; 1 bytes @ 0x8
   548                           	global	send_char@data
   549  0078                     send_char@data:	; 1 bytes @ 0x8
   550                           	global	___fttol@f1
   551  0078                     ___fttol@f1:	; 3 bytes @ 0x8
   552  0078                     	ds	1
   553  0079                     ??_lcdinit:	; 0 bytes @ 0x9
   554  0079                     ??_lcd_clr:	; 0 bytes @ 0x9
   555  0079                     ??_lcd_goto:	; 0 bytes @ 0x9
   556                           	global	?_send_string
   557  0079                     ?_send_string:	; 0 bytes @ 0x9
   558  0079                     ??_send_packet:	; 0 bytes @ 0x9
   559                           	global	send_string@s
   560  0079                     send_string@s:	; 2 bytes @ 0x9
   561  0079                     	ds	1
   562                           	global	lcd_goto@data
   563  007A                     lcd_goto@data:	; 1 bytes @ 0xA
   564  007A                     	ds	1
   565  007B                     ??_send_string:	; 0 bytes @ 0xB
   566                           	global	?_lcd_num
   567  007B                     ?_lcd_num:	; 1 bytes @ 0xB
   568                           	global	?_SetTorqueOnOff
   569  007B                     ?_SetTorqueOnOff:	; 2 bytes @ 0xB
   570                           	global	?_SetPos
   571  007B                     ?_SetPos:	; 2 bytes @ 0xB
   572                           	global	?_SetLED
   573  007B                     ?_SetLED:	; 2 bytes @ 0xB
   574                           	global	?_GetPos
   575  007B                     ?_GetPos:	; 2 bytes @ 0xB
   576                           	global	SetTorqueOnOff@on_off
   577  007B                     SetTorqueOnOff@on_off:	; 1 bytes @ 0xB
   578                           	global	SetLED@on_off
   579  007B                     SetLED@on_off:	; 1 bytes @ 0xB
   580                           	global	GetPos@data
   581  007B                     GetPos@data:	; 1 bytes @ 0xB
   582                           	global	SetPos@Position
   583  007B                     SetPos@Position:	; 2 bytes @ 0xB
   584                           	global	lcd_num@number
   585  007B                     lcd_num@number:	; 2 bytes @ 0xB
   586  007B                     	ds	1
   587  007C                     ??___lwtoft:	; 0 bytes @ 0xC
   588                           	global	SetTorqueOnOff@Write_Reg
   589  007C                     SetTorqueOnOff@Write_Reg:	; 1 bytes @ 0xC
   590                           	global	SetLED@Write_Reg
   591  007C                     SetLED@Write_Reg:	; 1 bytes @ 0xC
   592                           	global	GetPos@ServoID
   593  007C                     GetPos@ServoID:	; 1 bytes @ 0xC
   594  007C                     	ds	1
   595                           	global	SetPos@Write_Reg
   596  007D                     SetPos@Write_Reg:	; 1 bytes @ 0xD
   597                           	global	lcd_num@digit
   598  007D                     lcd_num@digit:	; 1 bytes @ 0xD
   599  007D                     	ds	1
   600                           psect	cstackBANK0,class=BANK0,space=1
   601                           global __pcstackBANK0
   602  0020                     __pcstackBANK0:
   603  0020                     ??_lcd_num:	; 0 bytes @ 0x0
   604  0020                     ??___fttol:	; 0 bytes @ 0x0
   605                           	global	send_packet@Status
   606  0020                     send_packet@Status:	; 16 bytes @ 0x0
   607  0020                     	ds	4
   608                           	global	___fttol@sign1
   609  0024                     ___fttol@sign1:	; 1 bytes @ 0x4
   610                           	global	lcd_num@num
   611  0024                     lcd_num@num:	; 16 bytes @ 0x4
   612  0024                     	ds	1
   613                           	global	___fttol@lval
   614  0025                     ___fttol@lval:	; 4 bytes @ 0x5
   615  0025                     	ds	4
   616                           	global	___fttol@exp1
   617  0029                     ___fttol@exp1:	; 1 bytes @ 0x9
   618  0029                     	ds	1
   619                           	global	?___lwtoft
   620  002A                     ?___lwtoft:	; 3 bytes @ 0xA
   621                           	global	___lwtoft@c
   622  002A                     ___lwtoft@c:	; 2 bytes @ 0xA
   623  002A                     	ds	3
   624                           	global	?___ftmul
   625  002D                     ?___ftmul:	; 3 bytes @ 0xD
   626                           	global	___ftmul@f1
   627  002D                     ___ftmul@f1:	; 3 bytes @ 0xD
   628  002D                     	ds	3
   629                           	global	___ftmul@f2
   630  0030                     ___ftmul@f2:	; 3 bytes @ 0x10
   631                           	global	send_packet@TxBuff
   632  0030                     send_packet@TxBuff:	; 16 bytes @ 0x10
   633  0030                     	ds	3
   634  0033                     ??___ftmul:	; 0 bytes @ 0x13
   635  0033                     	ds	1
   636                           	global	lcd_num@j
   637  0034                     lcd_num@j:	; 1 bytes @ 0x14
   638  0034                     	ds	1
   639                           	global	lcd_num@k
   640  0035                     lcd_num@k:	; 1 bytes @ 0x15
   641  0035                     	ds	1
   642                           	global	lcd_num@i
   643  0036                     lcd_num@i:	; 1 bytes @ 0x16
   644  0036                     	ds	1
   645                           	global	___ftmul@exp
   646  0037                     ___ftmul@exp:	; 1 bytes @ 0x17
   647  0037                     	ds	1
   648                           	global	___ftmul@f3_as_product
   649  0038                     ___ftmul@f3_as_product:	; 3 bytes @ 0x18
   650  0038                     	ds	3
   651                           	global	___ftmul@cntr
   652  003B                     ___ftmul@cntr:	; 1 bytes @ 0x1B
   653  003B                     	ds	1
   654                           	global	___ftmul@sign
   655  003C                     ___ftmul@sign:	; 1 bytes @ 0x1C
   656  003C                     	ds	1
   657                           	global	?___ftdiv
   658  003D                     ?___ftdiv:	; 3 bytes @ 0x1D
   659                           	global	___ftdiv@f2
   660  003D                     ___ftdiv@f2:	; 3 bytes @ 0x1D
   661  003D                     	ds	3
   662                           	global	send_packet@ID
   663  0040                     send_packet@ID:	; 1 bytes @ 0x20
   664                           	global	___ftdiv@f1
   665  0040                     ___ftdiv@f1:	; 3 bytes @ 0x20
   666  0040                     	ds	1
   667                           	global	send_packet@error
   668  0041                     send_packet@error:	; 2 bytes @ 0x21
   669  0041                     	ds	2
   670  0043                     ??___ftdiv:	; 0 bytes @ 0x23
   671                           	global	send_packet@checksum
   672  0043                     send_packet@checksum:	; 1 bytes @ 0x23
   673  0043                     	ds	1
   674                           	global	send_packet@packet_len
   675  0044                     send_packet@packet_len:	; 1 bytes @ 0x24
   676  0044                     	ds	1
   677                           	global	send_packet@i
   678  0045                     send_packet@i:	; 2 bytes @ 0x25
   679  0045                     	ds	2
   680  0047                     ??_SetTorqueOnOff:	; 0 bytes @ 0x27
   681  0047                     ??_SetPos:	; 0 bytes @ 0x27
   682  0047                     ??_SetLED:	; 0 bytes @ 0x27
   683  0047                     ??_GetPos:	; 0 bytes @ 0x27
   684                           	global	___ftdiv@cntr
   685  0047                     ___ftdiv@cntr:	; 1 bytes @ 0x27
   686  0047                     	ds	1
   687                           	global	___ftdiv@f3
   688  0048                     ___ftdiv@f3:	; 3 bytes @ 0x28
   689  0048                     	ds	2
   690                           	global	SetPos@ServoID
   691  004A                     SetPos@ServoID:	; 1 bytes @ 0x2A
   692                           	global	SetTorqueOnOff@ServoID
   693  004A                     SetTorqueOnOff@ServoID:	; 1 bytes @ 0x2A
   694                           	global	SetLED@ServoID
   695  004A                     SetLED@ServoID:	; 1 bytes @ 0x2A
   696  004A                     	ds	1
   697                           	global	___ftdiv@exp
   698  004B                     ___ftdiv@exp:	; 1 bytes @ 0x2B
   699                           	global	SetTorqueOnOff@TxBuff
   700  004B                     SetTorqueOnOff@TxBuff:	; 2 bytes @ 0x2B
   701                           	global	SetLED@TxBuff
   702  004B                     SetLED@TxBuff:	; 2 bytes @ 0x2B
   703                           	global	SetPos@TxBuff
   704  004B                     SetPos@TxBuff:	; 3 bytes @ 0x2B
   705  004B                     	ds	1
   706                           	global	___ftdiv@sign
   707  004C                     ___ftdiv@sign:	; 1 bytes @ 0x2C
   708  004C                     	ds	2
   709  004E                     ??_main:	; 0 bytes @ 0x2E
   710  004E                     	ds	3
   711                           	global	main@DATA
   712  0051                     main@DATA:	; 10 bytes @ 0x31
   713  0051                     	ds	10
   714                           	global	main@angle
   715  005B                     main@angle:	; 2 bytes @ 0x3B
   716  005B                     	ds	2
   717                           	global	_main$972
   718  005D                     _main$972:	; 2 bytes @ 0x3D
   719  005D                     	ds	2
   720                           	global	main@pos
   721  005F                     main@pos:	; 2 bytes @ 0x3F
   722  005F                     	ds	2
   723                           ;!
   724                           ;!Data Sizes:
   725                           ;!    Strings     61
   726                           ;!    Constant    0
   727                           ;!    Data        4
   728                           ;!    BSS         1
   729                           ;!    Persistent  0
   730                           ;!    Stack       0
   731                           ;!
   732                           ;!Auto Spaces:
   733                           ;!    Space          Size  Autos    Used
   734                           ;!    COMMON           14     14      14
   735                           ;!    BANK0            80     65      70
   736                           ;!    BANK1            80      0       0
   737                           ;!    BANK3            96      0       0
   738                           ;!    BANK2            96      0       0
   739                           
   740                           ;!
   741                           ;!Pointer List with Targets:
   742                           ;!
   743                           ;!    ?___ftpack	float  size(1) Largest target is 0
   744                           ;!
   745                           ;!    ?___lwdiv	unsigned int  size(1) Largest target is 0
   746                           ;!
   747                           ;!    ?___lwmod	unsigned int  size(1) Largest target is 0
   748                           ;!
   749                           ;!    ?___ftmul	float  size(1) Largest target is 0
   750                           ;!
   751                           ;!    ?___fttol	long  size(1) Largest target is 0
   752                           ;!
   753                           ;!    ?___lwtoft	float  size(1) Largest target is 0
   754                           ;!
   755                           ;!    ?___ftdiv	float  size(1) Largest target is 0
   756                           ;!
   757                           ;!    ?_GetPos	unsigned short  size(1) Largest target is 0
   758                           ;!
   759                           ;!    ?_SetLED	unsigned short  size(1) Largest target is 0
   760                           ;!
   761                           ;!    ?_SetPos	unsigned short  size(1) Largest target is 0
   762                           ;!
   763                           ;!    ?_SetTorqueOnOff	unsigned short  size(1) Largest target is 0
   764                           ;!
   765                           ;!    ?_send_packet	unsigned short  size(1) Largest target is 0
   766                           ;!
   767                           ;!    send_string@s	PTR const unsigned char  size(2) Largest target is 18
   768                           ;!		 -> lcd_num@num(BANK0[16]), STR_4(CODE[16]), STR_3(CODE[17]), STR_2(CODE[18]), 
   769                           ;!		 -> STR_1(CODE[10]), 
   770                           ;!
   771                           ;!    GetPos@data	PTR unsigned char  size(1) Largest target is 10
   772                           ;!		 -> main@DATA(BANK0[10]), 
   773                           ;!
   774                           ;!    send_packet@data	PTR unsigned char  size(1) Largest target is 10
   775                           ;!		 -> main@DATA(BANK0[10]), SetAction@TxBuff(COMMON[1]), FactoryReset@TxBuff(COMMON[1]
                                 ), SetBaudRate@TxBuff(COMMON[2]), 
   776                           ;!		 -> SetMarginSlopePunch@TxBuff(COMMON[5]), SetAlarmShutDown@TxBuff(COMMON[2]), SetAl
                                 armLED@TxBuff(COMMON[2]), SetLED@TxBuff(BANK0[2]), 
   777                           ;!		 -> SetID@TxBuff(COMMON[2]), SetVoltageLimit@TxBuff(COMMON[3]), SetTemperatureLimit@
                                 TxBuff(COMMON[2]), SetTorqueLimit@TxBuff(COMMON[3]), 
   778                           ;!		 -> SetAngleLimit@TxBuff(COMMON[5]), SetSpeed@TxBuff(COMMON[3]), SetTorqueOnOff@TxBu
                                 ff(BANK0[2]), SetPos@TxBuff(BANK0[3]), 
   779                           ;!
   780                           
   781                           
   782                           ;!
   783                           ;!Critical Paths under _main in COMMON
   784                           ;!
   785                           ;!    _main->_SetPos
   786                           ;!    _main->_lcd_num
   787                           ;!    _SetTorqueOnOff->_send_packet
   788                           ;!    _SetPos->_send_packet
   789                           ;!    _SetLED->_send_packet
   790                           ;!    _GetPos->_send_packet
   791                           ;!    _send_packet->_UART_REC
   792                           ;!    _lcdinit->_send_config
   793                           ;!    _lcd_clr->_send_config
   794                           ;!    _lcd_goto->_send_config
   795                           ;!    _lcd_num->_send_string
   796                           ;!    _send_string->_send_char
   797                           ;!    _send_config->_delay
   798                           ;!    _send_char->_delay
   799                           ;!    ___ftdiv->___lwtoft
   800                           ;!    ___ftmul->___lwtoft
   801                           ;!    ___fttol->___ftpack
   802                           ;!    ___lwtoft->___fttol
   803                           ;!
   804                           ;!Critical Paths under _main in BANK0
   805                           ;!
   806                           ;!    _main->_SetPos
   807                           ;!    _SetTorqueOnOff->_send_packet
   808                           ;!    _SetPos->_send_packet
   809                           ;!    _SetLED->_send_packet
   810                           ;!    _GetPos->_send_packet
   811                           ;!    ___ftdiv->___ftmul
   812                           ;!    ___ftmul->___lwtoft
   813                           ;!    ___lwtoft->___fttol
   814                           ;!
   815                           ;!Critical Paths under _main in BANK1
   816                           ;!
   817                           ;!    None.
   818                           ;!
   819                           ;!Critical Paths under _main in BANK3
   820                           ;!
   821                           ;!    None.
   822                           ;!
   823                           ;!Critical Paths under _main in BANK2
   824                           ;!
   825                           ;!    None.
   826                           
   827 ;;
   828 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   829 ;;
   830                           
   831                           ;!
   832                           ;!Call Graph Tables:
   833                           ;!
   834                           ;! ---------------------------------------------------------------------------------
   835                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   836                           ;! ---------------------------------------------------------------------------------
   837                           ;! (0) _main                                                19    19      0    9372
   838                           ;!                                             46 BANK0     19    19      0
   839                           ;!                             _initIO
   840                           ;!                            _lcdinit
   841                           ;!                          _UART_INIT
   842                           ;!                            _lcd_clr
   843                           ;!                           _lcd_goto
   844                           ;!                        _send_string
   845                           ;!                             _SetLED
   846                           ;!                             _SetPos
   847                           ;!                     _SetTorqueOnOff
   848                           ;!                             _GetPos
   849                           ;!                           ___lwtoft
   850                           ;!                            ___fttol
   851                           ;!                            ___ftmul
   852                           ;!                            ___ftdiv
   853                           ;!                            _lcd_num
   854                           ;! ---------------------------------------------------------------------------------
   855                           ;! (1) _SetTorqueOnOff                                       8     6      2    1546
   856                           ;!                                             11 COMMON     2     0      2
   857                           ;!                                             39 BANK0      6     6      0
   858                           ;!                        _send_packet
   859                           ;! ---------------------------------------------------------------------------------
   860                           ;! (1) _SetPos                                              10     7      3    1592
   861                           ;!                                             11 COMMON     3     0      3
   862                           ;!                                             39 BANK0      7     7      0
   863                           ;!                        _send_packet
   864                           ;! ---------------------------------------------------------------------------------
   865                           ;! (1) _SetLED                                               8     6      2    1546
   866                           ;!                                             11 COMMON     2     0      2
   867                           ;!                                             39 BANK0      6     6      0
   868                           ;!                        _send_packet
   869                           ;! ---------------------------------------------------------------------------------
   870                           ;! (1) _GetPos                                               5     4      1    1514
   871                           ;!                                             11 COMMON     2     1      1
   872                           ;!                                             39 BANK0      3     3      0
   873                           ;!                        _send_packet
   874                           ;! ---------------------------------------------------------------------------------
   875                           ;! (2) _send_packet                                         44    41      3    1426
   876                           ;!                                              6 COMMON     5     2      3
   877                           ;!                                              0 BANK0     39    39      0
   878                           ;!                          _UART_SEND
   879                           ;!                           _UART_REC
   880                           ;! ---------------------------------------------------------------------------------
   881                           ;! (3) _UART_SEND                                            1     1      0      22
   882                           ;!                                              0 COMMON     1     1      0
   883                           ;! ---------------------------------------------------------------------------------
   884                           ;! (3) _UART_REC                                             6     6      0      48
   885                           ;!                                              0 COMMON     6     6      0
   886                           ;! ---------------------------------------------------------------------------------
   887                           ;! (1) _initIO                                               0     0      0       0
   888                           ;! ---------------------------------------------------------------------------------
   889                           ;! (1) _lcdinit                                              0     0      0     179
   890                           ;!                        _send_config
   891                           ;!                            _lcd_clr
   892                           ;! ---------------------------------------------------------------------------------
   893                           ;! (1) _UART_INIT                                            0     0      0       0
   894                           ;! ---------------------------------------------------------------------------------
   895                           ;! (1) _lcd_clr                                              0     0      0     112
   896                           ;!                        _send_config
   897                           ;!                              _delay
   898                           ;! ---------------------------------------------------------------------------------
   899                           ;! (1) _lcd_goto                                             2     2      0     156
   900                           ;!                                              9 COMMON     2     2      0
   901                           ;!                        _send_config
   902                           ;! ---------------------------------------------------------------------------------
   903                           ;! (1) _lcd_num                                             26    23      3     914
   904                           ;!                                             11 COMMON     3     0      3
   905                           ;!                                              0 BANK0     23    23      0
   906                           ;!                            ___lwmod
   907                           ;!                            ___lwdiv
   908                           ;!                        _send_string
   909                           ;!                          _send_char
   910                           ;! ---------------------------------------------------------------------------------
   911                           ;! (2) _send_string                                          2     0      2     134
   912                           ;!                                              9 COMMON     2     0      2
   913                           ;!                          _send_char
   914                           ;! ---------------------------------------------------------------------------------
   915                           ;! (2) _send_config                                          1     1      0      67
   916                           ;!                                              8 COMMON     1     1      0
   917                           ;!                              _delay
   918                           ;! ---------------------------------------------------------------------------------
   919                           ;! (2) _send_char                                            1     1      0      67
   920                           ;!                                              8 COMMON     1     1      0
   921                           ;!                              _delay
   922                           ;! ---------------------------------------------------------------------------------
   923                           ;! (3) _delay                                                8     4      4      45
   924                           ;!                                              0 COMMON     8     4      4
   925                           ;! ---------------------------------------------------------------------------------
   926                           ;! (2) ___lwdiv                                              8     4      4     162
   927                           ;!                                              0 COMMON     8     4      4
   928                           ;! ---------------------------------------------------------------------------------
   929                           ;! (2) ___lwmod                                              6     2      4     159
   930                           ;!                                              0 COMMON     6     2      4
   931                           ;! ---------------------------------------------------------------------------------
   932                           ;! (1) ___ftdiv                                             16    10      6     489
   933                           ;!                                             29 BANK0     16    10      6
   934                           ;!                           ___ftpack
   935                           ;!                            ___ftmul (ARG)
   936                           ;!                           ___lwtoft (ARG)
   937                           ;!                            ___fttol (ARG)
   938                           ;! ---------------------------------------------------------------------------------
   939                           ;! (1) ___ftmul                                             16    10      6     535
   940                           ;!                                             13 BANK0     16    10      6
   941                           ;!                           ___ftpack
   942                           ;!                           ___lwtoft (ARG)
   943                           ;!                            ___fttol (ARG)
   944                           ;! ---------------------------------------------------------------------------------
   945                           ;! (1) ___fttol                                             14    10      4     252
   946                           ;!                                              8 COMMON     4     0      4
   947                           ;!                                              0 BANK0     10    10      0
   948                           ;!                           ___ftpack (ARG)
   949                           ;! ---------------------------------------------------------------------------------
   950                           ;! (1) ___lwtoft                                             4     1      3     231
   951                           ;!                                             12 COMMON     1     1      0
   952                           ;!                                             10 BANK0      3     0      3
   953                           ;!                           ___ftpack
   954                           ;!                            ___fttol (ARG)
   955                           ;! ---------------------------------------------------------------------------------
   956                           ;! (2) ___ftpack                                             8     3      5     209
   957                           ;!                                              0 COMMON     8     3      5
   958                           ;! ---------------------------------------------------------------------------------
   959                           ;! Estimated maximum stack depth 3
   960                           ;! ---------------------------------------------------------------------------------
   961                           ;!
   962                           ;! Call Graph Graphs:
   963                           ;!
   964                           ;! _main (ROOT)
   965                           ;!   _initIO
   966                           ;!   _lcdinit
   967                           ;!     _send_config
   968                           ;!       _delay
   969                           ;!     _lcd_clr
   970                           ;!       _send_config
   971                           ;!         _delay
   972                           ;!       _delay
   973                           ;!   _UART_INIT
   974                           ;!   _lcd_clr
   975                           ;!     _send_config
   976                           ;!       _delay
   977                           ;!     _delay
   978                           ;!   _lcd_goto
   979                           ;!     _send_config
   980                           ;!       _delay
   981                           ;!   _send_string
   982                           ;!     _send_char
   983                           ;!       _delay
   984                           ;!   _SetLED
   985                           ;!     _send_packet
   986                           ;!       _UART_SEND
   987                           ;!       _UART_REC
   988                           ;!   _SetPos
   989                           ;!     _send_packet
   990                           ;!       _UART_SEND
   991                           ;!       _UART_REC
   992                           ;!   _SetTorqueOnOff
   993                           ;!     _send_packet
   994                           ;!       _UART_SEND
   995                           ;!       _UART_REC
   996                           ;!   _GetPos
   997                           ;!     _send_packet
   998                           ;!       _UART_SEND
   999                           ;!       _UART_REC
  1000                           ;!   ___lwtoft
  1001                           ;!     ___ftpack
  1002                           ;!     ___fttol (ARG)
  1003                           ;!       ___ftpack (ARG)
  1004                           ;!   ___fttol
  1005                           ;!     ___ftpack (ARG)
  1006                           ;!   ___ftmul
  1007                           ;!     ___ftpack
  1008                           ;!     ___lwtoft (ARG)
  1009                           ;!       ___ftpack
  1010                           ;!       ___fttol (ARG)
  1011                           ;!         ___ftpack (ARG)
  1012                           ;!     ___fttol (ARG)
  1013                           ;!       ___ftpack (ARG)
  1014                           ;!   ___ftdiv
  1015                           ;!     ___ftpack
  1016                           ;!     ___ftmul (ARG)
  1017                           ;!       ___ftpack
  1018                           ;!       ___lwtoft (ARG)
  1019                           ;!         ___ftpack
  1020                           ;!         ___fttol (ARG)
  1021                           ;!           ___ftpack (ARG)
  1022                           ;!       ___fttol (ARG)
  1023                           ;!         ___ftpack (ARG)
  1024                           ;!     ___lwtoft (ARG)
  1025                           ;!       ___ftpack
  1026                           ;!       ___fttol (ARG)
  1027                           ;!         ___ftpack (ARG)
  1028                           ;!     ___fttol (ARG)
  1029                           ;!       ___ftpack (ARG)
  1030                           ;!   _lcd_num
  1031                           ;!     ___lwmod
  1032                           ;!     ___lwdiv
  1033                           ;!     _send_string
  1034                           ;!       _send_char
  1035                           ;!         _delay
  1036                           ;!     _send_char
  1037                           ;!       _delay
  1038                           ;!
  1039                           
  1040                           ;! Address spaces:
  1041                           
  1042                           ;!Name               Size   Autos  Total    Cost      Usage
  1043                           ;!BANK3               60      0       0       9        0.0%
  1044                           ;!BITBANK3            60      0       0       8        0.0%
  1045                           ;!SFR3                 0      0       0       4        0.0%
  1046                           ;!BITSFR3              0      0       0       4        0.0%
  1047                           ;!BANK2               60      0       0      11        0.0%
  1048                           ;!BITBANK2            60      0       0      10        0.0%
  1049                           ;!SFR2                 0      0       0       5        0.0%
  1050                           ;!BITSFR2              0      0       0       5        0.0%
  1051                           ;!BANK1               50      0       0       7        0.0%
  1052                           ;!BITBANK1            50      0       0       6        0.0%
  1053                           ;!SFR1                 0      0       0       2        0.0%
  1054                           ;!BITSFR1              0      0       0       2        0.0%
  1055                           ;!BANK0               50     41      46       5       87.5%
  1056                           ;!BITBANK0            50      0       0       4        0.0%
  1057                           ;!SFR0                 0      0       0       1        0.0%
  1058                           ;!BITSFR0              0      0       0       1        0.0%
  1059                           ;!COMMON               E      E       E       1      100.0%
  1060                           ;!BITCOMMON            E      0       0       0        0.0%
  1061                           ;!CODE                 0      0       0       0        0.0%
  1062                           ;!DATA                 0      0      58      12        0.0%
  1063                           ;!ABS                  0      0      54       3        0.0%
  1064                           ;!NULL                 0      0       0       0        0.0%
  1065                           ;!STACK                0      0       4       2        0.0%
  1066                           ;!EEDATA             100      0       0       0        0.0%
  1067                           
  1068                           	global	_main
  1069                           
  1070 ;; *************** function _main *****************
  1071 ;; Defined at:
  1072 ;;		line 47 in file "Main.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  DATA           10   49[BANK0 ] unsigned char [10]
  1077 ;;  pos             2   63[BANK0 ] unsigned short 
  1078 ;;  angle           2   59[BANK0 ] unsigned short 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;		None               void
  1081 ;; Registers used:
  1082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : 17F/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1088 ;;      Params:         0       0       0       0       0
  1089 ;;      Locals:         0      16       0       0       0
  1090 ;;      Temps:          0       3       0       0       0
  1091 ;;      Totals:         0      19       0       0       0
  1092 ;;Total ram usage:       19 bytes
  1093 ;; Hardware stack levels required when called:    4
  1094 ;; This function calls:
  1095 ;;		_initIO
  1096 ;;		_lcdinit
  1097 ;;		_UART_INIT
  1098 ;;		_lcd_clr
  1099 ;;		_lcd_goto
  1100 ;;		_send_string
  1101 ;;		_SetLED
  1102 ;;		_SetPos
  1103 ;;		_SetTorqueOnOff
  1104 ;;		_GetPos
  1105 ;;		___lwtoft
  1106 ;;		___fttol
  1107 ;;		___ftmul
  1108 ;;		___ftdiv
  1109 ;;		_lcd_num
  1110 ;; This function is called by:
  1111 ;;		Startup code after reset
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           psect	maintext,global,class=CODE,delta=2,split=1
  1115                           global __pmaintext
  1116  063B                     __pmaintext:	;psect for function _main
  1117                           psect	maintext
  1118                           	file	"Main.c"
  1119                           	line	47
  1120                           	global	__size_of_main
  1121  01C5                     	__size_of_main	equ	__end_of_main-_main
  1122                           	
  1123  063B                     _main:	
  1124                           	opt	stack 4
  1125                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1126                           	line	51
  1127                           	
  1128  063B                     l2438:	
  1129                           ;Main.c: 48: unsigned char DATA[10];
  1130                           ;Main.c: 49: unsigned short pos, angle;
  1131                           ;Main.c: 51: initIO();
  1132  063B  120A  158A  262E   	fcall	_initIO
              120A  118A         
  1133                           	line	52
  1134                           ;Main.c: 52: lcdinit();
  1135  0640  120A  158A  274F   	fcall	_lcdinit
              120A  118A         
  1136                           	line	53
  1137                           ;Main.c: 53: UART_INIT();
  1138  0645  120A  158A  2614   	fcall	_UART_INIT
              120A  118A         
  1139                           	line	55
  1140                           	
  1141  064A                     l2440:	
  1142                           ;Main.c: 55: _delay((unsigned long)((100)*(20000000/4000.0)));
  1143                           	opt asmopt_off
  1144  064A  3003               movlw  3
  1145  064B  1283               	bcf	status, 5	;RP0=0, select bank0
  1146  064C  1303               	bcf	status, 6	;RP1=0, select bank0
  1147  064D  00D0               movwf	((??_main+0)+0+2),f
  1148  064E  308A               movlw	138
  1149  064F  00CF               movwf	((??_main+0)+0+1),f
  1150  0650  3056               	movlw	86
  1151  0651  00CE               movwf	((??_main+0)+0),f
  1152  0652                     u1977:
  1153  0652  0BCE               	decfsz	((??_main+0)+0),f
  1154  0653  2E52               	goto	u1977
  1155  0654  0BCF               	decfsz	((??_main+0)+0+1),f
  1156  0655  2E52               	goto	u1977
  1157  0656  0BD0               	decfsz	((??_main+0)+0+2),f
  1158  0657  2E52               	goto	u1977
  1159  0658  2E59               	nop2
  1160                           opt asmopt_on
  1161                           
  1162                           	line	57
  1163                           	
  1164  0659                     l2442:	
  1165                           ;Main.c: 57: lcd_clr();
  1166  0659  120A  158A  25EA   	fcall	_lcd_clr
              120A  118A         
  1167                           	line	58
  1168                           	
  1169  065E                     l2444:	
  1170                           ;Main.c: 58: lcd_goto(0);
  1171  065E  3000               	movlw	(0)
  1172  065F  120A  158A  2663   	fcall	_lcd_goto
              120A  118A         
  1173                           	line	59
  1174                           	
  1175  0664                     l2446:	
  1176                           ;Main.c: 59: send_string("G15 Demo ");
  1177  0664  3034               	movlw	low((STR_1-__stringbase))
  1178  0665  00F9               	movwf	(?_send_string)
  1179  0666  3080               	movlw	80h
  1180  0667  00FA               	movwf	(?_send_string+1)
  1181  0668  120A  158A  27A1   	fcall	_send_string
              120A  118A         
  1182                           	line	60
  1183                           	
  1184  066D                     l2448:	
  1185                           ;Main.c: 60: lcd_goto(20);
  1186  066D  3014               	movlw	(014h)
  1187  066E  120A  158A  2663   	fcall	_lcd_goto
              120A  118A         
  1188                           	line	61
  1189                           	
  1190  0673                     l2450:	
  1191                           ;Main.c: 61: send_string("press SW1 or SW2 ");
  1192  0673  3001               	movlw	low((STR_2-__stringbase))
  1193  0674  00F9               	movwf	(?_send_string)
  1194  0675  3080               	movlw	80h
  1195  0676  00FA               	movwf	(?_send_string+1)
  1196  0677  120A  158A  27A1   	fcall	_send_string
              120A  118A         
  1197                           	line	64
  1198                           ;Main.c: 64: _delay((unsigned long)((500)*(20000000/4000.0)));
  1199                           	opt asmopt_off
  1200  067C  300D               movlw  13
  1201  067D  1283               	bcf	status, 5	;RP0=0, select bank0
  1202  067E  1303               	bcf	status, 6	;RP1=0, select bank0
  1203  067F  00D0               movwf	((??_main+0)+0+2),f
  1204  0680  30AF               movlw	175
  1205  0681  00CF               movwf	((??_main+0)+0+1),f
  1206  0682  30C1               	movlw	193
  1207  0683  00CE               movwf	((??_main+0)+0),f
  1208  0684                     u1987:
  1209  0684  0BCE               	decfsz	((??_main+0)+0),f
  1210  0685  2E84               	goto	u1987
  1211  0686  0BCF               	decfsz	((??_main+0)+0+1),f
  1212  0687  2E84               	goto	u1987
  1213  0688  0BD0               	decfsz	((??_main+0)+0+2),f
  1214  0689  2E84               	goto	u1987
  1215  068A  0000               	nop
  1216                           opt asmopt_on
  1217                           
  1218                           	line	65
  1219                           ;Main.c: 65: _delay((unsigned long)((500)*(20000000/4000.0)));
  1220                           	opt asmopt_off
  1221  068B  300D               movlw  13
  1222  068C  1283               	bcf	status, 5	;RP0=0, select bank0
  1223  068D  1303               	bcf	status, 6	;RP1=0, select bank0
  1224  068E  00D0               movwf	((??_main+0)+0+2),f
  1225  068F  30AF               movlw	175
  1226  0690  00CF               movwf	((??_main+0)+0+1),f
  1227  0691  30C1               	movlw	193
  1228  0692  00CE               movwf	((??_main+0)+0),f
  1229  0693                     u1997:
  1230  0693  0BCE               	decfsz	((??_main+0)+0),f
  1231  0694  2E93               	goto	u1997
  1232  0695  0BCF               	decfsz	((??_main+0)+0+1),f
  1233  0696  2E93               	goto	u1997
  1234  0697  0BD0               	decfsz	((??_main+0)+0+2),f
  1235  0698  2E93               	goto	u1997
  1236  0699  0000               	nop
  1237                           opt asmopt_on
  1238                           
  1239  069A  2E9B               	goto	l2452
  1240                           	line	69
  1241                           ;Main.c: 69: while(1){
  1242                           	
  1243  069B                     l223:	
  1244                           	line	71
  1245                           	
  1246  069B                     l2452:	
  1247                           ;Main.c: 71: if(RB0==0){
  1248  069B  1283               	bcf	status, 5	;RP0=0, select bank0
  1249  069C  1303               	bcf	status, 6	;RP1=0, select bank0
  1250  069D  1806               	btfsc	(48/8),(48)&7	;volatile
  1251  069E  2EA0               	goto	u1921
  1252  069F  2EA1               	goto	u1920
  1253  06A0                     u1921:
  1254  06A0  2F2D               	goto	l224
  1255  06A1                     u1920:
  1256                           	line	73
  1257                           	
  1258  06A1                     l2454:	
  1259                           ;Main.c: 73: lcd_goto(20);
  1260  06A1  3014               	movlw	(014h)
  1261  06A2  120A  158A  2663   	fcall	_lcd_goto
              120A  118A         
  1262                           	line	74
  1263                           	
  1264  06A7                     l2456:	
  1265                           ;Main.c: 74: send_string("Positioning     ");
  1266  06A7  3013               	movlw	low((STR_3-__stringbase))
  1267  06A8  00F9               	movwf	(?_send_string)
  1268  06A9  3080               	movlw	80h
  1269  06AA  00FA               	movwf	(?_send_string+1)
  1270  06AB  120A  158A  27A1   	fcall	_send_string
              120A  118A         
  1271  06B0  2EB1               	goto	l2458
  1272                           	line	75
  1273                           ;Main.c: 75: while(1){
  1274                           	
  1275  06B1                     l225:	
  1276                           	line	76
  1277                           	
  1278  06B1                     l2458:	
  1279                           ;Main.c: 76: RB6^=1;
  1280  06B1  1283               	bcf	status, 5	;RP0=0, select bank0
  1281  06B2  1303               	bcf	status, 6	;RP1=0, select bank0
  1282  06B3  3040               	movlw	1<<((54)&7)
  1283  06B4  0686               	xorwf	((54)/8),f
  1284                           	line	77
  1285                           	
  1286  06B5                     l2460:	
  1287                           ;Main.c: 77: _delay((unsigned long)((500)*(20000000/4000.0)));
  1288                           	opt asmopt_off
  1289  06B5  300D               movlw  13
  1290  06B6  00D0               movwf	((??_main+0)+0+2),f
  1291  06B7  30AF               movlw	175
  1292  06B8  00CF               movwf	((??_main+0)+0+1),f
  1293  06B9  30C1               	movlw	193
  1294  06BA  00CE               movwf	((??_main+0)+0),f
  1295  06BB                     u2007:
  1296  06BB  0BCE               	decfsz	((??_main+0)+0),f
  1297  06BC  2EBB               	goto	u2007
  1298  06BD  0BCF               	decfsz	((??_main+0)+0+1),f
  1299  06BE  2EBB               	goto	u2007
  1300  06BF  0BD0               	decfsz	((??_main+0)+0+2),f
  1301  06C0  2EBB               	goto	u2007
  1302  06C1  0000               	nop
  1303                           opt asmopt_on
  1304                           
  1305                           	line	78
  1306                           	
  1307  06C2                     l2462:	
  1308                           ;Main.c: 78: RB7^=1;
  1309  06C2  1283               	bcf	status, 5	;RP0=0, select bank0
  1310  06C3  1303               	bcf	status, 6	;RP1=0, select bank0
  1311  06C4  3080               	movlw	1<<((55)&7)
  1312  06C5  0686               	xorwf	((55)/8),f
  1313                           	line	80
  1314                           	
  1315  06C6                     l2464:	
  1316                           ;Main.c: 80: SetLED(1,1, 0x03);
  1317  06C6  01FB               	clrf	(?_SetLED)
  1318  06C7  0AFB               	incf	(?_SetLED),f
  1319  06C8  3003               	movlw	(03h)
  1320  06C9  00CE               	movwf	(??_main+0)+0
  1321  06CA  084E               	movf	(??_main+0)+0,w
  1322  06CB  00FC               	movwf	0+(?_SetLED)+01h
  1323  06CC  3001               	movlw	(01h)
  1324  06CD  120A  158A  269D   	fcall	_SetLED
              120A  118A         
  1325                           	line	81
  1326                           	
  1327  06D2                     l2466:	
  1328                           ;Main.c: 81: SetPos(1, (word) ((word)(90)*1088UL/360UL), 0x03);
  1329  06D2  3010               	movlw	low(0110h)
  1330  06D3  00FB               	movwf	(?_SetPos)
  1331  06D4  3001               	movlw	high(0110h)
  1332  06D5  00FC               	movwf	((?_SetPos))+1
  1333  06D6  3003               	movlw	(03h)
  1334  06D7  1283               	bcf	status, 5	;RP0=0, select bank0
  1335  06D8  1303               	bcf	status, 6	;RP1=0, select bank0
  1336  06D9  00CE               	movwf	(??_main+0)+0
  1337  06DA  084E               	movf	(??_main+0)+0,w
  1338  06DB  00FD               	movwf	0+(?_SetPos)+02h
  1339  06DC  3001               	movlw	(01h)
  1340  06DD  120A  158A  2778   	fcall	_SetPos
              120A  118A         
  1341                           	line	82
  1342                           	
  1343  06E2                     l2468:	
  1344                           ;Main.c: 82: _delay((unsigned long)((500)*(20000000/4000.0)));
  1345                           	opt asmopt_off
  1346  06E2  300D               movlw  13
  1347  06E3  1283               	bcf	status, 5	;RP0=0, select bank0
  1348  06E4  1303               	bcf	status, 6	;RP1=0, select bank0
  1349  06E5  00D0               movwf	((??_main+0)+0+2),f
  1350  06E6  30AF               movlw	175
  1351  06E7  00CF               movwf	((??_main+0)+0+1),f
  1352  06E8  30C1               	movlw	193
  1353  06E9  00CE               movwf	((??_main+0)+0),f
  1354  06EA                     u2017:
  1355  06EA  0BCE               	decfsz	((??_main+0)+0),f
  1356  06EB  2EEA               	goto	u2017
  1357  06EC  0BCF               	decfsz	((??_main+0)+0+1),f
  1358  06ED  2EEA               	goto	u2017
  1359  06EE  0BD0               	decfsz	((??_main+0)+0+2),f
  1360  06EF  2EEA               	goto	u2017
  1361  06F0  0000               	nop
  1362                           opt asmopt_on
  1363                           
  1364                           	line	84
  1365                           	
  1366  06F1                     l2470:	
  1367                           ;Main.c: 84: if(RB1==0) break;
  1368  06F1  1283               	bcf	status, 5	;RP0=0, select bank0
  1369  06F2  1303               	bcf	status, 6	;RP1=0, select bank0
  1370  06F3  1886               	btfsc	(49/8),(49)&7	;volatile
  1371  06F4  2EF6               	goto	u1931
  1372  06F5  2EF7               	goto	u1930
  1373  06F6                     u1931:
  1374  06F6  2EF9               	goto	l2474
  1375  06F7                     u1930:
  1376  06F7  2F2D               	goto	l224
  1377                           	
  1378  06F8                     l2472:	
  1379  06F8  2F2D               	goto	l224
  1380                           	
  1381  06F9                     l226:	
  1382                           	line	86
  1383                           	
  1384  06F9                     l2474:	
  1385                           ;Main.c: 86: SetPos(1, (word) ((word)(180)*1088UL/360UL), 0x03);
  1386  06F9  3020               	movlw	low(0220h)
  1387  06FA  00FB               	movwf	(?_SetPos)
  1388  06FB  3002               	movlw	high(0220h)
  1389  06FC  00FC               	movwf	((?_SetPos))+1
  1390  06FD  3003               	movlw	(03h)
  1391  06FE  00CE               	movwf	(??_main+0)+0
  1392  06FF  084E               	movf	(??_main+0)+0,w
  1393  0700  00FD               	movwf	0+(?_SetPos)+02h
  1394  0701  3001               	movlw	(01h)
  1395  0702  120A  158A  2778   	fcall	_SetPos
              120A  118A         
  1396                           	line	87
  1397                           ;Main.c: 87: SetLED(1,0, 0x03);
  1398  0707  01FB               	clrf	(?_SetLED)
  1399  0708  3003               	movlw	(03h)
  1400  0709  1283               	bcf	status, 5	;RP0=0, select bank0
  1401  070A  1303               	bcf	status, 6	;RP1=0, select bank0
  1402  070B  00CE               	movwf	(??_main+0)+0
  1403  070C  084E               	movf	(??_main+0)+0,w
  1404  070D  00FC               	movwf	0+(?_SetLED)+01h
  1405  070E  3001               	movlw	(01h)
  1406  070F  120A  158A  269D   	fcall	_SetLED
              120A  118A         
  1407                           	line	88
  1408                           	
  1409  0714                     l2476:	
  1410                           ;Main.c: 88: _delay((unsigned long)((500)*(20000000/4000.0)));
  1411                           	opt asmopt_off
  1412  0714  300D               movlw  13
  1413  0715  1283               	bcf	status, 5	;RP0=0, select bank0
  1414  0716  1303               	bcf	status, 6	;RP1=0, select bank0
  1415  0717  00D0               movwf	((??_main+0)+0+2),f
  1416  0718  30AF               movlw	175
  1417  0719  00CF               movwf	((??_main+0)+0+1),f
  1418  071A  30C1               	movlw	193
  1419  071B  00CE               movwf	((??_main+0)+0),f
  1420  071C                     u2027:
  1421  071C  0BCE               	decfsz	((??_main+0)+0),f
  1422  071D  2F1C               	goto	u2027
  1423  071E  0BCF               	decfsz	((??_main+0)+0+1),f
  1424  071F  2F1C               	goto	u2027
  1425  0720  0BD0               	decfsz	((??_main+0)+0+2),f
  1426  0721  2F1C               	goto	u2027
  1427  0722  0000               	nop
  1428                           opt asmopt_on
  1429                           
  1430                           	line	90
  1431                           	
  1432  0723                     l2478:	
  1433                           ;Main.c: 90: if(RB1==0) break;
  1434  0723  1283               	bcf	status, 5	;RP0=0, select bank0
  1435  0724  1303               	bcf	status, 6	;RP1=0, select bank0
  1436  0725  1886               	btfsc	(49/8),(49)&7	;volatile
  1437  0726  2F28               	goto	u1941
  1438  0727  2F29               	goto	u1940
  1439  0728                     u1941:
  1440  0728  2EB1               	goto	l2458
  1441  0729                     u1940:
  1442  0729  2F2D               	goto	l224
  1443                           	
  1444  072A                     l2480:	
  1445  072A  2F2D               	goto	l224
  1446                           	
  1447  072B                     l228:	
  1448  072B  2EB1               	goto	l2458
  1449                           	line	91
  1450                           	
  1451  072C                     l229:	
  1452                           	line	75
  1453  072C  2EB1               	goto	l2458
  1454                           	
  1455  072D                     l227:	
  1456                           	line	92
  1457                           	
  1458  072D                     l224:	
  1459                           	line	95
  1460                           ;Main.c: 91: }
  1461                           ;Main.c: 92: }
  1462                           ;Main.c: 95: if(RB1==0){
  1463  072D  1886               	btfsc	(49/8),(49)&7	;volatile
  1464  072E  2F30               	goto	u1951
  1465  072F  2F31               	goto	u1950
  1466  0730                     u1951:
  1467  0730  2E9B               	goto	l2452
  1468  0731                     u1950:
  1469                           	line	96
  1470                           	
  1471  0731                     l2482:	
  1472                           ;Main.c: 96: lcd_goto(20);
  1473  0731  3014               	movlw	(014h)
  1474  0732  120A  158A  2663   	fcall	_lcd_goto
              120A  118A         
  1475                           	line	97
  1476                           	
  1477  0737                     l2484:	
  1478                           ;Main.c: 97: send_string("Position=      ");
  1479  0737  3024               	movlw	low((STR_4-__stringbase))
  1480  0738  00F9               	movwf	(?_send_string)
  1481  0739  3080               	movlw	80h
  1482  073A  00FA               	movwf	(?_send_string+1)
  1483  073B  120A  158A  27A1   	fcall	_send_string
              120A  118A         
  1484                           	line	98
  1485                           	
  1486  0740                     l2486:	
  1487                           ;Main.c: 98: SetTorqueOnOff(1,0, 0x03);
  1488  0740  01FB               	clrf	(?_SetTorqueOnOff)
  1489  0741  3003               	movlw	(03h)
  1490  0742  1283               	bcf	status, 5	;RP0=0, select bank0
  1491  0743  1303               	bcf	status, 6	;RP1=0, select bank0
  1492  0744  00CE               	movwf	(??_main+0)+0
  1493  0745  084E               	movf	(??_main+0)+0,w
  1494  0746  00FC               	movwf	0+(?_SetTorqueOnOff)+01h
  1495  0747  3001               	movlw	(01h)
  1496  0748  120A  158A  272A   	fcall	_SetTorqueOnOff
              120A  118A         
  1497  074D  2F4E               	goto	l2488
  1498                           	line	99
  1499                           ;Main.c: 99: while(1){
  1500                           	
  1501  074E                     l231:	
  1502                           	line	100
  1503                           	
  1504  074E                     l2488:	
  1505                           ;Main.c: 100: GetPos(1, DATA);
  1506  074E  3051               	movlw	(main@DATA)&0ffh
  1507  074F  1283               	bcf	status, 5	;RP0=0, select bank0
  1508  0750  1303               	bcf	status, 6	;RP1=0, select bank0
  1509  0751  00CE               	movwf	(??_main+0)+0
  1510  0752  084E               	movf	(??_main+0)+0,w
  1511  0753  00FB               	movwf	(?_GetPos)
  1512  0754  3001               	movlw	(01h)
  1513  0755  120A  158A  26BC   	fcall	_GetPos
              120A  118A         
  1514                           	line	101
  1515                           	
  1516  075A                     l2490:	
  1517                           ;Main.c: 101: pos=0;
  1518  075A  1283               	bcf	status, 5	;RP0=0, select bank0
  1519  075B  1303               	bcf	status, 6	;RP1=0, select bank0
  1520  075C  01DF               	clrf	(main@pos)
  1521  075D  01E0               	clrf	(main@pos+1)
  1522                           	line	102
  1523                           	
  1524  075E                     l2492:	
  1525                           ;Main.c: 102: pos=DATA[1];
  1526  075E  0852               	movf	0+(main@DATA)+01h,w
  1527  075F  00CE               	movwf	(??_main+0)+0+0
  1528  0760  01CF               	clrf	(??_main+0)+0+1
  1529  0761  084E               	movf	0+(??_main+0)+0,w
  1530  0762  00DF               	movwf	(main@pos)
  1531  0763  084F               	movf	1+(??_main+0)+0,w
  1532  0764  00E0               	movwf	(main@pos+1)
  1533                           	line	103
  1534                           	
  1535  0765                     l2494:	
  1536                           ;Main.c: 103: pos=pos<<8;
  1537  0765  085F               	movf	(main@pos),w
  1538  0766  00CF               	movwf	(??_main+0)+0+1
  1539  0767  01CE               	clrf	(??_main+0)+0
  1540  0768  084E               	movf	0+(??_main+0)+0,w
  1541  0769  00DF               	movwf	(main@pos)
  1542  076A  084F               	movf	1+(??_main+0)+0,w
  1543  076B  00E0               	movwf	(main@pos+1)
  1544                           	line	104
  1545                           	
  1546  076C                     l2496:	
  1547                           ;Main.c: 104: pos|=DATA[0];
  1548  076C  0851               	movf	(main@DATA),w
  1549  076D  00CE               	movwf	(??_main+0)+0+0
  1550  076E  01CF               	clrf	(??_main+0)+0+1
  1551  076F  084E               	movf	0+(??_main+0)+0,w
  1552  0770  04DF               	iorwf	(main@pos),f
  1553  0771  084F               	movf	1+(??_main+0)+0,w
  1554  0772  04E0               	iorwf	(main@pos+1),f
  1555                           	line	105
  1556                           	
  1557  0773                     l2498:	
  1558                           ;Main.c: 105: angle=(word)(float)(pos)*360.0/1088.0;
  1559  0773  0860               	movf	(main@pos+1),w
  1560  0774  01AB               	clrf	(?___lwtoft+1)
  1561  0775  07AB               	addwf	(?___lwtoft+1)
  1562  0776  085F               	movf	(main@pos),w
  1563  0777  01AA               	clrf	(?___lwtoft)
  1564  0778  07AA               	addwf	(?___lwtoft)
  1565                           
  1566  0779  120A  158A  2648   	fcall	___lwtoft
              120A  118A         
  1567  077E  1283               	bcf	status, 5	;RP0=0, select bank0
  1568  077F  1303               	bcf	status, 6	;RP1=0, select bank0
  1569  0780  082A               	movf	(0+(?___lwtoft)),w
  1570  0781  00F8               	movwf	(?___fttol)
  1571  0782  082B               	movf	(1+(?___lwtoft)),w
  1572  0783  00F9               	movwf	(?___fttol+1)
  1573  0784  082C               	movf	(2+(?___lwtoft)),w
  1574  0785  00FA               	movwf	(?___fttol+2)
  1575  0786  120A  118A  2253   	fcall	___fttol
              120A  118A         
  1576  078B  0879               	movf	1+(((0+(?___fttol)))),w
  1577  078C  1283               	bcf	status, 5	;RP0=0, select bank0
  1578  078D  1303               	bcf	status, 6	;RP1=0, select bank0
  1579  078E  01DE               	clrf	(_main$972+1)
  1580  078F  07DE               	addwf	(_main$972+1)
  1581  0790  0878               	movf	0+(((0+(?___fttol)))),w
  1582  0791  01DD               	clrf	(_main$972)
  1583  0792  07DD               	addwf	(_main$972)
  1584                           
  1585                           	
  1586  0793                     l2500:	
  1587                           ;Main.c: 105: angle=(word)(float)(pos)*360.0/1088.0;
  1588  0793  085E               	movf	(_main$972+1),w
  1589  0794  01AB               	clrf	(?___lwtoft+1)
  1590  0795  07AB               	addwf	(?___lwtoft+1)
  1591  0796  085D               	movf	(_main$972),w
  1592  0797  01AA               	clrf	(?___lwtoft)
  1593  0798  07AA               	addwf	(?___lwtoft)
  1594                           
  1595  0799  120A  158A  2648   	fcall	___lwtoft
              120A  118A         
  1596  079E  1283               	bcf	status, 5	;RP0=0, select bank0
  1597  079F  1303               	bcf	status, 6	;RP1=0, select bank0
  1598  07A0  082A               	movf	(0+(?___lwtoft)),w
  1599  07A1  00B0               	movwf	0+(?___ftmul)+03h
  1600  07A2  082B               	movf	(1+(?___lwtoft)),w
  1601  07A3  00B1               	movwf	1+(?___ftmul)+03h
  1602  07A4  082C               	movf	(2+(?___lwtoft)),w
  1603  07A5  00B2               	movwf	2+(?___ftmul)+03h
  1604  07A6  3000               	movlw	0x0
  1605  07A7  00AD               	movwf	(?___ftmul)
  1606  07A8  30B4               	movlw	0xb4
  1607  07A9  00AE               	movwf	(?___ftmul+1)
  1608  07AA  3043               	movlw	0x43
  1609  07AB  00AF               	movwf	(?___ftmul+2)
  1610  07AC  120A  118A  23C1   	fcall	___ftmul
              120A  118A         
  1611  07B1  1283               	bcf	status, 5	;RP0=0, select bank0
  1612  07B2  1303               	bcf	status, 6	;RP1=0, select bank0
  1613  07B3  082D               	movf	(0+(?___ftmul)),w
  1614  07B4  00C0               	movwf	0+(?___ftdiv)+03h
  1615  07B5  082E               	movf	(1+(?___ftmul)),w
  1616  07B6  00C1               	movwf	1+(?___ftdiv)+03h
  1617  07B7  082F               	movf	(2+(?___ftmul)),w
  1618  07B8  00C2               	movwf	2+(?___ftdiv)+03h
  1619  07B9  3000               	movlw	0x0
  1620  07BA  00BD               	movwf	(?___ftdiv)
  1621  07BB  3088               	movlw	0x88
  1622  07BC  00BE               	movwf	(?___ftdiv+1)
  1623  07BD  3044               	movlw	0x44
  1624  07BE  00BF               	movwf	(?___ftdiv+2)
  1625  07BF  120A  118A  22F9   	fcall	___ftdiv
              120A  118A         
  1626  07C4  1283               	bcf	status, 5	;RP0=0, select bank0
  1627  07C5  1303               	bcf	status, 6	;RP1=0, select bank0
  1628  07C6  083D               	movf	(0+(?___ftdiv)),w
  1629  07C7  00F8               	movwf	(?___fttol)
  1630  07C8  083E               	movf	(1+(?___ftdiv)),w
  1631  07C9  00F9               	movwf	(?___fttol+1)
  1632  07CA  083F               	movf	(2+(?___ftdiv)),w
  1633  07CB  00FA               	movwf	(?___fttol+2)
  1634  07CC  120A  118A  2253   	fcall	___fttol
              120A  118A         
  1635  07D1  0879               	movf	1+(((0+(?___fttol)))),w
  1636  07D2  1283               	bcf	status, 5	;RP0=0, select bank0
  1637  07D3  1303               	bcf	status, 6	;RP1=0, select bank0
  1638  07D4  01DC               	clrf	(main@angle+1)
  1639  07D5  07DC               	addwf	(main@angle+1)
  1640  07D6  0878               	movf	0+(((0+(?___fttol)))),w
  1641  07D7  01DB               	clrf	(main@angle)
  1642  07D8  07DB               	addwf	(main@angle)
  1643                           
  1644                           	line	106
  1645                           	
  1646  07D9                     l2502:	
  1647                           ;Main.c: 106: lcd_goto(30);
  1648  07D9  301E               	movlw	(01Eh)
  1649  07DA  120A  158A  2663   	fcall	_lcd_goto
              120A  118A         
  1650                           	line	107
  1651                           	
  1652  07DF                     l2504:	
  1653                           ;Main.c: 107: lcd_num(angle,3);
  1654  07DF  1283               	bcf	status, 5	;RP0=0, select bank0
  1655  07E0  1303               	bcf	status, 6	;RP1=0, select bank0
  1656  07E1  085C               	movf	(main@angle+1),w
  1657  07E2  01FC               	clrf	(?_lcd_num+1)
  1658  07E3  07FC               	addwf	(?_lcd_num+1)
  1659  07E4  085B               	movf	(main@angle),w
  1660  07E5  01FB               	clrf	(?_lcd_num)
  1661  07E6  07FB               	addwf	(?_lcd_num)
  1662                           
  1663  07E7  3003               	movlw	(03h)
  1664  07E8  00CE               	movwf	(??_main+0)+0
  1665  07E9  084E               	movf	(??_main+0)+0,w
  1666  07EA  00FD               	movwf	0+(?_lcd_num)+02h
  1667  07EB  120A  118A  21C3   	fcall	_lcd_num
              120A  118A         
  1668                           	line	108
  1669                           	
  1670  07F0                     l2506:	
  1671                           ;Main.c: 108: if(RB0==0) break;
  1672  07F0  1283               	bcf	status, 5	;RP0=0, select bank0
  1673  07F1  1303               	bcf	status, 6	;RP1=0, select bank0
  1674  07F2  1806               	btfsc	(48/8),(48)&7	;volatile
  1675  07F3  2FF5               	goto	u1961
  1676  07F4  2FF6               	goto	u1960
  1677  07F5                     u1961:
  1678  07F5  2F4E               	goto	l2488
  1679  07F6                     u1960:
  1680  07F6  2E9B               	goto	l2452
  1681                           	
  1682  07F7                     l2508:	
  1683  07F7  2E9B               	goto	l2452
  1684                           	
  1685  07F8                     l232:	
  1686  07F8  2F4E               	goto	l2488
  1687                           	line	109
  1688                           	
  1689  07F9                     l234:	
  1690                           	line	99
  1691  07F9  2F4E               	goto	l2488
  1692                           	
  1693  07FA                     l233:	
  1694  07FA  2E9B               	goto	l2452
  1695                           	line	112
  1696                           	
  1697  07FB                     l230:	
  1698  07FB  2E9B               	goto	l2452
  1699                           	line	114
  1700                           	
  1701  07FC                     l235:	
  1702                           	line	69
  1703  07FC  2E9B               	goto	l2452
  1704                           	
  1705  07FD                     l236:	
  1706                           	line	121
  1707                           	
  1708  07FD                     l237:	
  1709                           	global	start
  1710  07FD  120A  118A  2800   	ljmp	start
  1711                           	opt stack 0
  1712                           GLOBAL	__end_of_main
  1713  0800                     	__end_of_main:
  1714                           	signat	_main,88
  1715                           	global	_SetTorqueOnOff
  1716                           
  1717 ;; *************** function _SetTorqueOnOff *****************
  1718 ;; Defined at:
  1719 ;;		line 315 in file "G15.h"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;  ServoID         1    wreg     unsigned char 
  1722 ;;  on_off          1   11[COMMON] unsigned char 
  1723 ;;  Write_Reg       1   12[COMMON] unsigned char 
  1724 ;; Auto vars:     Size  Location     Type
  1725 ;;  ServoID         1   42[BANK0 ] unsigned char 
  1726 ;;  TxBuff          2   43[BANK0 ] unsigned char [2]
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  2   11[COMMON] unsigned short 
  1729 ;; Registers used:
  1730 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1736 ;;      Params:         2       0       0       0       0
  1737 ;;      Locals:         0       3       0       0       0
  1738 ;;      Temps:          0       3       0       0       0
  1739 ;;      Totals:         2       6       0       0       0
  1740 ;;Total ram usage:        8 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:    2
  1743 ;; This function calls:
  1744 ;;		_send_packet
  1745 ;; This function is called by:
  1746 ;;		_main
  1747 ;;		_SetWheelMode
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           psect	text567,local,class=CODE,delta=2,merge=1
  1751                           global __ptext567
  1752  0F2A                     __ptext567:	;psect for function _SetTorqueOnOff
  1753                           psect	text567
  1754                           	file	"G15.h"
  1755                           	line	315
  1756                           	global	__size_of_SetTorqueOnOff
  1757  0025                     	__size_of_SetTorqueOnOff	equ	__end_of_SetTorqueOnOff-_SetTorqueOnOff
  1758                           	
  1759  0F2A                     _SetTorqueOnOff:	
  1760                           	opt	stack 5
  1761                           ; Regs used in _SetTorqueOnOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1762                           ;SetTorqueOnOff@ServoID stored from wreg
  1763                           	line	318
  1764  0F2A  1283               	bcf	status, 5	;RP0=0, select bank0
  1765  0F2B  1303               	bcf	status, 6	;RP1=0, select bank0
  1766  0F2C  00CA               	movwf	(SetTorqueOnOff@ServoID)
  1767                           	
  1768  0F2D                     l2252:	
  1769                           ;G15.h: 316: byte TxBuff[2];
  1770                           ;G15.h: 318: TxBuff[0] = TORQUE_ENABLE;
  1771  0F2D  3018               	movlw	(018h)
  1772  0F2E  00C7               	movwf	(??_SetTorqueOnOff+0)+0
  1773  0F2F  0847               	movf	(??_SetTorqueOnOff+0)+0,w
  1774  0F30  00CB               	movwf	(SetTorqueOnOff@TxBuff)
  1775                           	line	319
  1776                           ;G15.h: 319: TxBuff[1] = on_off;
  1777  0F31  087B               	movf	(SetTorqueOnOff@on_off),w
  1778  0F32  00C7               	movwf	(??_SetTorqueOnOff+0)+0
  1779  0F33  0847               	movf	(??_SetTorqueOnOff+0)+0,w
  1780  0F34  00CC               	movwf	0+(SetTorqueOnOff@TxBuff)+01h
  1781                           	line	322
  1782                           	
  1783  0F35                     l2254:	
  1784                           ;G15.h: 322: return(send_packet(ServoID, Write_Reg, TxBuff, 2));
  1785  0F35  087C               	movf	(SetTorqueOnOff@Write_Reg),w
  1786  0F36  00C7               	movwf	(??_SetTorqueOnOff+0)+0
  1787  0F37  0847               	movf	(??_SetTorqueOnOff+0)+0,w
  1788  0F38  00F6               	movwf	(?_send_packet)
  1789  0F39  304B               	movlw	(SetTorqueOnOff@TxBuff)&0ffh
  1790  0F3A  00C8               	movwf	(??_SetTorqueOnOff+1)+0
  1791  0F3B  0848               	movf	(??_SetTorqueOnOff+1)+0,w
  1792  0F3C  00F7               	movwf	0+(?_send_packet)+01h
  1793  0F3D  3002               	movlw	(02h)
  1794  0F3E  00C9               	movwf	(??_SetTorqueOnOff+2)+0
  1795  0F3F  0849               	movf	(??_SetTorqueOnOff+2)+0,w
  1796  0F40  00F8               	movwf	0+(?_send_packet)+02h
  1797  0F41  084A               	movf	(SetTorqueOnOff@ServoID),w
  1798  0F42  120A  118A  24AF   	fcall	_send_packet
              120A  158A         
  1799  0F47  0877               	movf	(1+(?_send_packet)),w
  1800  0F48  01FC               	clrf	(?_SetTorqueOnOff+1)
  1801  0F49  07FC               	addwf	(?_SetTorqueOnOff+1)
  1802  0F4A  0876               	movf	(0+(?_send_packet)),w
  1803  0F4B  01FB               	clrf	(?_SetTorqueOnOff)
  1804  0F4C  07FB               	addwf	(?_SetTorqueOnOff)
  1805                           
  1806  0F4D  2F4E               	goto	l149
  1807                           	
  1808  0F4E                     l2256:	
  1809                           	line	323
  1810                           	
  1811  0F4E                     l149:	
  1812  0F4E  0008               	return
  1813                           	opt stack 0
  1814                           GLOBAL	__end_of_SetTorqueOnOff
  1815  0F4F                     	__end_of_SetTorqueOnOff:
  1816                           	signat	_SetTorqueOnOff,12410
  1817                           	global	_SetPos
  1818                           
  1819 ;; *************** function _SetPos *****************
  1820 ;; Defined at:
  1821 ;;		line 288 in file "G15.h"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;  ServoID         1    wreg     unsigned char 
  1824 ;;  Position        2   11[COMMON] unsigned short 
  1825 ;;  Write_Reg       1   13[COMMON] unsigned char 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  ServoID         1   42[BANK0 ] unsigned char 
  1828 ;;  TxBuff          3   43[BANK0 ] unsigned char [3]
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  2   11[COMMON] unsigned short 
  1831 ;; Registers used:
  1832 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1838 ;;      Params:         3       0       0       0       0
  1839 ;;      Locals:         0       4       0       0       0
  1840 ;;      Temps:          0       3       0       0       0
  1841 ;;      Totals:         3       7       0       0       0
  1842 ;;Total ram usage:       10 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; Hardware stack levels required when called:    2
  1845 ;; This function calls:
  1846 ;;		_send_packet
  1847 ;; This function is called by:
  1848 ;;		_main
  1849 ;;		_RotateCW
  1850 ;;		_RotateCCW
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           psect	text568,local,class=CODE,delta=2,merge=1
  1854                           global __ptext568
  1855  0F78                     __ptext568:	;psect for function _SetPos
  1856                           psect	text568
  1857                           	file	"G15.h"
  1858                           	line	288
  1859                           	global	__size_of_SetPos
  1860  0029                     	__size_of_SetPos	equ	__end_of_SetPos-_SetPos
  1861                           	
  1862  0F78                     _SetPos:	
  1863                           	opt	stack 5
  1864                           ; Regs used in _SetPos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1865                           ;SetPos@ServoID stored from wreg
  1866                           	line	291
  1867  0F78  1283               	bcf	status, 5	;RP0=0, select bank0
  1868  0F79  1303               	bcf	status, 6	;RP1=0, select bank0
  1869  0F7A  00CA               	movwf	(SetPos@ServoID)
  1870                           	
  1871  0F7B                     l2258:	
  1872                           ;G15.h: 289: byte TxBuff[3];
  1873                           ;G15.h: 291: TxBuff[0] = GOAL_POSITION_L;
  1874  0F7B  301E               	movlw	(01Eh)
  1875  0F7C  00C7               	movwf	(??_SetPos+0)+0
  1876  0F7D  0847               	movf	(??_SetPos+0)+0,w
  1877  0F7E  00CB               	movwf	(SetPos@TxBuff)
  1878                           	line	292
  1879                           ;G15.h: 292: TxBuff[1] = (byte) (Position&0x00FF);
  1880  0F7F  087B               	movf	(SetPos@Position),w
  1881  0F80  00C7               	movwf	(??_SetPos+0)+0
  1882  0F81  0847               	movf	(??_SetPos+0)+0,w
  1883  0F82  00CC               	movwf	0+(SetPos@TxBuff)+01h
  1884                           	line	293
  1885                           	
  1886  0F83                     l2260:	
  1887                           ;G15.h: 293: TxBuff[2] = (byte)(Position>>8);
  1888  0F83  087C               	movf	(SetPos@Position+1),w
  1889  0F84  00C7               	movwf	(??_SetPos+0)+0
  1890  0F85  0847               	movf	(??_SetPos+0)+0,w
  1891  0F86  00CD               	movwf	0+(SetPos@TxBuff)+02h
  1892                           	line	296
  1893                           	
  1894  0F87                     l2262:	
  1895                           ;G15.h: 296: return(send_packet(ServoID, Write_Reg, TxBuff, 3));
  1896  0F87  087D               	movf	(SetPos@Write_Reg),w
  1897  0F88  00C7               	movwf	(??_SetPos+0)+0
  1898  0F89  0847               	movf	(??_SetPos+0)+0,w
  1899  0F8A  00F6               	movwf	(?_send_packet)
  1900  0F8B  304B               	movlw	(SetPos@TxBuff)&0ffh
  1901  0F8C  00C8               	movwf	(??_SetPos+1)+0
  1902  0F8D  0848               	movf	(??_SetPos+1)+0,w
  1903  0F8E  00F7               	movwf	0+(?_send_packet)+01h
  1904  0F8F  3003               	movlw	(03h)
  1905  0F90  00C9               	movwf	(??_SetPos+2)+0
  1906  0F91  0849               	movf	(??_SetPos+2)+0,w
  1907  0F92  00F8               	movwf	0+(?_send_packet)+02h
  1908  0F93  084A               	movf	(SetPos@ServoID),w
  1909  0F94  120A  118A  24AF   	fcall	_send_packet
              120A  158A         
  1910  0F99  0877               	movf	(1+(?_send_packet)),w
  1911  0F9A  01FC               	clrf	(?_SetPos+1)
  1912  0F9B  07FC               	addwf	(?_SetPos+1)
  1913  0F9C  0876               	movf	(0+(?_send_packet)),w
  1914  0F9D  01FB               	clrf	(?_SetPos)
  1915  0F9E  07FB               	addwf	(?_SetPos)
  1916                           
  1917  0F9F  2FA0               	goto	l140
  1918                           	
  1919  0FA0                     l2264:	
  1920                           	line	297
  1921                           	
  1922  0FA0                     l140:	
  1923  0FA0  0008               	return
  1924                           	opt stack 0
  1925                           GLOBAL	__end_of_SetPos
  1926  0FA1                     	__end_of_SetPos:
  1927                           	signat	_SetPos,12410
  1928                           	global	_SetLED
  1929                           
  1930 ;; *************** function _SetLED *****************
  1931 ;; Defined at:
  1932 ;;		line 417 in file "G15.h"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  ServoID         1    wreg     unsigned char 
  1935 ;;  on_off          1   11[COMMON] unsigned char 
  1936 ;;  Write_Reg       1   12[COMMON] unsigned char 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  ServoID         1   42[BANK0 ] unsigned char 
  1939 ;;  TxBuff          2   43[BANK0 ] unsigned char [2]
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  2   11[COMMON] unsigned short 
  1942 ;; Registers used:
  1943 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1949 ;;      Params:         2       0       0       0       0
  1950 ;;      Locals:         0       3       0       0       0
  1951 ;;      Temps:          0       3       0       0       0
  1952 ;;      Totals:         2       6       0       0       0
  1953 ;;Total ram usage:        8 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; Hardware stack levels required when called:    2
  1956 ;; This function calls:
  1957 ;;		_send_packet
  1958 ;; This function is called by:
  1959 ;;		_main
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           psect	text569,local,class=CODE,delta=2,merge=1
  1963                           global __ptext569
  1964  0E9D                     __ptext569:	;psect for function _SetLED
  1965                           psect	text569
  1966                           	file	"G15.h"
  1967                           	line	417
  1968                           	global	__size_of_SetLED
  1969  001F                     	__size_of_SetLED	equ	__end_of_SetLED-_SetLED
  1970                           	
  1971  0E9D                     _SetLED:	
  1972                           	opt	stack 5
  1973                           ; Regs used in _SetLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1974                           ;SetLED@ServoID stored from wreg
  1975                           	line	420
  1976  0E9D  1283               	bcf	status, 5	;RP0=0, select bank0
  1977  0E9E  1303               	bcf	status, 6	;RP1=0, select bank0
  1978  0E9F  00CA               	movwf	(SetLED@ServoID)
  1979                           	
  1980  0EA0                     l2266:	
  1981                           ;G15.h: 418: byte TxBuff[2];
  1982                           ;G15.h: 420: TxBuff[0] = LED;
  1983  0EA0  3019               	movlw	(019h)
  1984  0EA1  00C7               	movwf	(??_SetLED+0)+0
  1985  0EA2  0847               	movf	(??_SetLED+0)+0,w
  1986  0EA3  00CB               	movwf	(SetLED@TxBuff)
  1987                           	line	421
  1988                           ;G15.h: 421: TxBuff[1] = on_off;
  1989  0EA4  087B               	movf	(SetLED@on_off),w
  1990  0EA5  00C7               	movwf	(??_SetLED+0)+0
  1991  0EA6  0847               	movf	(??_SetLED+0)+0,w
  1992  0EA7  00CC               	movwf	0+(SetLED@TxBuff)+01h
  1993                           	line	424
  1994                           	
  1995  0EA8                     l2268:	
  1996                           ;G15.h: 424: return(send_packet(ServoID, Write_Reg, TxBuff, 2));
  1997                           ;	Return value of _SetLED is never used
  1998  0EA8  087C               	movf	(SetLED@Write_Reg),w
  1999  0EA9  00C7               	movwf	(??_SetLED+0)+0
  2000  0EAA  0847               	movf	(??_SetLED+0)+0,w
  2001  0EAB  00F6               	movwf	(?_send_packet)
  2002  0EAC  304B               	movlw	(SetLED@TxBuff)&0ffh
  2003  0EAD  00C8               	movwf	(??_SetLED+1)+0
  2004  0EAE  0848               	movf	(??_SetLED+1)+0,w
  2005  0EAF  00F7               	movwf	0+(?_send_packet)+01h
  2006  0EB0  3002               	movlw	(02h)
  2007  0EB1  00C9               	movwf	(??_SetLED+2)+0
  2008  0EB2  0849               	movf	(??_SetLED+2)+0,w
  2009  0EB3  00F8               	movwf	0+(?_send_packet)+02h
  2010  0EB4  084A               	movf	(SetLED@ServoID),w
  2011  0EB5  120A  118A  24AF   	fcall	_send_packet
              120A  158A         
  2012  0EBA  2EBB               	goto	l173
  2013                           	
  2014  0EBB                     l2270:	
  2015                           	line	425
  2016                           	
  2017  0EBB                     l173:	
  2018  0EBB  0008               	return
  2019                           	opt stack 0
  2020                           GLOBAL	__end_of_SetLED
  2021  0EBC                     	__end_of_SetLED:
  2022                           	signat	_SetLED,12410
  2023                           	global	_GetPos
  2024                           
  2025 ;; *************** function _GetPos *****************
  2026 ;; Defined at:
  2027 ;;		line 528 in file "G15.h"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  ServoID         1    wreg     unsigned char 
  2030 ;;  data            1   11[COMMON] PTR unsigned char 
  2031 ;;		 -> main@DATA(10), 
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;  ServoID         1   12[COMMON] unsigned char 
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  2   11[COMMON] unsigned short 
  2036 ;; Registers used:
  2037 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2043 ;;      Params:         1       0       0       0       0
  2044 ;;      Locals:         1       0       0       0       0
  2045 ;;      Temps:          0       3       0       0       0
  2046 ;;      Totals:         2       3       0       0       0
  2047 ;;Total ram usage:        5 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    2
  2050 ;; This function calls:
  2051 ;;		_send_packet
  2052 ;; This function is called by:
  2053 ;;		_main
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           psect	text570,local,class=CODE,delta=2,merge=1
  2057                           global __ptext570
  2058  0EBC                     __ptext570:	;psect for function _GetPos
  2059                           psect	text570
  2060                           	file	"G15.h"
  2061                           	line	528
  2062                           	global	__size_of_GetPos
  2063  0024                     	__size_of_GetPos	equ	__end_of_GetPos-_GetPos
  2064                           	
  2065  0EBC                     _GetPos:	
  2066                           	opt	stack 5
  2067                           ; Regs used in _GetPos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2068                           ;GetPos@ServoID stored from wreg
  2069  0EBC  00FC               	movwf	(GetPos@ServoID)
  2070                           	line	529
  2071                           	
  2072  0EBD                     l2272:	
  2073                           ;G15.h: 529: data[0] = PRESENT_POSITION_L;
  2074  0EBD  3024               	movlw	(024h)
  2075  0EBE  1283               	bcf	status, 5	;RP0=0, select bank0
  2076  0EBF  1303               	bcf	status, 6	;RP1=0, select bank0
  2077  0EC0  00C7               	movwf	(??_GetPos+0)+0
  2078  0EC1  087B               	movf	(GetPos@data),w
  2079  0EC2  0084               	movwf	fsr0
  2080  0EC3  0847               	movf	(??_GetPos+0)+0,w
  2081  0EC4  1383               	bcf	status, 7	;select IRP bank0
  2082  0EC5  0080               	movwf	indf
  2083                           	line	530
  2084                           	
  2085  0EC6                     l2274:	
  2086                           ;G15.h: 530: data[1] = 0x02;
  2087  0EC6  3002               	movlw	(02h)
  2088  0EC7  00C7               	movwf	(??_GetPos+0)+0
  2089  0EC8  0A7B               	incf	(GetPos@data),w
  2090  0EC9  0084               	movwf	fsr0
  2091  0ECA  0847               	movf	(??_GetPos+0)+0,w
  2092  0ECB  0080               	movwf	indf
  2093                           	line	532
  2094                           	
  2095  0ECC                     l2276:	
  2096                           ;G15.h: 532: return (send_packet(ServoID, 0x02, data, 2));
  2097                           ;	Return value of _GetPos is never used
  2098  0ECC  3002               	movlw	(02h)
  2099  0ECD  00C7               	movwf	(??_GetPos+0)+0
  2100  0ECE  0847               	movf	(??_GetPos+0)+0,w
  2101  0ECF  00F6               	movwf	(?_send_packet)
  2102  0ED0  087B               	movf	(GetPos@data),w
  2103  0ED1  00C8               	movwf	(??_GetPos+1)+0
  2104  0ED2  0848               	movf	(??_GetPos+1)+0,w
  2105  0ED3  00F7               	movwf	0+(?_send_packet)+01h
  2106  0ED4  3002               	movlw	(02h)
  2107  0ED5  00C9               	movwf	(??_GetPos+2)+0
  2108  0ED6  0849               	movf	(??_GetPos+2)+0,w
  2109  0ED7  00F8               	movwf	0+(?_send_packet)+02h
  2110  0ED8  087C               	movf	(GetPos@ServoID),w
  2111  0ED9  120A  118A  24AF   	fcall	_send_packet
              120A  158A         
  2112  0EDE  2EDF               	goto	l195
  2113                           	
  2114  0EDF                     l2278:	
  2115                           	line	533
  2116                           	
  2117  0EDF                     l195:	
  2118  0EDF  0008               	return
  2119                           	opt stack 0
  2120                           GLOBAL	__end_of_GetPos
  2121  0EE0                     	__end_of_GetPos:
  2122                           	signat	_GetPos,8314
  2123                           	global	_send_packet
  2124                           
  2125 ;; *************** function _send_packet *****************
  2126 ;; Defined at:
  2127 ;;		line 159 in file "G15.h"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  ID              1    wreg     unsigned char 
  2130 ;;  inst            1    6[COMMON] unsigned char 
  2131 ;;  data            1    7[COMMON] PTR unsigned char 
  2132 ;;		 -> main@DATA(10), SetAction@TxBuff(1), FactoryReset@TxBuff(1), SetBaudRate@TxBuff(2), 
  2133 ;;		 -> SetMarginSlopePunch@TxBuff(5), SetAlarmShutDown@TxBuff(2), SetAlarmLED@TxBuff(2), SetLED@TxBuff(2), 
  2134 ;;		 -> SetID@TxBuff(2), SetVoltageLimit@TxBuff(3), SetTemperatureLimit@TxBuff(2), SetTorqueLimit@TxBuff(3), 
  2135 ;;		 -> SetAngleLimit@TxBuff(5), SetSpeed@TxBuff(3), SetTorqueOnOff@TxBuff(2), SetPos@TxBuff(3), 
  2136 ;;  param_len       1    8[COMMON] unsigned char 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;  ID              1   32[BANK0 ] unsigned char 
  2139 ;;  TxBuff         16   16[BANK0 ] unsigned char [16]
  2140 ;;  Status         16    0[BANK0 ] unsigned char [16]
  2141 ;;  i               2   37[BANK0 ] int 
  2142 ;;  error           2   33[BANK0 ] unsigned short 
  2143 ;;  packet_len      1   36[BANK0 ] unsigned char 
  2144 ;;  checksum        1   35[BANK0 ] unsigned char 
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  2    6[COMMON] unsigned short 
  2147 ;; Registers used:
  2148 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2154 ;;      Params:         3       0       0       0       0
  2155 ;;      Locals:         0      39       0       0       0
  2156 ;;      Temps:          2       0       0       0       0
  2157 ;;      Totals:         5      39       0       0       0
  2158 ;;Total ram usage:       44 bytes
  2159 ;; Hardware stack levels used:    1
  2160 ;; Hardware stack levels required when called:    1
  2161 ;; This function calls:
  2162 ;;		_UART_SEND
  2163 ;;		_UART_REC
  2164 ;; This function is called by:
  2165 ;;		_SetPos
  2166 ;;		_SetTorqueOnOff
  2167 ;;		_SetLED
  2168 ;;		_GetPos
  2169 ;;		_SetSpeed
  2170 ;;		_SetAngleLimit
  2171 ;;		_SetTorqueLimit
  2172 ;;		_SetTemperatureLimit
  2173 ;;		_SetVoltageLimit
  2174 ;;		_SetID
  2175 ;;		_SetAlarmLED
  2176 ;;		_SetAlarmShutDown
  2177 ;;		_SetMarginSlopePunch
  2178 ;;		_SetBaudRate
  2179 ;;		_FactoryReset
  2180 ;;		_Ping
  2181 ;;		_GetSpeed
  2182 ;;		_GetLoad
  2183 ;;		_GetVoltage
  2184 ;;		_GetTemperature
  2185 ;;		_GetTorqueOnOff
  2186 ;;		_IsMoving
  2187 ;;		_SetAction
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           psect	text571,local,class=CODE,delta=2,merge=1
  2191                           global __ptext571
  2192  04AF                     __ptext571:	;psect for function _send_packet
  2193                           psect	text571
  2194                           	file	"G15.h"
  2195                           	line	159
  2196                           	global	__size_of_send_packet
  2197  018C                     	__size_of_send_packet	equ	__end_of_send_packet-_send_packet
  2198                           	
  2199  04AF                     _send_packet:	
  2200                           	opt	stack 5
  2201                           ; Regs used in _send_packet: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2202                           ;send_packet@ID stored from wreg
  2203                           	line	161
  2204  04AF  1283               	bcf	status, 5	;RP0=0, select bank0
  2205  04B0  1303               	bcf	status, 6	;RP1=0, select bank0
  2206  04B1  00C0               	movwf	(send_packet@ID)
  2207                           	
  2208  04B2                     l2066:	
  2209                           ;G15.h: 160: int i;
  2210                           ;G15.h: 161: byte packet_len = 0;
  2211  04B2  01C4               	clrf	(send_packet@packet_len)
  2212                           	line	165
  2213                           	
  2214  04B3                     l2068:	
  2215                           ;G15.h: 162: byte TxBuff[16];
  2216                           ;G15.h: 163: byte Status[16];
  2217                           ;G15.h: 164: byte checksum;
  2218                           ;G15.h: 165: word error=0;
  2219  04B3  01C1               	clrf	(send_packet@error)
  2220  04B4  01C2               	clrf	(send_packet@error+1)
  2221                           	line	167
  2222                           	
  2223  04B5                     l2070:	
  2224                           ;G15.h: 167: RC4=1;
  2225  04B5  1607               	bsf	(60/8),(60)&7	;volatile
  2226                           	line	169
  2227                           	
  2228  04B6                     l2072:	
  2229                           ;G15.h: 169: checksum=0;
  2230  04B6  01C3               	clrf	(send_packet@checksum)
  2231                           	line	170
  2232                           	
  2233  04B7                     l2074:	
  2234                           ;G15.h: 170: TxBuff[0] = 0xFF;
  2235  04B7  30FF               	movlw	(0FFh)
  2236  04B8  00F9               	movwf	(??_send_packet+0)+0
  2237  04B9  0879               	movf	(??_send_packet+0)+0,w
  2238  04BA  00B0               	movwf	(send_packet@TxBuff)
  2239                           	line	171
  2240                           	
  2241  04BB                     l2076:	
  2242                           ;G15.h: 171: TxBuff[1] = 0xFF;
  2243  04BB  30FF               	movlw	(0FFh)
  2244  04BC  00F9               	movwf	(??_send_packet+0)+0
  2245  04BD  0879               	movf	(??_send_packet+0)+0,w
  2246  04BE  00B1               	movwf	0+(send_packet@TxBuff)+01h
  2247                           	line	172
  2248                           	
  2249  04BF                     l2078:	
  2250                           ;G15.h: 172: TxBuff[2] = ID; checksum += TxBuff[2];
  2251  04BF  0840               	movf	(send_packet@ID),w
  2252  04C0  00F9               	movwf	(??_send_packet+0)+0
  2253  04C1  0879               	movf	(??_send_packet+0)+0,w
  2254  04C2  00B2               	movwf	0+(send_packet@TxBuff)+02h
  2255                           	
  2256  04C3                     l2080:	
  2257  04C3  0832               	movf	0+(send_packet@TxBuff)+02h,w
  2258  04C4  00F9               	movwf	(??_send_packet+0)+0
  2259  04C5  0879               	movf	(??_send_packet+0)+0,w
  2260  04C6  07C3               	addwf	(send_packet@checksum),f
  2261                           	line	173
  2262                           	
  2263  04C7                     l2082:	
  2264                           ;G15.h: 173: TxBuff[3] = param_len + 2; checksum += TxBuff[3];
  2265  04C7  0878               	movf	(send_packet@param_len),w
  2266  04C8  3E02               	addlw	02h
  2267  04C9  00F9               	movwf	(??_send_packet+0)+0
  2268  04CA  0879               	movf	(??_send_packet+0)+0,w
  2269  04CB  00B3               	movwf	0+(send_packet@TxBuff)+03h
  2270                           	
  2271  04CC                     l2084:	
  2272  04CC  0833               	movf	0+(send_packet@TxBuff)+03h,w
  2273  04CD  00F9               	movwf	(??_send_packet+0)+0
  2274  04CE  0879               	movf	(??_send_packet+0)+0,w
  2275  04CF  07C3               	addwf	(send_packet@checksum),f
  2276                           	line	174
  2277                           	
  2278  04D0                     l2086:	
  2279                           ;G15.h: 174: TxBuff[4] = inst; checksum += TxBuff[4];
  2280  04D0  0876               	movf	(send_packet@inst),w
  2281  04D1  00F9               	movwf	(??_send_packet+0)+0
  2282  04D2  0879               	movf	(??_send_packet+0)+0,w
  2283  04D3  00B4               	movwf	0+(send_packet@TxBuff)+04h
  2284                           	
  2285  04D4                     l2088:	
  2286  04D4  0834               	movf	0+(send_packet@TxBuff)+04h,w
  2287  04D5  00F9               	movwf	(??_send_packet+0)+0
  2288  04D6  0879               	movf	(??_send_packet+0)+0,w
  2289  04D7  07C3               	addwf	(send_packet@checksum),f
  2290                           	line	176
  2291                           ;G15.h: 176: for(i = 0; i < param_len; i++)
  2292  04D8  01C5               	clrf	(send_packet@i)
  2293  04D9  01C6               	clrf	(send_packet@i+1)
  2294  04DA  2CFA               	goto	l2094
  2295                           	line	177
  2296                           	
  2297  04DB                     l96:	
  2298                           	line	178
  2299                           	
  2300  04DB                     l2090:	
  2301                           ;G15.h: 177: {
  2302                           ;G15.h: 178: TxBuff[i+5] = data[i];
  2303  04DB  1283               	bcf	status, 5	;RP0=0, select bank0
  2304  04DC  1303               	bcf	status, 6	;RP1=0, select bank0
  2305  04DD  0845               	movf	(send_packet@i),w
  2306  04DE  0777               	addwf	(send_packet@data),w
  2307  04DF  00F9               	movwf	(??_send_packet+0)+0
  2308  04E0  0879               	movf	0+(??_send_packet+0)+0,w
  2309  04E1  0084               	movwf	fsr0
  2310  04E2  1383               	bcf	status, 7	;select IRP bank0
  2311  04E3  0800               	movf	indf,w
  2312  04E4  00FA               	movwf	(??_send_packet+1)+0
  2313  04E5  0845               	movf	(send_packet@i),w
  2314  04E6  3E05               	addlw	05h
  2315  04E7  3E30               	addlw	send_packet@TxBuff&0ffh
  2316  04E8  0084               	movwf	fsr0
  2317  04E9  087A               	movf	(??_send_packet+1)+0,w
  2318  04EA  0080               	movwf	indf
  2319                           	line	179
  2320                           ;G15.h: 179: checksum += TxBuff[i+5];
  2321  04EB  0845               	movf	(send_packet@i),w
  2322  04EC  3E05               	addlw	05h
  2323  04ED  3E30               	addlw	send_packet@TxBuff&0ffh
  2324  04EE  0084               	movwf	fsr0
  2325  04EF  0800               	movf	indf,w
  2326  04F0  00F9               	movwf	(??_send_packet+0)+0
  2327  04F1  0879               	movf	(??_send_packet+0)+0,w
  2328  04F2  07C3               	addwf	(send_packet@checksum),f
  2329                           	line	176
  2330                           	
  2331  04F3                     l2092:	
  2332  04F3  3001               	movlw	low(01h)
  2333  04F4  07C5               	addwf	(send_packet@i),f
  2334  04F5  1803               	skipnc
  2335  04F6  0AC6               	incf	(send_packet@i+1),f
  2336  04F7  3000               	movlw	high(01h)
  2337  04F8  07C6               	addwf	(send_packet@i+1),f
  2338  04F9  2CFA               	goto	l2094
  2339                           	
  2340  04FA                     l95:	
  2341                           	
  2342  04FA                     l2094:	
  2343  04FA  0846               	movf	(send_packet@i+1),w
  2344  04FB  3A80               	xorlw	80h
  2345  04FC  00F9               	movwf	(??_send_packet+0)+0
  2346  04FD  3080               	movlw	80h
  2347  04FE  0279               	subwf	(??_send_packet+0)+0,w
  2348  04FF  1D03               	skipz
  2349  0500  2D03               	goto	u1365
  2350  0501  0878               	movf	(send_packet@param_len),w
  2351  0502  0245               	subwf	(send_packet@i),w
  2352  0503                     u1365:
  2353                           
  2354  0503  1C03               	skipc
  2355  0504  2D06               	goto	u1361
  2356  0505  2D07               	goto	u1360
  2357  0506                     u1361:
  2358  0506  2CDB               	goto	l2090
  2359  0507                     u1360:
  2360  0507  2D08               	goto	l2096
  2361                           	
  2362  0508                     l97:	
  2363                           	line	181
  2364                           	
  2365  0508                     l2096:	
  2366                           ;G15.h: 180: }
  2367                           ;G15.h: 181: TxBuff[i+5] = ~checksum;
  2368  0508  1283               	bcf	status, 5	;RP0=0, select bank0
  2369  0509  1303               	bcf	status, 6	;RP1=0, select bank0
  2370  050A  0943               	comf	(send_packet@checksum),w
  2371  050B  00F9               	movwf	(??_send_packet+0)+0
  2372  050C  0845               	movf	(send_packet@i),w
  2373  050D  3E05               	addlw	05h
  2374  050E  3E30               	addlw	send_packet@TxBuff&0ffh
  2375  050F  0084               	movwf	fsr0
  2376  0510  0879               	movf	(??_send_packet+0)+0,w
  2377  0511  1383               	bcf	status, 7	;select IRP bank0
  2378  0512  0080               	movwf	indf
  2379                           	line	183
  2380                           	
  2381  0513                     l2098:	
  2382                           ;G15.h: 183: packet_len = TxBuff[3] + 4;
  2383  0513  0833               	movf	0+(send_packet@TxBuff)+03h,w
  2384  0514  3E04               	addlw	04h
  2385  0515  00F9               	movwf	(??_send_packet+0)+0
  2386  0516  0879               	movf	(??_send_packet+0)+0,w
  2387  0517  00C4               	movwf	(send_packet@packet_len)
  2388                           	line	185
  2389                           	
  2390  0518                     l2100:	
  2391                           ;G15.h: 185: for(i=0; i<packet_len;i++)
  2392  0518  01C5               	clrf	(send_packet@i)
  2393  0519  01C6               	clrf	(send_packet@i+1)
  2394  051A  2D30               	goto	l2106
  2395                           	line	186
  2396                           	
  2397  051B                     l99:	
  2398                           	line	187
  2399                           	
  2400  051B                     l2102:	
  2401                           ;G15.h: 186: {
  2402                           ;G15.h: 187: UART_SEND(TxBuff[i]);
  2403  051B  1283               	bcf	status, 5	;RP0=0, select bank0
  2404  051C  1303               	bcf	status, 6	;RP1=0, select bank0
  2405  051D  0845               	movf	(send_packet@i),w
  2406  051E  3E30               	addlw	send_packet@TxBuff&0ffh
  2407  051F  0084               	movwf	fsr0
  2408  0520  1383               	bcf	status, 7	;select IRP bank0
  2409  0521  0800               	movf	indf,w
  2410  0522  120A  158A  25FE   	fcall	_UART_SEND
              120A  118A         
  2411                           	line	185
  2412                           	
  2413  0527                     l2104:	
  2414  0527  3001               	movlw	low(01h)
  2415  0528  1283               	bcf	status, 5	;RP0=0, select bank0
  2416  0529  1303               	bcf	status, 6	;RP1=0, select bank0
  2417  052A  07C5               	addwf	(send_packet@i),f
  2418  052B  1803               	skipnc
  2419  052C  0AC6               	incf	(send_packet@i+1),f
  2420  052D  3000               	movlw	high(01h)
  2421  052E  07C6               	addwf	(send_packet@i+1),f
  2422  052F  2D30               	goto	l2106
  2423                           	
  2424  0530                     l98:	
  2425                           	
  2426  0530                     l2106:	
  2427  0530  0846               	movf	(send_packet@i+1),w
  2428  0531  3A80               	xorlw	80h
  2429  0532  00F9               	movwf	(??_send_packet+0)+0
  2430  0533  3080               	movlw	80h
  2431  0534  0279               	subwf	(??_send_packet+0)+0,w
  2432  0535  1D03               	skipz
  2433  0536  2D39               	goto	u1375
  2434  0537  0844               	movf	(send_packet@packet_len),w
  2435  0538  0245               	subwf	(send_packet@i),w
  2436  0539                     u1375:
  2437                           
  2438  0539  1C03               	skipc
  2439  053A  2D3C               	goto	u1371
  2440  053B  2D3D               	goto	u1370
  2441  053C                     u1371:
  2442  053C  2D1B               	goto	l2102
  2443  053D                     u1370:
  2444  053D  2D3E               	goto	l2108
  2445                           	
  2446  053E                     l100:	
  2447                           	line	192
  2448                           	
  2449  053E                     l2108:	
  2450                           ;G15.h: 188: }
  2451                           ;G15.h: 192: if((ID != 0xFE) || (inst == 0x01))
  2452  053E  1283               	bcf	status, 5	;RP0=0, select bank0
  2453  053F  1303               	bcf	status, 6	;RP1=0, select bank0
  2454  0540  0840               	movf	(send_packet@ID),w
  2455  0541  3AFE               	xorlw	0FEh
  2456  0542  1D03               	skipz
  2457  0543  2D45               	goto	u1381
  2458  0544  2D46               	goto	u1380
  2459  0545                     u1381:
  2460  0545  2D4D               	goto	l2112
  2461  0546                     u1380:
  2462                           	
  2463  0546                     l2110:	
  2464  0546  0876               	movf	(send_packet@inst),w
  2465  0547  3A01               	xorlw	01h
  2466  0548  1D03               	skipz
  2467  0549  2D4B               	goto	u1391
  2468  054A  2D4C               	goto	u1390
  2469  054B                     u1391:
  2470  054B  2E31               	goto	l2176
  2471  054C                     u1390:
  2472  054C  2D4D               	goto	l2112
  2473                           	
  2474  054D                     l103:	
  2475                           	line	194
  2476                           	
  2477  054D                     l2112:	
  2478                           ;G15.h: 193: {
  2479                           ;G15.h: 194: if(inst == 0x02)
  2480  054D  0876               	movf	(send_packet@inst),w
  2481  054E  3A02               	xorlw	02h
  2482  054F  1D03               	skipz
  2483  0550  2D52               	goto	u1401
  2484  0551  2D53               	goto	u1400
  2485  0552                     u1401:
  2486  0552  2D62               	goto	l2118
  2487  0553                     u1400:
  2488                           	line	196
  2489                           	
  2490  0553                     l2114:	
  2491                           ;G15.h: 195: {
  2492                           ;G15.h: 196: param_len = data[1];
  2493  0553  0A77               	incf	(send_packet@data),w
  2494  0554  0084               	movwf	fsr0
  2495  0555  1383               	bcf	status, 7	;select IRP bank0
  2496  0556  0800               	movf	indf,w
  2497  0557  00F9               	movwf	(??_send_packet+0)+0
  2498  0558  0879               	movf	(??_send_packet+0)+0,w
  2499  0559  00F8               	movwf	(send_packet@param_len)
  2500                           	line	197
  2501                           	
  2502  055A                     l2116:	
  2503                           ;G15.h: 197: packet_len = data[1] + 6;
  2504  055A  0A77               	incf	(send_packet@data),w
  2505  055B  0084               	movwf	fsr0
  2506  055C  0800               	movf	indf,w
  2507  055D  3E06               	addlw	06h
  2508  055E  00F9               	movwf	(??_send_packet+0)+0
  2509  055F  0879               	movf	(??_send_packet+0)+0,w
  2510  0560  00C4               	movwf	(send_packet@packet_len)
  2511                           	line	198
  2512                           ;G15.h: 198: }
  2513  0561  2D67               	goto	l2120
  2514                           	line	199
  2515                           	
  2516  0562                     l104:	
  2517                           	line	201
  2518                           	
  2519  0562                     l2118:	
  2520                           ;G15.h: 199: else
  2521                           ;G15.h: 200: {
  2522                           ;G15.h: 201: packet_len = 6;
  2523  0562  3006               	movlw	(06h)
  2524  0563  00F9               	movwf	(??_send_packet+0)+0
  2525  0564  0879               	movf	(??_send_packet+0)+0,w
  2526  0565  00C4               	movwf	(send_packet@packet_len)
  2527  0566  2D67               	goto	l2120
  2528                           	line	202
  2529                           	
  2530  0567                     l105:	
  2531                           	line	204
  2532                           	
  2533  0567                     l2120:	
  2534                           ;G15.h: 202: }
  2535                           ;G15.h: 204: RC4=0;
  2536  0567  1207               	bcf	(60/8),(60)&7	;volatile
  2537                           	line	205
  2538                           	
  2539  0568                     l2122:	
  2540                           ;G15.h: 205: error=0;
  2541  0568  01C1               	clrf	(send_packet@error)
  2542  0569  01C2               	clrf	(send_packet@error+1)
  2543                           	line	207
  2544                           	
  2545  056A                     l2124:	
  2546                           ;G15.h: 207: for (i = 0; i < packet_len ; i++)
  2547  056A  01C5               	clrf	(send_packet@i)
  2548  056B  01C6               	clrf	(send_packet@i+1)
  2549  056C  2D87               	goto	l106
  2550                           	line	208
  2551                           	
  2552  056D                     l107:	
  2553                           	line	209
  2554                           	
  2555  056D                     l2126:	
  2556                           ;G15.h: 208: {
  2557                           ;G15.h: 209: Status[i] = UART_REC();
  2558  056D  120A  118A  20EA   	fcall	_UART_REC
              120A  118A         
  2559  0572  00F9               	movwf	(??_send_packet+0)+0
  2560  0573  1283               	bcf	status, 5	;RP0=0, select bank0
  2561  0574  1303               	bcf	status, 6	;RP1=0, select bank0
  2562  0575  0845               	movf	(send_packet@i),w
  2563  0576  3E20               	addlw	send_packet@Status&0ffh
  2564  0577  0084               	movwf	fsr0
  2565  0578  0879               	movf	(??_send_packet+0)+0,w
  2566  0579  1383               	bcf	status, 7	;select IRP bank0
  2567  057A  0080               	movwf	indf
  2568                           	line	210
  2569                           	
  2570  057B                     l2128:	
  2571                           ;G15.h: 210: if(ERR_FLAG)
  2572  057B  0865               	movf	(_ERR_FLAG),w
  2573  057C  1D03               	skipz
  2574  057D  2D7F               	goto	u1410
  2575  057E  2D81               	goto	l2132
  2576  057F                     u1410:
  2577                           	line	212
  2578                           	
  2579  057F                     l2130:	
  2580                           ;G15.h: 211: {
  2581                           ;G15.h: 212: error|=0x0100;
  2582  057F  1442               	bsf	(send_packet@error)+(8/8),(8)&7
  2583                           	line	213
  2584                           ;G15.h: 213: break;
  2585  0580  2D95               	goto	l2134
  2586                           	line	214
  2587                           	
  2588  0581                     l108:	
  2589                           	line	207
  2590                           	
  2591  0581                     l2132:	
  2592  0581  3001               	movlw	low(01h)
  2593  0582  07C5               	addwf	(send_packet@i),f
  2594  0583  1803               	skipnc
  2595  0584  0AC6               	incf	(send_packet@i+1),f
  2596  0585  3000               	movlw	high(01h)
  2597  0586  07C6               	addwf	(send_packet@i+1),f
  2598                           	
  2599  0587                     l106:	
  2600  0587  0846               	movf	(send_packet@i+1),w
  2601  0588  3A80               	xorlw	80h
  2602  0589  00F9               	movwf	(??_send_packet+0)+0
  2603  058A  3080               	movlw	80h
  2604  058B  0279               	subwf	(??_send_packet+0)+0,w
  2605  058C  1D03               	skipz
  2606  058D  2D90               	goto	u1425
  2607  058E  0844               	movf	(send_packet@packet_len),w
  2608  058F  0245               	subwf	(send_packet@i),w
  2609  0590                     u1425:
  2610                           
  2611  0590  1C03               	skipc
  2612  0591  2D93               	goto	u1421
  2613  0592  2D94               	goto	u1420
  2614  0593                     u1421:
  2615  0593  2D6D               	goto	l2126
  2616  0594                     u1420:
  2617  0594  2D95               	goto	l2134
  2618                           	
  2619  0595                     l109:	
  2620                           	line	216
  2621                           	
  2622  0595                     l2134:	
  2623                           ;G15.h: 214: }
  2624                           ;G15.h: 215: }
  2625                           ;G15.h: 216: if ((Status[0] !=0xFF) || (Status[1] != 0xFF))
  2626  0595  1283               	bcf	status, 5	;RP0=0, select bank0
  2627  0596  1303               	bcf	status, 6	;RP1=0, select bank0
  2628  0597  0820               	movf	(send_packet@Status),w
  2629  0598  3AFF               	xorlw	0FFh
  2630  0599  1D03               	skipz
  2631  059A  2D9C               	goto	u1431
  2632  059B  2D9D               	goto	u1430
  2633  059C                     u1431:
  2634  059C  2DA3               	goto	l112
  2635  059D                     u1430:
  2636                           	
  2637  059D                     l2136:	
  2638  059D  0821               	movf	0+(send_packet@Status)+01h,w
  2639  059E  3AFF               	xorlw	0FFh
  2640  059F  1903               	skipnz
  2641  05A0  2DA2               	goto	u1441
  2642  05A1  2DA3               	goto	u1440
  2643  05A2                     u1441:
  2644  05A2  2DA5               	goto	l2138
  2645  05A3                     u1440:
  2646                           	
  2647  05A3                     l112:	
  2648                           	line	218
  2649                           ;G15.h: 217: {
  2650                           ;G15.h: 218: error|=0x0200;
  2651  05A3  14C2               	bsf	(send_packet@error)+(9/8),(9)&7
  2652  05A4  2DA5               	goto	l2138
  2653                           	line	220
  2654                           	
  2655  05A5                     l110:	
  2656                           	line	221
  2657                           	
  2658  05A5                     l2138:	
  2659                           ;G15.h: 220: }
  2660                           ;G15.h: 221: if (Status[2] != ID)
  2661  05A5  0822               	movf	0+(send_packet@Status)+02h,w
  2662  05A6  0640               	xorwf	(send_packet@ID),w
  2663  05A7  1903               	skipnz
  2664  05A8  2DAA               	goto	u1451
  2665  05A9  2DAB               	goto	u1450
  2666  05AA                     u1451:
  2667  05AA  2DAD               	goto	l2142
  2668  05AB                     u1450:
  2669                           	line	223
  2670                           	
  2671  05AB                     l2140:	
  2672                           ;G15.h: 222: {
  2673                           ;G15.h: 223: error|=0x0400;
  2674  05AB  1542               	bsf	(send_packet@error)+(10/8),(10)&7
  2675  05AC  2DAD               	goto	l2142
  2676                           	line	225
  2677                           	
  2678  05AD                     l113:	
  2679                           	line	226
  2680                           	
  2681  05AD                     l2142:	
  2682                           ;G15.h: 225: }
  2683                           ;G15.h: 226: if(Status[4] != 0)
  2684  05AD  0824               	movf	0+(send_packet@Status)+04h,w
  2685  05AE  1D03               	skipz
  2686  05AF  2DB1               	goto	u1460
  2687  05B0  2DB9               	goto	l2146
  2688  05B1                     u1460:
  2689                           	line	228
  2690                           	
  2691  05B1                     l2144:	
  2692                           ;G15.h: 227: {
  2693                           ;G15.h: 228: error|=(word)Status[4];
  2694  05B1  0824               	movf	0+(send_packet@Status)+04h,w
  2695  05B2  00F9               	movwf	(??_send_packet+0)+0+0
  2696  05B3  01FA               	clrf	(??_send_packet+0)+0+1
  2697  05B4  0879               	movf	0+(??_send_packet+0)+0,w
  2698  05B5  04C1               	iorwf	(send_packet@error),f
  2699  05B6  087A               	movf	1+(??_send_packet+0)+0,w
  2700  05B7  04C2               	iorwf	(send_packet@error+1),f
  2701  05B8  2DB9               	goto	l2146
  2702                           	line	230
  2703                           	
  2704  05B9                     l114:	
  2705                           	line	233
  2706                           	
  2707  05B9                     l2146:	
  2708                           ;G15.h: 230: }
  2709                           ;G15.h: 233: checksum=0;
  2710  05B9  01C3               	clrf	(send_packet@checksum)
  2711                           	line	234
  2712                           ;G15.h: 234: for(i = 2; i < packet_len; i++)
  2713  05BA  3002               	movlw	low(02h)
  2714  05BB  00C5               	movwf	(send_packet@i)
  2715  05BC  3000               	movlw	high(02h)
  2716  05BD  00C6               	movwf	((send_packet@i))+1
  2717  05BE  2DD0               	goto	l2152
  2718                           	line	235
  2719                           	
  2720  05BF                     l116:	
  2721                           	line	236
  2722                           	
  2723  05BF                     l2148:	
  2724                           ;G15.h: 235: {
  2725                           ;G15.h: 236: checksum += Status[i];
  2726  05BF  1283               	bcf	status, 5	;RP0=0, select bank0
  2727  05C0  1303               	bcf	status, 6	;RP1=0, select bank0
  2728  05C1  0845               	movf	(send_packet@i),w
  2729  05C2  3E20               	addlw	send_packet@Status&0ffh
  2730  05C3  0084               	movwf	fsr0
  2731  05C4  1383               	bcf	status, 7	;select IRP bank0
  2732  05C5  0800               	movf	indf,w
  2733  05C6  00F9               	movwf	(??_send_packet+0)+0
  2734  05C7  0879               	movf	(??_send_packet+0)+0,w
  2735  05C8  07C3               	addwf	(send_packet@checksum),f
  2736                           	line	234
  2737                           	
  2738  05C9                     l2150:	
  2739  05C9  3001               	movlw	low(01h)
  2740  05CA  07C5               	addwf	(send_packet@i),f
  2741  05CB  1803               	skipnc
  2742  05CC  0AC6               	incf	(send_packet@i+1),f
  2743  05CD  3000               	movlw	high(01h)
  2744  05CE  07C6               	addwf	(send_packet@i+1),f
  2745  05CF  2DD0               	goto	l2152
  2746                           	
  2747  05D0                     l115:	
  2748                           	
  2749  05D0                     l2152:	
  2750  05D0  0846               	movf	(send_packet@i+1),w
  2751  05D1  3A80               	xorlw	80h
  2752  05D2  00F9               	movwf	(??_send_packet+0)+0
  2753  05D3  3080               	movlw	80h
  2754  05D4  0279               	subwf	(??_send_packet+0)+0,w
  2755  05D5  1D03               	skipz
  2756  05D6  2DD9               	goto	u1475
  2757  05D7  0844               	movf	(send_packet@packet_len),w
  2758  05D8  0245               	subwf	(send_packet@i),w
  2759  05D9                     u1475:
  2760                           
  2761  05D9  1C03               	skipc
  2762  05DA  2DDC               	goto	u1471
  2763  05DB  2DDD               	goto	u1470
  2764  05DC                     u1471:
  2765  05DC  2DBF               	goto	l2148
  2766  05DD                     u1470:
  2767  05DD  2DDE               	goto	l2154
  2768                           	
  2769  05DE                     l117:	
  2770                           	line	238
  2771                           	
  2772  05DE                     l2154:	
  2773                           ;G15.h: 237: }
  2774                           ;G15.h: 238: if(checksum != 0xFF)
  2775  05DE  1283               	bcf	status, 5	;RP0=0, select bank0
  2776  05DF  1303               	bcf	status, 6	;RP1=0, select bank0
  2777  05E0  0843               	movf	(send_packet@checksum),w
  2778  05E1  3AFF               	xorlw	0FFh
  2779  05E2  1903               	skipnz
  2780  05E3  2DE5               	goto	u1481
  2781  05E4  2DE6               	goto	u1480
  2782  05E5                     u1481:
  2783  05E5  2DE8               	goto	l2158
  2784  05E6                     u1480:
  2785                           	line	240
  2786                           	
  2787  05E6                     l2156:	
  2788                           ;G15.h: 239: {
  2789                           ;G15.h: 240: error |= 0x0800;
  2790  05E6  15C2               	bsf	(send_packet@error)+(11/8),(11)&7
  2791  05E7  2DE8               	goto	l2158
  2792                           	line	242
  2793                           	
  2794  05E8                     l118:	
  2795                           	line	243
  2796                           	
  2797  05E8                     l2158:	
  2798                           ;G15.h: 242: }
  2799                           ;G15.h: 243: if(Status[4]==0x00 && (error&0x0100)==0x00)
  2800  05E8  08A4               	movf	0+(send_packet@Status)+04h,f
  2801  05E9  1D03               	skipz
  2802  05EA  2DEC               	goto	u1491
  2803  05EB  2DED               	goto	u1490
  2804  05EC                     u1491:
  2805  05EC  2E31               	goto	l2176
  2806  05ED                     u1490:
  2807                           	
  2808  05ED                     l2160:	
  2809  05ED  1842               	btfsc	(send_packet@error+1),(8)&7
  2810  05EE  2DF0               	goto	u1501
  2811  05EF  2DF1               	goto	u1500
  2812  05F0                     u1501:
  2813  05F0  2E31               	goto	l2176
  2814  05F1                     u1500:
  2815                           	line	245
  2816                           	
  2817  05F1                     l2162:	
  2818                           ;G15.h: 244: {
  2819                           ;G15.h: 245: if(inst == 0x01)
  2820  05F1  0876               	movf	(send_packet@inst),w
  2821  05F2  3A01               	xorlw	01h
  2822  05F3  1D03               	skipz
  2823  05F4  2DF6               	goto	u1511
  2824  05F5  2DF7               	goto	u1510
  2825  05F6                     u1511:
  2826  05F6  2DFF               	goto	l2166
  2827  05F7                     u1510:
  2828                           	line	248
  2829                           	
  2830  05F7                     l2164:	
  2831                           ;G15.h: 246: {
  2832                           ;G15.h: 248: data[0] = Status[2];
  2833  05F7  0822               	movf	0+(send_packet@Status)+02h,w
  2834  05F8  00F9               	movwf	(??_send_packet+0)+0
  2835  05F9  0877               	movf	(send_packet@data),w
  2836  05FA  0084               	movwf	fsr0
  2837  05FB  0879               	movf	(??_send_packet+0)+0,w
  2838  05FC  1383               	bcf	status, 7	;select IRP bank0
  2839  05FD  0080               	movwf	indf
  2840                           	line	249
  2841                           ;G15.h: 249: }
  2842  05FE  2E31               	goto	l2176
  2843                           	line	250
  2844                           	
  2845  05FF                     l120:	
  2846                           	
  2847  05FF                     l2166:	
  2848                           ;G15.h: 250: else if(inst == 0x02)
  2849  05FF  0876               	movf	(send_packet@inst),w
  2850  0600  3A02               	xorlw	02h
  2851  0601  1D03               	skipz
  2852  0602  2E04               	goto	u1521
  2853  0603  2E05               	goto	u1520
  2854  0604                     u1521:
  2855  0604  2E31               	goto	l2176
  2856  0605                     u1520:
  2857                           	line	252
  2858                           	
  2859  0605                     l2168:	
  2860                           ;G15.h: 251: {
  2861                           ;G15.h: 252: for(i = 0; i < param_len; i++)
  2862  0605  01C5               	clrf	(send_packet@i)
  2863  0606  01C6               	clrf	(send_packet@i+1)
  2864  0607  2E1F               	goto	l2174
  2865                           	line	253
  2866                           	
  2867  0608                     l124:	
  2868                           	
  2869  0608                     l2170:	
  2870                           ;G15.h: 253: data[i] = (byte) Status[i+5];
  2871  0608  1283               	bcf	status, 5	;RP0=0, select bank0
  2872  0609  1303               	bcf	status, 6	;RP1=0, select bank0
  2873  060A  0845               	movf	(send_packet@i),w
  2874  060B  3E05               	addlw	05h
  2875  060C  3E20               	addlw	send_packet@Status&0ffh
  2876  060D  0084               	movwf	fsr0
  2877  060E  1383               	bcf	status, 7	;select IRP bank0
  2878  060F  0800               	movf	indf,w
  2879  0610  00F9               	movwf	(??_send_packet+0)+0
  2880  0611  0845               	movf	(send_packet@i),w
  2881  0612  0777               	addwf	(send_packet@data),w
  2882  0613  00FA               	movwf	(??_send_packet+1)+0
  2883  0614  087A               	movf	0+(??_send_packet+1)+0,w
  2884  0615  0084               	movwf	fsr0
  2885  0616  0879               	movf	(??_send_packet+0)+0,w
  2886  0617  0080               	movwf	indf
  2887                           	line	252
  2888                           	
  2889  0618                     l2172:	
  2890  0618  3001               	movlw	low(01h)
  2891  0619  07C5               	addwf	(send_packet@i),f
  2892  061A  1803               	skipnc
  2893  061B  0AC6               	incf	(send_packet@i+1),f
  2894  061C  3000               	movlw	high(01h)
  2895  061D  07C6               	addwf	(send_packet@i+1),f
  2896  061E  2E1F               	goto	l2174
  2897                           	
  2898  061F                     l123:	
  2899                           	
  2900  061F                     l2174:	
  2901  061F  0846               	movf	(send_packet@i+1),w
  2902  0620  3A80               	xorlw	80h
  2903  0621  00F9               	movwf	(??_send_packet+0)+0
  2904  0622  3080               	movlw	80h
  2905  0623  0279               	subwf	(??_send_packet+0)+0,w
  2906  0624  1D03               	skipz
  2907  0625  2E28               	goto	u1535
  2908  0626  0878               	movf	(send_packet@param_len),w
  2909  0627  0245               	subwf	(send_packet@i),w
  2910  0628                     u1535:
  2911                           
  2912  0628  1C03               	skipc
  2913  0629  2E2B               	goto	u1531
  2914  062A  2E2C               	goto	u1530
  2915  062B                     u1531:
  2916  062B  2E08               	goto	l2170
  2917  062C                     u1530:
  2918  062C  2E31               	goto	l2176
  2919                           	
  2920  062D                     l125:	
  2921  062D  2E31               	goto	l2176
  2922                           	line	254
  2923                           	
  2924  062E                     l122:	
  2925  062E  2E31               	goto	l2176
  2926                           	line	255
  2927                           	
  2928  062F                     l121:	
  2929  062F  2E31               	goto	l2176
  2930                           	
  2931  0630                     l119:	
  2932  0630  2E31               	goto	l2176
  2933                           	line	256
  2934                           	
  2935  0631                     l101:	
  2936                           	line	258
  2937                           	
  2938  0631                     l2176:	
  2939                           ;G15.h: 254: }
  2940                           ;G15.h: 255: }
  2941                           ;G15.h: 256: }
  2942                           ;G15.h: 258: return(error);
  2943  0631  1283               	bcf	status, 5	;RP0=0, select bank0
  2944  0632  1303               	bcf	status, 6	;RP1=0, select bank0
  2945  0633  0842               	movf	(send_packet@error+1),w
  2946  0634  01F7               	clrf	(?_send_packet+1)
  2947  0635  07F7               	addwf	(?_send_packet+1)
  2948  0636  0841               	movf	(send_packet@error),w
  2949  0637  01F6               	clrf	(?_send_packet)
  2950  0638  07F6               	addwf	(?_send_packet)
  2951                           
  2952  0639  2E3A               	goto	l126
  2953                           	
  2954  063A                     l2178:	
  2955                           	line	259
  2956                           	
  2957  063A                     l126:	
  2958  063A  0008               	return
  2959                           	opt stack 0
  2960                           GLOBAL	__end_of_send_packet
  2961  063B                     	__end_of_send_packet:
  2962                           	signat	_send_packet,16506
  2963                           	global	_UART_SEND
  2964                           
  2965 ;; *************** function _UART_SEND *****************
  2966 ;; Defined at:
  2967 ;;		line 267 in file "Main.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  data            1    wreg     unsigned char 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;  data            1    0[COMMON] unsigned char 
  2972 ;; Return value:  Size  Location     Type
  2973 ;;		None               void
  2974 ;; Registers used:
  2975 ;;		wreg
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2981 ;;      Params:         0       0       0       0       0
  2982 ;;      Locals:         1       0       0       0       0
  2983 ;;      Temps:          0       0       0       0       0
  2984 ;;      Totals:         1       0       0       0       0
  2985 ;;Total ram usage:        1 bytes
  2986 ;; Hardware stack levels used:    1
  2987 ;; This function calls:
  2988 ;;		Nothing
  2989 ;; This function is called by:
  2990 ;;		_send_packet
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           psect	text572,local,class=CODE,delta=2,merge=1
  2994                           global __ptext572
  2995  0DFE                     __ptext572:	;psect for function _UART_SEND
  2996                           psect	text572
  2997                           	file	"Main.c"
  2998                           	line	267
  2999                           	global	__size_of_UART_SEND
  3000  0016                     	__size_of_UART_SEND	equ	__end_of_UART_SEND-_UART_SEND
  3001                           	
  3002  0DFE                     _UART_SEND:	
  3003                           	opt	stack 5
  3004                           ; Regs used in _UART_SEND: [wreg]
  3005                           ;UART_SEND@data stored from wreg
  3006  0DFE  00F0               	movwf	(UART_SEND@data)
  3007                           	line	268
  3008                           	
  3009  0DFF                     l1716:	
  3010                           ;Main.c: 268: while(!TRMT) ;
  3011  0DFF  2E00               	goto	l286
  3012                           	
  3013  0E00                     l287:	
  3014                           	
  3015  0E00                     l286:	
  3016  0E00  1683               	bsf	status, 5	;RP0=1, select bank1
  3017  0E01  1303               	bcf	status, 6	;RP1=0, select bank1
  3018  0E02  1C98               	btfss	(1217/8)^080h,(1217)&7	;volatile
  3019  0E03  2E05               	goto	u991
  3020  0E04  2E06               	goto	u990
  3021  0E05                     u991:
  3022  0E05  2E00               	goto	l286
  3023  0E06                     u990:
  3024  0E06  2E07               	goto	l1718
  3025                           	
  3026  0E07                     l288:	
  3027                           	line	269
  3028                           	
  3029  0E07                     l1718:	
  3030                           ;Main.c: 269: TXREG=data;
  3031  0E07  0870               	movf	(UART_SEND@data),w
  3032  0E08  1283               	bcf	status, 5	;RP0=0, select bank0
  3033  0E09  1303               	bcf	status, 6	;RP1=0, select bank0
  3034  0E0A  0099               	movwf	(25)	;volatile
  3035                           	line	270
  3036                           ;Main.c: 270: while(!TRMT) ;
  3037  0E0B  2E0C               	goto	l289
  3038                           	
  3039  0E0C                     l290:	
  3040                           	
  3041  0E0C                     l289:	
  3042  0E0C  1683               	bsf	status, 5	;RP0=1, select bank1
  3043  0E0D  1303               	bcf	status, 6	;RP1=0, select bank1
  3044  0E0E  1C98               	btfss	(1217/8)^080h,(1217)&7	;volatile
  3045  0E0F  2E11               	goto	u1001
  3046  0E10  2E12               	goto	u1000
  3047  0E11                     u1001:
  3048  0E11  2E0C               	goto	l289
  3049  0E12                     u1000:
  3050  0E12  2E13               	goto	l292
  3051                           	
  3052  0E13                     l291:	
  3053                           	line	271
  3054                           	
  3055  0E13                     l292:	
  3056  0E13  0008               	return
  3057                           	opt stack 0
  3058                           GLOBAL	__end_of_UART_SEND
  3059  0E14                     	__end_of_UART_SEND:
  3060                           	signat	_UART_SEND,4216
  3061                           	global	_UART_REC
  3062                           
  3063 ;; *************** function _UART_REC *****************
  3064 ;; Defined at:
  3065 ;;		line 274 in file "Main.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;		None
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;  waitcount       4    1[COMMON] unsigned long 
  3070 ;;  rec_data        1    5[COMMON] unsigned char 
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  1    wreg      unsigned char 
  3073 ;; Registers used:
  3074 ;;		wreg
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3080 ;;      Params:         0       0       0       0       0
  3081 ;;      Locals:         5       0       0       0       0
  3082 ;;      Temps:          1       0       0       0       0
  3083 ;;      Totals:         6       0       0       0       0
  3084 ;;Total ram usage:        6 bytes
  3085 ;; Hardware stack levels used:    1
  3086 ;; This function calls:
  3087 ;;		Nothing
  3088 ;; This function is called by:
  3089 ;;		_send_packet
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           psect	text573,local,class=CODE,delta=2,merge=1
  3093                           global __ptext573
  3094  00EA                     __ptext573:	;psect for function _UART_REC
  3095                           psect	text573
  3096                           	file	"Main.c"
  3097                           	line	274
  3098                           	global	__size_of_UART_REC
  3099  005E                     	__size_of_UART_REC	equ	__end_of_UART_REC-_UART_REC
  3100                           	
  3101  00EA                     _UART_REC:	
  3102                           	opt	stack 5
  3103                           ; Regs used in _UART_REC: [wreg]
  3104                           	line	275
  3105                           	
  3106  00EA                     l1720:	
  3107                           ;Main.c: 275: unsigned long waitcount=0;
  3108  00EA  3000               	movlw	0
  3109  00EB  00F4               	movwf	(UART_REC@waitcount+3)
  3110  00EC  3000               	movlw	0
  3111  00ED  00F3               	movwf	(UART_REC@waitcount+2)
  3112  00EE  3000               	movlw	0
  3113  00EF  00F2               	movwf	(UART_REC@waitcount+1)
  3114  00F0  3000               	movlw	0
  3115  00F1  00F1               	movwf	(UART_REC@waitcount)
  3116                           
  3117                           	line	278
  3118                           	
  3119  00F2                     l1722:	
  3120                           ;Main.c: 276: unsigned char rec_data;
  3121                           ;Main.c: 278: if(RCSTAbits.OERR){
  3122  00F2  1283               	bcf	status, 5	;RP0=0, select bank0
  3123  00F3  1303               	bcf	status, 6	;RP1=0, select bank0
  3124  00F4  1C98               	btfss	(24),1	;volatile
  3125  00F5  28F7               	goto	u1011
  3126  00F6  28F8               	goto	u1010
  3127  00F7                     u1011:
  3128  00F7  2925               	goto	l297
  3129  00F8                     u1010:
  3130                           	line	279
  3131                           	
  3132  00F8                     l1724:	
  3133                           ;Main.c: 279: RCSTAbits.CREN=0;
  3134  00F8  1218               	bcf	(24),4	;volatile
  3135                           	line	280
  3136                           ;Main.c: 280: RCSTAbits.CREN=1;
  3137  00F9  1618               	bsf	(24),4	;volatile
  3138                           	line	281
  3139                           ;Main.c: 281: ERR_FLAG=1;
  3140  00FA  01E5               	clrf	(_ERR_FLAG)
  3141  00FB  0AE5               	incf	(_ERR_FLAG),f
  3142                           	line	282
  3143                           	
  3144  00FC                     l1726:	
  3145                           ;Main.c: 282: return(255);
  3146  00FC  30FF               	movlw	(0FFh)
  3147  00FD  2947               	goto	l296
  3148                           	
  3149  00FE                     l1728:	
  3150  00FE  2947               	goto	l296
  3151                           	line	283
  3152                           	
  3153  00FF                     l295:	
  3154                           	line	285
  3155                           ;Main.c: 283: }
  3156                           ;Main.c: 285: while (RCIF == 0)
  3157  00FF  2925               	goto	l297
  3158                           	
  3159  0100                     l298:	
  3160                           	line	287
  3161                           	
  3162  0100                     l1730:	
  3163                           ;Main.c: 286: {
  3164                           ;Main.c: 287: waitcount++;
  3165  0100  3001               	movlw	01h
  3166  0101  07F1               	addwf	(UART_REC@waitcount),f
  3167  0102  3000               	movlw	0
  3168  0103  1803               	skipnc
  3169  0104  3001               movlw 1
  3170  0105  07F2               	addwf	(UART_REC@waitcount+1),f
  3171  0106  3000               	movlw	0
  3172  0107  1803               	skipnc
  3173  0108  3001               movlw 1
  3174  0109  07F3               	addwf	(UART_REC@waitcount+2),f
  3175  010A  3000               	movlw	0
  3176  010B  1803               	skipnc
  3177  010C  3001               movlw 1
  3178  010D  07F4               	addwf	(UART_REC@waitcount+3),f
  3179                           	line	288
  3180                           ;Main.c: 288: if (waitcount > UARTWAIT){
  3181  010E  0874               	movf	(UART_REC@waitcount+3),w
  3182  010F  0264               	subwf	(_UARTWAIT+3),w
  3183  0110  1D03               	skipz
  3184  0111  291C               	goto	u1025
  3185  0112  0873               	movf	(UART_REC@waitcount+2),w
  3186  0113  0263               	subwf	(_UARTWAIT+2),w
  3187  0114  1D03               	skipz
  3188  0115  291C               	goto	u1025
  3189  0116  0872               	movf	(UART_REC@waitcount+1),w
  3190  0117  0262               	subwf	(_UARTWAIT+1),w
  3191  0118  1D03               	skipz
  3192  0119  291C               	goto	u1025
  3193  011A  0871               	movf	(UART_REC@waitcount),w
  3194  011B  0261               	subwf	(_UARTWAIT),w
  3195  011C                     u1025:
  3196  011C  1803               	skipnc
  3197  011D  291F               	goto	u1021
  3198  011E  2920               	goto	u1020
  3199  011F                     u1021:
  3200  011F  2925               	goto	l297
  3201  0120                     u1020:
  3202                           	line	289
  3203                           	
  3204  0120                     l1732:	
  3205                           ;Main.c: 289: ERR_FLAG=1;
  3206  0120  01E5               	clrf	(_ERR_FLAG)
  3207  0121  0AE5               	incf	(_ERR_FLAG),f
  3208                           	line	290
  3209                           	
  3210  0122                     l1734:	
  3211                           ;Main.c: 290: return (255);
  3212  0122  30FF               	movlw	(0FFh)
  3213  0123  2947               	goto	l296
  3214                           	
  3215  0124                     l1736:	
  3216  0124  2947               	goto	l296
  3217                           	line	291
  3218                           	
  3219  0125                     l299:	
  3220                           	line	292
  3221                           	
  3222  0125                     l297:	
  3223                           	line	285
  3224  0125  1E8C               	btfss	(101/8),(101)&7	;volatile
  3225  0126  2928               	goto	u1031
  3226  0127  2929               	goto	u1030
  3227  0128                     u1031:
  3228  0128  2900               	goto	l1730
  3229  0129                     u1030:
  3230  0129  292A               	goto	l1738
  3231                           	
  3232  012A                     l300:	
  3233                           	line	294
  3234                           	
  3235  012A                     l1738:	
  3236                           ;Main.c: 291: }
  3237                           ;Main.c: 292: }
  3238                           ;Main.c: 294: rec_data = RCREG;
  3239  012A  081A               	movf	(26),w	;volatile
  3240  012B  00F0               	movwf	(??_UART_REC+0)+0
  3241  012C  0870               	movf	(??_UART_REC+0)+0,w
  3242  012D  00F5               	movwf	(UART_REC@rec_data)
  3243                           	line	296
  3244                           	
  3245  012E                     l1740:	
  3246                           ;Main.c: 296: if (FERR == 1) {
  3247  012E  1D18               	btfss	(194/8),(194)&7	;volatile
  3248  012F  2931               	goto	u1041
  3249  0130  2932               	goto	u1040
  3250  0131                     u1041:
  3251  0131  2943               	goto	l301
  3252  0132                     u1040:
  3253  0132  2939               	goto	l1746
  3254                           	line	297
  3255                           	
  3256  0133                     l1742:	
  3257                           ;Main.c: 297: while(RCIF) rec_data=RCREG;
  3258  0133  2939               	goto	l1746
  3259                           	
  3260  0134                     l303:	
  3261                           	
  3262  0134                     l1744:	
  3263  0134  081A               	movf	(26),w	;volatile
  3264  0135  00F0               	movwf	(??_UART_REC+0)+0
  3265  0136  0870               	movf	(??_UART_REC+0)+0,w
  3266  0137  00F5               	movwf	(UART_REC@rec_data)
  3267  0138  2939               	goto	l1746
  3268                           	
  3269  0139                     l302:	
  3270                           	
  3271  0139                     l1746:	
  3272  0139  1A8C               	btfsc	(101/8),(101)&7	;volatile
  3273  013A  293C               	goto	u1051
  3274  013B  293D               	goto	u1050
  3275  013C                     u1051:
  3276  013C  2934               	goto	l1744
  3277  013D                     u1050:
  3278                           	
  3279  013D                     l304:	
  3280                           	line	298
  3281                           ;Main.c: 298: ERR_FLAG=1;
  3282  013D  01E5               	clrf	(_ERR_FLAG)
  3283  013E  0AE5               	incf	(_ERR_FLAG),f
  3284                           	line	299
  3285                           	
  3286  013F                     l1748:	
  3287                           ;Main.c: 299: return (255);
  3288  013F  30FF               	movlw	(0FFh)
  3289  0140  2947               	goto	l296
  3290                           	
  3291  0141                     l1750:	
  3292  0141  2947               	goto	l296
  3293                           	line	300
  3294                           	
  3295  0142                     l1752:	
  3296                           ;Main.c: 300: }
  3297  0142  2947               	goto	l296
  3298                           	line	301
  3299                           	
  3300  0143                     l301:	
  3301                           	line	302
  3302                           ;Main.c: 301: else{
  3303                           ;Main.c: 302: ERR_FLAG=0;
  3304  0143  01E5               	clrf	(_ERR_FLAG)
  3305                           	line	303
  3306                           	
  3307  0144                     l1754:	
  3308                           ;Main.c: 303: return rec_data;
  3309  0144  0875               	movf	(UART_REC@rec_data),w
  3310  0145  2947               	goto	l296
  3311                           	
  3312  0146                     l1756:	
  3313  0146  2947               	goto	l296
  3314                           	line	304
  3315                           	
  3316  0147                     l305:	
  3317                           	line	305
  3318                           	
  3319  0147                     l296:	
  3320  0147  0008               	return
  3321                           	opt stack 0
  3322                           GLOBAL	__end_of_UART_REC
  3323  0148                     	__end_of_UART_REC:
  3324                           	signat	_UART_REC,89
  3325                           	global	_initIO
  3326                           
  3327 ;; *************** function _initIO *****************
  3328 ;; Defined at:
  3329 ;;		line 126 in file "Main.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;		None
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;		None
  3334 ;; Return value:  Size  Location     Type
  3335 ;;		None               void
  3336 ;; Registers used:
  3337 ;;		wreg, status,2
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3343 ;;      Params:         0       0       0       0       0
  3344 ;;      Locals:         0       0       0       0       0
  3345 ;;      Temps:          0       0       0       0       0
  3346 ;;      Totals:         0       0       0       0       0
  3347 ;;Total ram usage:        0 bytes
  3348 ;; Hardware stack levels used:    1
  3349 ;; This function calls:
  3350 ;;		Nothing
  3351 ;; This function is called by:
  3352 ;;		_main
  3353 ;; This function uses a non-reentrant model
  3354 ;;
  3355                           psect	text574,local,class=CODE,delta=2,merge=1
  3356                           global __ptext574
  3357  0E2E                     __ptext574:	;psect for function _initIO
  3358                           psect	text574
  3359                           	file	"Main.c"
  3360                           	line	126
  3361                           	global	__size_of_initIO
  3362  001A                     	__size_of_initIO	equ	__end_of_initIO-_initIO
  3363                           	
  3364  0E2E                     _initIO:	
  3365                           	opt	stack 7
  3366                           ; Regs used in _initIO: [wreg+status,2]
  3367                           	line	130
  3368                           	
  3369  0E2E                     l1954:	
  3370                           ;Main.c: 130: PORTB = 0;
  3371  0E2E  1283               	bcf	status, 5	;RP0=0, select bank0
  3372  0E2F  1303               	bcf	status, 6	;RP1=0, select bank0
  3373  0E30  0186               	clrf	(6)	;volatile
  3374                           	line	131
  3375                           ;Main.c: 131: PORTC = 0;
  3376  0E31  0187               	clrf	(7)	;volatile
  3377                           	line	132
  3378                           ;Main.c: 132: PORTD = 0;
  3379  0E32  0188               	clrf	(8)	;volatile
  3380                           	line	133
  3381                           ;Main.c: 133: PORTE = 0;
  3382  0E33  0189               	clrf	(9)	;volatile
  3383                           	line	136
  3384                           	
  3385  0E34                     l1956:	
  3386                           ;Main.c: 136: TRISA = 0b11111111;
  3387  0E34  30FF               	movlw	(0FFh)
  3388  0E35  1683               	bsf	status, 5	;RP0=1, select bank1
  3389  0E36  1303               	bcf	status, 6	;RP1=0, select bank1
  3390  0E37  0085               	movwf	(133)^080h	;volatile
  3391                           	line	137
  3392                           	
  3393  0E38                     l1958:	
  3394                           ;Main.c: 137: TRISB = 0b00000011;
  3395  0E38  3003               	movlw	(03h)
  3396  0E39  0086               	movwf	(134)^080h	;volatile
  3397                           	line	138
  3398                           	
  3399  0E3A                     l1960:	
  3400                           ;Main.c: 138: TRISC = 0b10000000;
  3401  0E3A  3080               	movlw	(080h)
  3402  0E3B  0087               	movwf	(135)^080h	;volatile
  3403                           	line	139
  3404                           	
  3405  0E3C                     l1962:	
  3406                           ;Main.c: 139: TRISD = 0;
  3407  0E3C  0188               	clrf	(136)^080h	;volatile
  3408                           	line	140
  3409                           ;Main.c: 140: TRISE = 0b00000011;
  3410  0E3D  3003               	movlw	(03h)
  3411  0E3E  0089               	movwf	(137)^080h	;volatile
  3412                           	line	142
  3413                           	
  3414  0E3F                     l1964:	
  3415                           ;Main.c: 142: ANSEL=0x00;
  3416  0E3F  1683               	bsf	status, 5	;RP0=1, select bank3
  3417  0E40  1703               	bsf	status, 6	;RP1=1, select bank3
  3418  0E41  0188               	clrf	(392)^0180h	;volatile
  3419                           	line	143
  3420                           	
  3421  0E42                     l1966:	
  3422                           ;Main.c: 143: ANSELH=0x00;
  3423  0E42  0189               	clrf	(393)^0180h	;volatile
  3424                           	line	145
  3425                           	
  3426  0E43                     l1968:	
  3427                           ;Main.c: 145: RB6=0; RB7=0;
  3428  0E43  1283               	bcf	status, 5	;RP0=0, select bank0
  3429  0E44  1303               	bcf	status, 6	;RP1=0, select bank0
  3430  0E45  1306               	bcf	(54/8),(54)&7	;volatile
  3431                           	
  3432  0E46                     l1970:	
  3433  0E46  1386               	bcf	(55/8),(55)&7	;volatile
  3434                           	line	147
  3435                           	
  3436  0E47                     l240:	
  3437  0E47  0008               	return
  3438                           	opt stack 0
  3439                           GLOBAL	__end_of_initIO
  3440  0E48                     	__end_of_initIO:
  3441                           	signat	_initIO,88
  3442                           	global	_lcdinit
  3443                           
  3444 ;; *************** function _lcdinit *****************
  3445 ;; Defined at:
  3446 ;;		line 154 in file "Main.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;		None
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;		None
  3451 ;; Return value:  Size  Location     Type
  3452 ;;		None               void
  3453 ;; Registers used:
  3454 ;;		wreg, status,2, status,0, pclath, cstack
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3460 ;;      Params:         0       0       0       0       0
  3461 ;;      Locals:         0       0       0       0       0
  3462 ;;      Temps:          0       0       0       0       0
  3463 ;;      Totals:         0       0       0       0       0
  3464 ;;Total ram usage:        0 bytes
  3465 ;; Hardware stack levels used:    1
  3466 ;; Hardware stack levels required when called:    3
  3467 ;; This function calls:
  3468 ;;		_send_config
  3469 ;;		_lcd_clr
  3470 ;; This function is called by:
  3471 ;;		_main
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           psect	text575,local,class=CODE,delta=2,merge=1
  3475                           global __ptext575
  3476  0F4F                     __ptext575:	;psect for function _lcdinit
  3477                           psect	text575
  3478                           	file	"Main.c"
  3479                           	line	154
  3480                           	global	__size_of_lcdinit
  3481  0029                     	__size_of_lcdinit	equ	__end_of_lcdinit-_lcdinit
  3482                           	
  3483  0F4F                     _lcdinit:	
  3484                           	opt	stack 4
  3485                           ; Regs used in _lcdinit: [wreg+status,2+status,0+pclath+cstack]
  3486                           	line	156
  3487                           	
  3488  0F4F                     l2350:	
  3489                           ;Main.c: 156: TRISD=0x00;
  3490  0F4F  1683               	bsf	status, 5	;RP0=1, select bank1
  3491  0F50  1303               	bcf	status, 6	;RP1=0, select bank1
  3492  0F51  0188               	clrf	(136)^080h	;volatile
  3493                           	line	157
  3494                           	
  3495  0F52                     l2352:	
  3496                           ;Main.c: 157: TRISB4=0;
  3497  0F52  1206               	bcf	(1076/8)^080h,(1076)&7	;volatile
  3498                           	line	158
  3499                           	
  3500  0F53                     l2354:	
  3501                           ;Main.c: 158: TRISB5=0;
  3502  0F53  1286               	bcf	(1077/8)^080h,(1077)&7	;volatile
  3503                           	line	160
  3504                           	
  3505  0F54                     l2356:	
  3506                           ;Main.c: 160: send_config(0b00000001);
  3507  0F54  3001               	movlw	(01h)
  3508  0F55  120A  158A  2705   	fcall	_send_config
              120A  158A         
  3509                           	line	161
  3510                           	
  3511  0F5A                     l2358:	
  3512                           ;Main.c: 161: send_config(0b00000010);
  3513  0F5A  3002               	movlw	(02h)
  3514  0F5B  120A  158A  2705   	fcall	_send_config
              120A  158A         
  3515                           	line	162
  3516                           	
  3517  0F60                     l2360:	
  3518                           ;Main.c: 162: send_config(0b00000110);
  3519  0F60  3006               	movlw	(06h)
  3520  0F61  120A  158A  2705   	fcall	_send_config
              120A  158A         
  3521                           	line	163
  3522                           	
  3523  0F66                     l2362:	
  3524                           ;Main.c: 163: send_config(0b00001100);
  3525  0F66  300C               	movlw	(0Ch)
  3526  0F67  120A  158A  2705   	fcall	_send_config
              120A  158A         
  3527                           	line	164
  3528                           	
  3529  0F6C                     l2364:	
  3530                           ;Main.c: 164: send_config(0b00111000);
  3531  0F6C  3038               	movlw	(038h)
  3532  0F6D  120A  158A  2705   	fcall	_send_config
              120A  158A         
  3533                           	line	167
  3534                           	
  3535  0F72                     l2366:	
  3536                           ;Main.c: 167: lcd_clr();
  3537  0F72  120A  158A  25EA   	fcall	_lcd_clr
              120A  158A         
  3538                           	line	169
  3539                           	
  3540  0F77                     l243:	
  3541  0F77  0008               	return
  3542                           	opt stack 0
  3543                           GLOBAL	__end_of_lcdinit
  3544  0F78                     	__end_of_lcdinit:
  3545                           	signat	_lcdinit,88
  3546                           	global	_UART_INIT
  3547                           
  3548 ;; *************** function _UART_INIT *****************
  3549 ;; Defined at:
  3550 ;;		line 244 in file "Main.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;		None
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;		None
  3555 ;; Return value:  Size  Location     Type
  3556 ;;		None               void
  3557 ;; Registers used:
  3558 ;;		wreg
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : 0/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3564 ;;      Params:         0       0       0       0       0
  3565 ;;      Locals:         0       0       0       0       0
  3566 ;;      Temps:          0       0       0       0       0
  3567 ;;      Totals:         0       0       0       0       0
  3568 ;;Total ram usage:        0 bytes
  3569 ;; Hardware stack levels used:    1
  3570 ;; This function calls:
  3571 ;;		Nothing
  3572 ;; This function is called by:
  3573 ;;		_main
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           psect	text576,local,class=CODE,delta=2,merge=1
  3577                           global __ptext576
  3578  0E14                     __ptext576:	;psect for function _UART_INIT
  3579                           psect	text576
  3580                           	file	"Main.c"
  3581                           	line	244
  3582                           	global	__size_of_UART_INIT
  3583  001A                     	__size_of_UART_INIT	equ	__end_of_UART_INIT-_UART_INIT
  3584                           	
  3585  0E14                     _UART_INIT:	
  3586                           	opt	stack 7
  3587                           ; Regs used in _UART_INIT: [wreg]
  3588                           	line	247
  3589                           	
  3590  0E14                     l1972:	
  3591                           ;Main.c: 247: TRISCbits.TRISC7=1;
  3592  0E14  1683               	bsf	status, 5	;RP0=1, select bank1
  3593  0E15  1303               	bcf	status, 6	;RP1=0, select bank1
  3594  0E16  1787               	bsf	(135)^080h,7	;volatile
  3595                           	line	248
  3596                           ;Main.c: 248: TRISCbits.TRISC6=0;
  3597  0E17  1307               	bcf	(135)^080h,6	;volatile
  3598                           	line	249
  3599                           ;Main.c: 249: TRISCbits.TRISC4 =0;
  3600  0E18  1207               	bcf	(135)^080h,4	;volatile
  3601                           	line	250
  3602                           ;Main.c: 250: TRISCbits.TRISC5 =0;
  3603  0E19  1287               	bcf	(135)^080h,5	;volatile
  3604                           	line	254
  3605                           ;Main.c: 254: TXSTAbits.BRGH = 1;
  3606  0E1A  1518               	bsf	(152)^080h,2	;volatile
  3607                           	line	255
  3608                           ;Main.c: 255: BAUDCTLbits.BRG16=1;
  3609  0E1B  1683               	bsf	status, 5	;RP0=1, select bank3
  3610  0E1C  1703               	bsf	status, 6	;RP1=1, select bank3
  3611  0E1D  1587               	bsf	(391)^0180h,3	;volatile
  3612                           	line	259
  3613                           	
  3614  0E1E                     l1974:	
  3615                           ;Main.c: 259: SPBRG =0x03; SPBRGH=0x01;
  3616  0E1E  3003               	movlw	(03h)
  3617  0E1F  1683               	bsf	status, 5	;RP0=1, select bank1
  3618  0E20  1303               	bcf	status, 6	;RP1=0, select bank1
  3619  0E21  0099               	movwf	(153)^080h	;volatile
  3620  0E22  3001               	movlw	(01h)
  3621  0E23  009A               	movwf	(154)^080h	;volatile
  3622                           	line	260
  3623                           	
  3624  0E24                     l1976:	
  3625                           ;Main.c: 260: RCSTAbits.SPEN = 1;
  3626  0E24  1283               	bcf	status, 5	;RP0=0, select bank0
  3627  0E25  1303               	bcf	status, 6	;RP1=0, select bank0
  3628  0E26  1798               	bsf	(24),7	;volatile
  3629                           	line	261
  3630                           	
  3631  0E27                     l1978:	
  3632                           ;Main.c: 261: TXSTAbits.TXEN = 1;
  3633  0E27  1683               	bsf	status, 5	;RP0=1, select bank1
  3634  0E28  1303               	bcf	status, 6	;RP1=0, select bank1
  3635  0E29  1698               	bsf	(152)^080h,5	;volatile
  3636                           	line	262
  3637                           	
  3638  0E2A                     l1980:	
  3639                           ;Main.c: 262: RCSTAbits.CREN = 1;
  3640  0E2A  1283               	bcf	status, 5	;RP0=0, select bank0
  3641  0E2B  1303               	bcf	status, 6	;RP1=0, select bank0
  3642  0E2C  1618               	bsf	(24),4	;volatile
  3643                           	line	264
  3644                           	
  3645  0E2D                     l283:	
  3646  0E2D  0008               	return
  3647                           	opt stack 0
  3648                           GLOBAL	__end_of_UART_INIT
  3649  0E2E                     	__end_of_UART_INIT:
  3650                           	signat	_UART_INIT,88
  3651                           	global	_lcd_clr
  3652                           
  3653 ;; *************** function _lcd_clr *****************
  3654 ;; Defined at:
  3655 ;;		line 209 in file "Main.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;		None
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;		None
  3660 ;; Return value:  Size  Location     Type
  3661 ;;		None               void
  3662 ;; Registers used:
  3663 ;;		wreg, status,2, status,0, pclath, cstack
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3669 ;;      Params:         0       0       0       0       0
  3670 ;;      Locals:         0       0       0       0       0
  3671 ;;      Temps:          0       0       0       0       0
  3672 ;;      Totals:         0       0       0       0       0
  3673 ;;Total ram usage:        0 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; Hardware stack levels required when called:    2
  3676 ;; This function calls:
  3677 ;;		_send_config
  3678 ;;		_delay
  3679 ;; This function is called by:
  3680 ;;		_main
  3681 ;;		_lcdinit
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           psect	text577,local,class=CODE,delta=2,merge=1
  3685                           global __ptext577
  3686  0DEA                     __ptext577:	;psect for function _lcd_clr
  3687                           psect	text577
  3688                           	file	"Main.c"
  3689                           	line	209
  3690                           	global	__size_of_lcd_clr
  3691  0014                     	__size_of_lcd_clr	equ	__end_of_lcd_clr-_lcd_clr
  3692                           	
  3693  0DEA                     _lcd_clr:	
  3694                           	opt	stack 5
  3695                           ; Regs used in _lcd_clr: [wreg+status,2+status,0+pclath+cstack]
  3696                           	line	210
  3697                           	
  3698  0DEA                     l2280:	
  3699                           ;Main.c: 210: send_config(0x01);
  3700  0DEA  3001               	movlw	(01h)
  3701  0DEB  120A  158A  2705   	fcall	_send_config
              120A  158A         
  3702                           	line	211
  3703                           ;Main.c: 211: delay(600);
  3704  0DF0  3000               	movlw	0
  3705  0DF1  00F3               	movwf	(?_delay+3)
  3706  0DF2  3000               	movlw	0
  3707  0DF3  00F2               	movwf	(?_delay+2)
  3708  0DF4  3002               	movlw	02h
  3709  0DF5  00F1               	movwf	(?_delay+1)
  3710  0DF6  3058               	movlw	058h
  3711  0DF7  00F0               	movwf	(?_delay)
  3712                           
  3713  0DF8  120A  158A  27D0   	fcall	_delay
              120A  158A         
  3714                           	line	212
  3715                           	
  3716  0DFD                     l262:	
  3717  0DFD  0008               	return
  3718                           	opt stack 0
  3719                           GLOBAL	__end_of_lcd_clr
  3720  0DFE                     	__end_of_lcd_clr:
  3721                           	signat	_lcd_clr,88
  3722                           	global	_lcd_goto
  3723                           
  3724 ;; *************** function _lcd_goto *****************
  3725 ;; Defined at:
  3726 ;;		line 196 in file "Main.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;  data            1    wreg     unsigned char 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  data            1   10[COMMON] unsigned char 
  3731 ;; Return value:  Size  Location     Type
  3732 ;;		None               void
  3733 ;; Registers used:
  3734 ;;		wreg, status,2, status,0, pclath, cstack
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3740 ;;      Params:         0       0       0       0       0
  3741 ;;      Locals:         1       0       0       0       0
  3742 ;;      Temps:          1       0       0       0       0
  3743 ;;      Totals:         2       0       0       0       0
  3744 ;;Total ram usage:        2 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:    2
  3747 ;; This function calls:
  3748 ;;		_send_config
  3749 ;; This function is called by:
  3750 ;;		_main
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           psect	text578,local,class=CODE,delta=2,merge=1
  3754                           global __ptext578
  3755  0E63                     __ptext578:	;psect for function _lcd_goto
  3756                           psect	text578
  3757                           	file	"Main.c"
  3758                           	line	196
  3759                           	global	__size_of_lcd_goto
  3760  001D                     	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
  3761                           	
  3762  0E63                     _lcd_goto:	
  3763                           	opt	stack 5
  3764                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  3765                           ;lcd_goto@data stored from wreg
  3766  0E63  00FA               	movwf	(lcd_goto@data)
  3767                           	line	197
  3768                           	
  3769  0E64                     l2282:	
  3770                           ;Main.c: 197: if(data<16)
  3771  0E64  3010               	movlw	(010h)
  3772  0E65  027A               	subwf	(lcd_goto@data),w
  3773  0E66  1803               	skipnc
  3774  0E67  2E69               	goto	u1641
  3775  0E68  2E6A               	goto	u1640
  3776  0E69                     u1641:
  3777  0E69  2E72               	goto	l2286
  3778  0E6A                     u1640:
  3779                           	line	199
  3780                           	
  3781  0E6A                     l2284:	
  3782                           ;Main.c: 198: {
  3783                           ;Main.c: 199: send_config(0x80+data);
  3784  0E6A  087A               	movf	(lcd_goto@data),w
  3785  0E6B  3E80               	addlw	080h
  3786  0E6C  120A  158A  2705   	fcall	_send_config
              120A  158A         
  3787                           	line	200
  3788                           ;Main.c: 200: }
  3789  0E71  2E7F               	goto	l259
  3790                           	line	201
  3791                           	
  3792  0E72                     l257:	
  3793                           	line	203
  3794                           	
  3795  0E72                     l2286:	
  3796                           ;Main.c: 201: else
  3797                           ;Main.c: 202: {
  3798                           ;Main.c: 203: data=data-20;
  3799  0E72  087A               	movf	(lcd_goto@data),w
  3800  0E73  3EEC               	addlw	0ECh
  3801  0E74  00F9               	movwf	(??_lcd_goto+0)+0
  3802  0E75  0879               	movf	(??_lcd_goto+0)+0,w
  3803  0E76  00FA               	movwf	(lcd_goto@data)
  3804                           	line	204
  3805                           	
  3806  0E77                     l2288:	
  3807                           ;Main.c: 204: send_config(0xc0+data);
  3808  0E77  087A               	movf	(lcd_goto@data),w
  3809  0E78  3EC0               	addlw	0C0h
  3810  0E79  120A  158A  2705   	fcall	_send_config
              120A  158A         
  3811  0E7E  2E7F               	goto	l259
  3812                           	line	205
  3813                           	
  3814  0E7F                     l258:	
  3815                           	line	206
  3816                           	
  3817  0E7F                     l259:	
  3818  0E7F  0008               	return
  3819                           	opt stack 0
  3820                           GLOBAL	__end_of_lcd_goto
  3821  0E80                     	__end_of_lcd_goto:
  3822                           	signat	_lcd_goto,4216
  3823                           	global	_lcd_num
  3824                           
  3825 ;; *************** function _lcd_num *****************
  3826 ;; Defined at:
  3827 ;;		line 220 in file "Main.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  number          2   11[COMMON] unsigned short 
  3830 ;;  digit           1   13[COMMON] unsigned char 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  num            16    4[BANK0 ] unsigned char [16]
  3833 ;;  i               1   22[BANK0 ] unsigned char 
  3834 ;;  k               1   21[BANK0 ] unsigned char 
  3835 ;;  j               1   20[BANK0 ] unsigned char 
  3836 ;; Return value:  Size  Location     Type
  3837 ;;                  1    wreg      unsigned char 
  3838 ;; Registers used:
  3839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3840 ;; Tracked objects:
  3841 ;;		On entry : 0/0
  3842 ;;		On exit  : 0/0
  3843 ;;		Unchanged: 0/0
  3844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3845 ;;      Params:         3       0       0       0       0
  3846 ;;      Locals:         0      19       0       0       0
  3847 ;;      Temps:          0       4       0       0       0
  3848 ;;      Totals:         3      23       0       0       0
  3849 ;;Total ram usage:       26 bytes
  3850 ;; Hardware stack levels used:    1
  3851 ;; Hardware stack levels required when called:    3
  3852 ;; This function calls:
  3853 ;;		___lwmod
  3854 ;;		___lwdiv
  3855 ;;		_send_string
  3856 ;;		_send_char
  3857 ;; This function is called by:
  3858 ;;		_main
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           psect	text579,local,class=CODE,delta=2,merge=1
  3862                           global __ptext579
  3863  01C3                     __ptext579:	;psect for function _lcd_num
  3864                           psect	text579
  3865                           	file	"Main.c"
  3866                           	line	220
  3867                           	global	__size_of_lcd_num
  3868  0090                     	__size_of_lcd_num	equ	__end_of_lcd_num-_lcd_num
  3869                           	
  3870  01C3                     _lcd_num:	
  3871                           	opt	stack 4
  3872                           ; Regs used in _lcd_num: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3873                           	line	222
  3874                           	
  3875  01C3                     l2368:	
  3876                           ;Main.c: 221: unsigned char num[16];
  3877                           ;Main.c: 222: unsigned char k=digit-1;
  3878  01C3  087D               	movf	(lcd_num@digit),w
  3879  01C4  3EFF               	addlw	0FFh
  3880  01C5  1283               	bcf	status, 5	;RP0=0, select bank0
  3881  01C6  1303               	bcf	status, 6	;RP1=0, select bank0
  3882  01C7  00A0               	movwf	(??_lcd_num+0)+0
  3883  01C8  0820               	movf	(??_lcd_num+0)+0,w
  3884  01C9  00B5               	movwf	(lcd_num@k)
  3885                           	line	225
  3886                           	
  3887  01CA                     l2370:	
  3888                           ;Main.c: 223: unsigned char i,j;
  3889                           ;Main.c: 225: num[digit]=0;
  3890  01CA  087D               	movf	(lcd_num@digit),w
  3891  01CB  3E24               	addlw	lcd_num@num&0ffh
  3892  01CC  0084               	movwf	fsr0
  3893  01CD  1383               	bcf	status, 7	;select IRP bank0
  3894  01CE  0180               	clrf	indf
  3895                           	line	227
  3896                           	
  3897  01CF                     l2372:	
  3898                           ;Main.c: 227: for(i=0;i<digit;i++){
  3899  01CF  01B6               	clrf	(lcd_num@i)
  3900  01D0  2A11               	goto	l2384
  3901                           	
  3902  01D1                     l274:	
  3903                           	line	228
  3904                           	
  3905  01D1                     l2374:	
  3906                           ;Main.c: 228: num[k-i]=number%10+'0';
  3907  01D1  300A               	movlw	low(0Ah)
  3908  01D2  00F0               	movwf	(?___lwmod)
  3909  01D3  3000               	movlw	high(0Ah)
  3910  01D4  00F1               	movwf	((?___lwmod))+1
  3911  01D5  087C               	movf	(lcd_num@number+1),w
  3912  01D6  01F3               	clrf	1+(?___lwmod)+02h
  3913  01D7  07F3               	addwf	1+(?___lwmod)+02h
  3914  01D8  087B               	movf	(lcd_num@number),w
  3915  01D9  01F2               	clrf	0+(?___lwmod)+02h
  3916  01DA  07F2               	addwf	0+(?___lwmod)+02h
  3917                           
  3918  01DB  120A  118A  205A   	fcall	___lwmod
              120A  118A         
  3919  01E0  0870               	movf	(0+(?___lwmod)),w
  3920  01E1  3E30               	addlw	030h
  3921  01E2  1283               	bcf	status, 5	;RP0=0, select bank0
  3922  01E3  1303               	bcf	status, 6	;RP1=0, select bank0
  3923  01E4  00A0               	movwf	(??_lcd_num+0)+0
  3924  01E5  0336               	decf	(lcd_num@i),w
  3925  01E6  3AFF               	xorlw	0ffh
  3926  01E7  0735               	addwf	(lcd_num@k),w
  3927  01E8  3E24               	addlw	lcd_num@num&0ffh
  3928  01E9  0084               	movwf	fsr0
  3929  01EA  0820               	movf	(??_lcd_num+0)+0,w
  3930  01EB  1383               	bcf	status, 7	;select IRP bank0
  3931  01EC  0080               	movwf	indf
  3932                           	line	229
  3933                           	
  3934  01ED                     l2376:	
  3935                           ;Main.c: 229: number=number/10;
  3936  01ED  300A               	movlw	low(0Ah)
  3937  01EE  00F0               	movwf	(?___lwdiv)
  3938  01EF  3000               	movlw	high(0Ah)
  3939  01F0  00F1               	movwf	((?___lwdiv))+1
  3940  01F1  087C               	movf	(lcd_num@number+1),w
  3941  01F2  01F3               	clrf	1+(?___lwdiv)+02h
  3942  01F3  07F3               	addwf	1+(?___lwdiv)+02h
  3943  01F4  087B               	movf	(lcd_num@number),w
  3944  01F5  01F2               	clrf	0+(?___lwdiv)+02h
  3945  01F6  07F2               	addwf	0+(?___lwdiv)+02h
  3946                           
  3947  01F7  120A  118A  209D   	fcall	___lwdiv
              120A  118A         
  3948  01FC  0871               	movf	(1+(?___lwdiv)),w
  3949  01FD  01FC               	clrf	(lcd_num@number+1)
  3950  01FE  07FC               	addwf	(lcd_num@number+1)
  3951  01FF  0870               	movf	(0+(?___lwdiv)),w
  3952  0200  01FB               	clrf	(lcd_num@number)
  3953  0201  07FB               	addwf	(lcd_num@number)
  3954                           
  3955                           	line	230
  3956                           	
  3957  0202                     l2378:	
  3958                           ;Main.c: 230: if(number==0) break;
  3959  0202  087C               	movf	((lcd_num@number+1)),w
  3960  0203  047B               	iorwf	((lcd_num@number)),w
  3961  0204  1D03               	skipz
  3962  0205  2A07               	goto	u1811
  3963  0206  2A08               	goto	u1810
  3964  0207                     u1811:
  3965  0207  2A0A               	goto	l2382
  3966  0208                     u1810:
  3967  0208  2A18               	goto	l2386
  3968                           	
  3969  0209                     l2380:	
  3970  0209  2A18               	goto	l2386
  3971                           	
  3972  020A                     l275:	
  3973                           	line	227
  3974                           	
  3975  020A                     l2382:	
  3976  020A  3001               	movlw	(01h)
  3977  020B  1283               	bcf	status, 5	;RP0=0, select bank0
  3978  020C  1303               	bcf	status, 6	;RP1=0, select bank0
  3979  020D  00A0               	movwf	(??_lcd_num+0)+0
  3980  020E  0820               	movf	(??_lcd_num+0)+0,w
  3981  020F  07B6               	addwf	(lcd_num@i),f
  3982  0210  2A11               	goto	l2384
  3983                           	
  3984  0211                     l273:	
  3985                           	
  3986  0211                     l2384:	
  3987  0211  087D               	movf	(lcd_num@digit),w
  3988  0212  0236               	subwf	(lcd_num@i),w
  3989  0213  1C03               	skipc
  3990  0214  2A16               	goto	u1821
  3991  0215  2A17               	goto	u1820
  3992  0216                     u1821:
  3993  0216  29D1               	goto	l2374
  3994  0217                     u1820:
  3995  0217  2A18               	goto	l2386
  3996                           	
  3997  0218                     l276:	
  3998                           	line	233
  3999                           	
  4000  0218                     l2386:	
  4001                           ;Main.c: 231: }
  4002                           ;Main.c: 233: send_string(&num[k-i]);
  4003  0218  1283               	bcf	status, 5	;RP0=0, select bank0
  4004  0219  1303               	bcf	status, 6	;RP1=0, select bank0
  4005  021A  0336               	decf	(lcd_num@i),w
  4006  021B  3AFF               	xorlw	0ffh
  4007  021C  0735               	addwf	(lcd_num@k),w
  4008  021D  3E24               	addlw	lcd_num@num&0ffh
  4009  021E  00F9               	movwf	(?_send_string)
  4010  021F  3000               	movlw	(0x0/2)
  4011  0220  00FA               	movwf	(?_send_string+1)
  4012  0221  120A  158A  27A1   	fcall	_send_string
              120A  118A         
  4013                           	line	235
  4014                           	
  4015  0226                     l2388:	
  4016                           ;Main.c: 235: for(j=0;j<k-i;j++)
  4017  0226  1283               	bcf	status, 5	;RP0=0, select bank0
  4018  0227  1303               	bcf	status, 6	;RP1=0, select bank0
  4019  0228  01B4               	clrf	(lcd_num@j)
  4020  0229  2A37               	goto	l2394
  4021                           	line	236
  4022                           	
  4023  022A                     l278:	
  4024                           	
  4025  022A                     l2390:	
  4026                           ;Main.c: 236: send_char(' ');
  4027  022A  3020               	movlw	(020h)
  4028  022B  120A  158A  26E0   	fcall	_send_char
              120A  118A         
  4029                           	line	235
  4030                           	
  4031  0230                     l2392:	
  4032  0230  3001               	movlw	(01h)
  4033  0231  1283               	bcf	status, 5	;RP0=0, select bank0
  4034  0232  1303               	bcf	status, 6	;RP1=0, select bank0
  4035  0233  00A0               	movwf	(??_lcd_num+0)+0
  4036  0234  0820               	movf	(??_lcd_num+0)+0,w
  4037  0235  07B4               	addwf	(lcd_num@j),f
  4038  0236  2A37               	goto	l2394
  4039                           	
  4040  0237                     l277:	
  4041                           	
  4042  0237                     l2394:	
  4043  0237  0836               	movf	(lcd_num@i),w
  4044  0238  00A0               	movwf	(??_lcd_num+0)+0+0
  4045  0239  01A1               	clrf	(??_lcd_num+0)+0+1
  4046  023A  09A0               	comf	(??_lcd_num+0)+0,f
  4047  023B  09A1               	comf	(??_lcd_num+0)+1,f
  4048  023C  0AA0               	incf	(??_lcd_num+0)+0,f
  4049  023D  1903               	skipnz
  4050  023E  0AA1               	incf	(??_lcd_num+0)+1,f
  4051  023F  0835               	movf	(lcd_num@k),w
  4052  0240  0720               	addwf	0+(??_lcd_num+0)+0,w
  4053  0241  00A2               	movwf	(??_lcd_num+2)+0
  4054  0242  0821               	movf	1+(??_lcd_num+0)+0,w
  4055  0243  1803               	skipnc
  4056  0244  0A21               	incf	1+(??_lcd_num+0)+0,w
  4057  0245  00A3               	movwf	((??_lcd_num+2)+0)+1
  4058  0246  0823               	movf	1+(??_lcd_num+2)+0,w
  4059  0247  3A80               	xorlw	80h
  4060  0248  3C80               	sublw	080h
  4061  0249  1D03               	skipz
  4062  024A  2A4D               	goto	u1835
  4063  024B  0822               	movf	0+(??_lcd_num+2)+0,w
  4064  024C  0234               	subwf	(lcd_num@j),w
  4065  024D                     u1835:
  4066                           
  4067  024D  1C03               	skipc
  4068  024E  2A50               	goto	u1831
  4069  024F  2A51               	goto	u1830
  4070  0250                     u1831:
  4071  0250  2A2A               	goto	l2390
  4072  0251                     u1830:
  4073  0251  2A52               	goto	l280
  4074                           	
  4075  0252                     l279:	
  4076                           	line	239
  4077                           ;Main.c: 238: return(i);
  4078                           ;	Return value of _lcd_num is never used
  4079                           	
  4080  0252                     l280:	
  4081  0252  0008               	return
  4082                           	opt stack 0
  4083                           GLOBAL	__end_of_lcd_num
  4084  0253                     	__end_of_lcd_num:
  4085                           	signat	_lcd_num,8313
  4086                           	global	_send_string
  4087                           
  4088 ;; *************** function _send_string *****************
  4089 ;; Defined at:
  4090 ;;		line 215 in file "Main.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  s               2    9[COMMON] PTR const unsigned char 
  4093 ;;		 -> lcd_num@num(16), STR_4(16), STR_3(17), STR_2(18), 
  4094 ;;		 -> STR_1(10), 
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;		None
  4097 ;; Return value:  Size  Location     Type
  4098 ;;		None               void
  4099 ;; Registers used:
  4100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4106 ;;      Params:         2       0       0       0       0
  4107 ;;      Locals:         0       0       0       0       0
  4108 ;;      Temps:          0       0       0       0       0
  4109 ;;      Totals:         2       0       0       0       0
  4110 ;;Total ram usage:        2 bytes
  4111 ;; Hardware stack levels used:    1
  4112 ;; Hardware stack levels required when called:    2
  4113 ;; This function calls:
  4114 ;;		_send_char
  4115 ;; This function is called by:
  4116 ;;		_main
  4117 ;;		_lcd_num
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           psect	text580,local,class=CODE,delta=2,merge=1
  4121                           global __ptext580
  4122  0FA1                     __ptext580:	;psect for function _send_string
  4123                           psect	text580
  4124                           	file	"Main.c"
  4125                           	line	215
  4126                           	global	__size_of_send_string
  4127  002F                     	__size_of_send_string	equ	__end_of_send_string-_send_string
  4128                           	
  4129  0FA1                     _send_string:	
  4130                           	opt	stack 4
  4131                           ; Regs used in _send_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4132                           	line	216
  4133                           	
  4134  0FA1                     l2290:	
  4135                           ;Main.c: 216: while (s && *s)send_char (*s++);
  4136  0FA1  2FB7               	goto	l2296
  4137                           	
  4138  0FA2                     l266:	
  4139                           	
  4140  0FA2                     l2292:	
  4141  0FA2  087A               	movf	(send_string@s+1),w
  4142  0FA3  1283               	bcf	status, 5	;RP0=0, select bank0
  4143  0FA4  1303               	bcf	status, 6	;RP1=0, select bank0
  4144  0FA5  00FF               	movwf	btemp+1
  4145  0FA6  0879               	movf	(send_string@s),w
  4146  0FA7  0084               	movwf	fsr0
  4147  0FA8  120A  118A  2003   	fcall	stringtab
              120A  158A         
  4148  0FAD  120A  158A  26E0   	fcall	_send_char
              120A  158A         
  4149                           	
  4150  0FB2                     l2294:	
  4151  0FB2  3001               	movlw	01h
  4152  0FB3  07F9               	addwf	(send_string@s),f
  4153  0FB4  1803               	skipnc
  4154  0FB5  0AFA               	incf	(send_string@s+1),f
  4155  0FB6  2FB7               	goto	l2296
  4156                           	
  4157  0FB7                     l265:	
  4158                           	
  4159  0FB7                     l2296:	
  4160  0FB7  087A               	movf	(send_string@s+1),w
  4161  0FB8  0479               	iorwf	(send_string@s),w
  4162  0FB9  1903               	skipnz
  4163  0FBA  2FBC               	goto	u1651
  4164  0FBB  2FBD               	goto	u1650
  4165  0FBC                     u1651:
  4166  0FBC  2FCF               	goto	l270
  4167  0FBD                     u1650:
  4168                           	
  4169  0FBD                     l2298:	
  4170  0FBD  087A               	movf	(send_string@s+1),w
  4171  0FBE  1283               	bcf	status, 5	;RP0=0, select bank0
  4172  0FBF  1303               	bcf	status, 6	;RP1=0, select bank0
  4173  0FC0  00FF               	movwf	btemp+1
  4174  0FC1  0879               	movf	(send_string@s),w
  4175  0FC2  0084               	movwf	fsr0
  4176  0FC3  120A  118A  2003   	fcall	stringtab
              120A  158A         
  4177  0FC8  3800               	iorlw	0
  4178  0FC9  1D03               	skipz
  4179  0FCA  2FCC               	goto	u1661
  4180  0FCB  2FCD               	goto	u1660
  4181  0FCC                     u1661:
  4182  0FCC  2FA2               	goto	l2292
  4183  0FCD                     u1660:
  4184  0FCD  2FCF               	goto	l270
  4185                           	
  4186  0FCE                     l268:	
  4187  0FCE  2FCF               	goto	l270
  4188                           	
  4189  0FCF                     l269:	
  4190                           	line	217
  4191                           	
  4192  0FCF                     l270:	
  4193  0FCF  0008               	return
  4194                           	opt stack 0
  4195                           GLOBAL	__end_of_send_string
  4196  0FD0                     	__end_of_send_string:
  4197                           	signat	_send_string,4216
  4198                           	global	_send_config
  4199                           
  4200 ;; *************** function _send_config *****************
  4201 ;; Defined at:
  4202 ;;		line 176 in file "Main.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;  data            1    wreg     unsigned char 
  4205 ;; Auto vars:     Size  Location     Type
  4206 ;;  data            1    8[COMMON] unsigned char 
  4207 ;; Return value:  Size  Location     Type
  4208 ;;		None               void
  4209 ;; Registers used:
  4210 ;;		wreg, status,2, status,0, pclath, cstack
  4211 ;; Tracked objects:
  4212 ;;		On entry : 0/0
  4213 ;;		On exit  : 0/0
  4214 ;;		Unchanged: 0/0
  4215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4216 ;;      Params:         0       0       0       0       0
  4217 ;;      Locals:         1       0       0       0       0
  4218 ;;      Temps:          0       0       0       0       0
  4219 ;;      Totals:         1       0       0       0       0
  4220 ;;Total ram usage:        1 bytes
  4221 ;; Hardware stack levels used:    1
  4222 ;; Hardware stack levels required when called:    1
  4223 ;; This function calls:
  4224 ;;		_delay
  4225 ;; This function is called by:
  4226 ;;		_lcdinit
  4227 ;;		_lcd_goto
  4228 ;;		_lcd_clr
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           psect	text581,local,class=CODE,delta=2,merge=1
  4232                           global __ptext581
  4233  0F05                     __ptext581:	;psect for function _send_config
  4234                           psect	text581
  4235                           	file	"Main.c"
  4236                           	line	176
  4237                           	global	__size_of_send_config
  4238  0025                     	__size_of_send_config	equ	__end_of_send_config-_send_config
  4239                           	
  4240  0F05                     _send_config:	
  4241                           	opt	stack 5
  4242                           ; Regs used in _send_config: [wreg+status,2+status,0+pclath+cstack]
  4243                           ;send_config@data stored from wreg
  4244  0F05  00F8               	movwf	(send_config@data)
  4245                           	line	177
  4246                           	
  4247  0F06                     l2180:	
  4248                           ;Main.c: 177: RB4=0;
  4249  0F06  1283               	bcf	status, 5	;RP0=0, select bank0
  4250  0F07  1303               	bcf	status, 6	;RP1=0, select bank0
  4251  0F08  1206               	bcf	(52/8),(52)&7	;volatile
  4252                           	line	178
  4253                           	
  4254  0F09                     l2182:	
  4255                           ;Main.c: 178: PORTD=data;
  4256  0F09  0878               	movf	(send_config@data),w
  4257  0F0A  0088               	movwf	(8)	;volatile
  4258                           	line	179
  4259                           	
  4260  0F0B                     l2184:	
  4261                           ;Main.c: 179: RB5=1;
  4262  0F0B  1686               	bsf	(53/8),(53)&7	;volatile
  4263                           	line	180
  4264                           	
  4265  0F0C                     l2186:	
  4266                           ;Main.c: 180: delay(50);
  4267  0F0C  3000               	movlw	0
  4268  0F0D  00F3               	movwf	(?_delay+3)
  4269  0F0E  3000               	movlw	0
  4270  0F0F  00F2               	movwf	(?_delay+2)
  4271  0F10  3000               	movlw	0
  4272  0F11  00F1               	movwf	(?_delay+1)
  4273  0F12  3032               	movlw	032h
  4274  0F13  00F0               	movwf	(?_delay)
  4275                           
  4276  0F14  120A  158A  27D0   	fcall	_delay
              120A  158A         
  4277                           	line	181
  4278                           	
  4279  0F19                     l2188:	
  4280                           ;Main.c: 181: RB5=0;
  4281  0F19  1283               	bcf	status, 5	;RP0=0, select bank0
  4282  0F1A  1303               	bcf	status, 6	;RP1=0, select bank0
  4283  0F1B  1286               	bcf	(53/8),(53)&7	;volatile
  4284                           	line	182
  4285                           	
  4286  0F1C                     l2190:	
  4287                           ;Main.c: 182: delay(50);
  4288  0F1C  3000               	movlw	0
  4289  0F1D  00F3               	movwf	(?_delay+3)
  4290  0F1E  3000               	movlw	0
  4291  0F1F  00F2               	movwf	(?_delay+2)
  4292  0F20  3000               	movlw	0
  4293  0F21  00F1               	movwf	(?_delay+1)
  4294  0F22  3032               	movlw	032h
  4295  0F23  00F0               	movwf	(?_delay)
  4296                           
  4297  0F24  120A  158A  27D0   	fcall	_delay
              120A  158A         
  4298                           	line	183
  4299                           	
  4300  0F29                     l251:	
  4301  0F29  0008               	return
  4302                           	opt stack 0
  4303                           GLOBAL	__end_of_send_config
  4304  0F2A                     	__end_of_send_config:
  4305                           	signat	_send_config,4216
  4306                           	global	_send_char
  4307                           
  4308 ;; *************** function _send_char *****************
  4309 ;; Defined at:
  4310 ;;		line 186 in file "Main.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  data            1    wreg     unsigned char 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;  data            1    8[COMMON] unsigned char 
  4315 ;; Return value:  Size  Location     Type
  4316 ;;		None               void
  4317 ;; Registers used:
  4318 ;;		wreg, status,2, status,0, pclath, cstack
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4324 ;;      Params:         0       0       0       0       0
  4325 ;;      Locals:         1       0       0       0       0
  4326 ;;      Temps:          0       0       0       0       0
  4327 ;;      Totals:         1       0       0       0       0
  4328 ;;Total ram usage:        1 bytes
  4329 ;; Hardware stack levels used:    1
  4330 ;; Hardware stack levels required when called:    1
  4331 ;; This function calls:
  4332 ;;		_delay
  4333 ;; This function is called by:
  4334 ;;		_send_string
  4335 ;;		_lcd_num
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           psect	text582,local,class=CODE,delta=2,merge=1
  4339                           global __ptext582
  4340  0EE0                     __ptext582:	;psect for function _send_char
  4341                           psect	text582
  4342                           	file	"Main.c"
  4343                           	line	186
  4344                           	global	__size_of_send_char
  4345  0025                     	__size_of_send_char	equ	__end_of_send_char-_send_char
  4346                           	
  4347  0EE0                     _send_char:	
  4348                           	opt	stack 5
  4349                           ; Regs used in _send_char: [wreg+status,2+status,0+pclath+cstack]
  4350                           ;send_char@data stored from wreg
  4351  0EE0  00F8               	movwf	(send_char@data)
  4352                           	line	187
  4353                           	
  4354  0EE1                     l2192:	
  4355                           ;Main.c: 187: RB4=1;
  4356  0EE1  1283               	bcf	status, 5	;RP0=0, select bank0
  4357  0EE2  1303               	bcf	status, 6	;RP1=0, select bank0
  4358  0EE3  1606               	bsf	(52/8),(52)&7	;volatile
  4359                           	line	188
  4360                           	
  4361  0EE4                     l2194:	
  4362                           ;Main.c: 188: PORTD=data;
  4363  0EE4  0878               	movf	(send_char@data),w
  4364  0EE5  0088               	movwf	(8)	;volatile
  4365                           	line	189
  4366                           	
  4367  0EE6                     l2196:	
  4368                           ;Main.c: 189: RB5=1;
  4369  0EE6  1686               	bsf	(53/8),(53)&7	;volatile
  4370                           	line	190
  4371                           	
  4372  0EE7                     l2198:	
  4373                           ;Main.c: 190: delay(10);
  4374  0EE7  3000               	movlw	0
  4375  0EE8  00F3               	movwf	(?_delay+3)
  4376  0EE9  3000               	movlw	0
  4377  0EEA  00F2               	movwf	(?_delay+2)
  4378  0EEB  3000               	movlw	0
  4379  0EEC  00F1               	movwf	(?_delay+1)
  4380  0EED  300A               	movlw	0Ah
  4381  0EEE  00F0               	movwf	(?_delay)
  4382                           
  4383  0EEF  120A  158A  27D0   	fcall	_delay
              120A  158A         
  4384                           	line	191
  4385                           	
  4386  0EF4                     l2200:	
  4387                           ;Main.c: 191: RB5=0;
  4388  0EF4  1283               	bcf	status, 5	;RP0=0, select bank0
  4389  0EF5  1303               	bcf	status, 6	;RP1=0, select bank0
  4390  0EF6  1286               	bcf	(53/8),(53)&7	;volatile
  4391                           	line	192
  4392                           	
  4393  0EF7                     l2202:	
  4394                           ;Main.c: 192: delay(10);
  4395  0EF7  3000               	movlw	0
  4396  0EF8  00F3               	movwf	(?_delay+3)
  4397  0EF9  3000               	movlw	0
  4398  0EFA  00F2               	movwf	(?_delay+2)
  4399  0EFB  3000               	movlw	0
  4400  0EFC  00F1               	movwf	(?_delay+1)
  4401  0EFD  300A               	movlw	0Ah
  4402  0EFE  00F0               	movwf	(?_delay)
  4403                           
  4404  0EFF  120A  158A  27D0   	fcall	_delay
              120A  158A         
  4405                           	line	193
  4406                           	
  4407  0F04                     l254:	
  4408  0F04  0008               	return
  4409                           	opt stack 0
  4410                           GLOBAL	__end_of_send_char
  4411  0F05                     	__end_of_send_char:
  4412                           	signat	_send_char,4216
  4413                           	global	_delay
  4414                           
  4415 ;; *************** function _delay *****************
  4416 ;; Defined at:
  4417 ;;		line 171 in file "Main.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;  data            4    0[COMMON] unsigned long 
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;		None
  4422 ;; Return value:  Size  Location     Type
  4423 ;;		None               void
  4424 ;; Registers used:
  4425 ;;		wreg
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4431 ;;      Params:         4       0       0       0       0
  4432 ;;      Locals:         0       0       0       0       0
  4433 ;;      Temps:          4       0       0       0       0
  4434 ;;      Totals:         8       0       0       0       0
  4435 ;;Total ram usage:        8 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; This function calls:
  4438 ;;		Nothing
  4439 ;; This function is called by:
  4440 ;;		_send_config
  4441 ;;		_send_char
  4442 ;;		_lcd_clr
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           psect	text583,local,class=CODE,delta=2,merge=1
  4446                           global __ptext583
  4447  0FD0                     __ptext583:	;psect for function _delay
  4448                           psect	text583
  4449                           	file	"Main.c"
  4450                           	line	171
  4451                           	global	__size_of_delay
  4452  0030                     	__size_of_delay	equ	__end_of_delay-_delay
  4453                           	
  4454  0FD0                     _delay:	
  4455                           	opt	stack 5
  4456                           ; Regs used in _delay: [wreg]
  4457                           	line	172
  4458                           	
  4459  0FD0                     l1982:	
  4460                           ;Main.c: 172: for( ;data>0;data--);
  4461  0FD0  0873               	movf	(delay@data+3),w
  4462  0FD1  0472               	iorwf	(delay@data+2),w
  4463  0FD2  0471               	iorwf	(delay@data+1),w
  4464  0FD3  0470               	iorwf	(delay@data),w
  4465  0FD4  1D03               	skipz
  4466  0FD5  2FD7               	goto	u1091
  4467  0FD6  2FD8               	goto	u1090
  4468  0FD7                     u1091:
  4469  0FD7  2FDA               	goto	l1986
  4470  0FD8                     u1090:
  4471  0FD8  2FFF               	goto	l248
  4472                           	
  4473  0FD9                     l1984:	
  4474  0FD9  2FFF               	goto	l248
  4475                           	
  4476  0FDA                     l246:	
  4477                           	
  4478  0FDA                     l1986:	
  4479  0FDA  3001               	movlw	01h
  4480  0FDB  00F4               	movwf	((??_delay+0)+0)
  4481  0FDC  3000               	movlw	0
  4482  0FDD  00F5               	movwf	((??_delay+0)+0+1)
  4483  0FDE  3000               	movlw	0
  4484  0FDF  00F6               	movwf	((??_delay+0)+0+2)
  4485  0FE0  3000               	movlw	0
  4486  0FE1  00F7               	movwf	((??_delay+0)+0+3)
  4487  0FE2  0874               	movf	0+(??_delay+0)+0,w
  4488  0FE3  02F0               	subwf	(delay@data),f
  4489  0FE4  0875               	movf	1+(??_delay+0)+0,w
  4490  0FE5  1C03               	skipc
  4491  0FE6  0F75               	incfsz	1+(??_delay+0)+0,w
  4492  0FE7  2FE9               	goto	u1105
  4493  0FE8  2FEA               	goto	u1106
  4494  0FE9                     u1105:
  4495  0FE9  02F1               	subwf	(delay@data+1),f
  4496  0FEA                     u1106:
  4497  0FEA  0876               	movf	2+(??_delay+0)+0,w
  4498  0FEB  1C03               	skipc
  4499  0FEC  0F76               	incfsz	2+(??_delay+0)+0,w
  4500  0FED  2FEF               	goto	u1107
  4501  0FEE  2FF0               	goto	u1108
  4502  0FEF                     u1107:
  4503  0FEF  02F2               	subwf	(delay@data+2),f
  4504  0FF0                     u1108:
  4505  0FF0  0877               	movf	3+(??_delay+0)+0,w
  4506  0FF1  1C03               	skipc
  4507  0FF2  0F77               	incfsz	3+(??_delay+0)+0,w
  4508  0FF3  2FF5               	goto	u1109
  4509  0FF4  2FF6               	goto	u1100
  4510  0FF5                     u1109:
  4511  0FF5  02F3               	subwf	(delay@data+3),f
  4512  0FF6                     u1100:
  4513                           
  4514  0FF6  0873               	movf	(delay@data+3),w
  4515  0FF7  0472               	iorwf	(delay@data+2),w
  4516  0FF8  0471               	iorwf	(delay@data+1),w
  4517  0FF9  0470               	iorwf	(delay@data),w
  4518  0FFA  1D03               	skipz
  4519  0FFB  2FFD               	goto	u1111
  4520  0FFC  2FFE               	goto	u1110
  4521  0FFD                     u1111:
  4522  0FFD  2FDA               	goto	l1986
  4523  0FFE                     u1110:
  4524  0FFE  2FFF               	goto	l248
  4525                           	
  4526  0FFF                     l247:	
  4527                           	line	173
  4528                           	
  4529  0FFF                     l248:	
  4530  0FFF  0008               	return
  4531                           	opt stack 0
  4532                           GLOBAL	__end_of_delay
  4533  1000                     	__end_of_delay:
  4534                           	signat	_delay,4216
  4535                           	global	___lwdiv
  4536                           
  4537 ;; *************** function ___lwdiv *****************
  4538 ;; Defined at:
  4539 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.11\sources\lwdiv.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;  divisor         2    0[COMMON] unsigned int 
  4542 ;;  dividend        2    2[COMMON] unsigned int 
  4543 ;; Auto vars:     Size  Location     Type
  4544 ;;  quotient        2    5[COMMON] unsigned int 
  4545 ;;  counter         1    7[COMMON] unsigned char 
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  2    0[COMMON] unsigned int 
  4548 ;; Registers used:
  4549 ;;		wreg, status,2, status,0
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4555 ;;      Params:         4       0       0       0       0
  4556 ;;      Locals:         3       0       0       0       0
  4557 ;;      Temps:          1       0       0       0       0
  4558 ;;      Totals:         8       0       0       0       0
  4559 ;;Total ram usage:        8 bytes
  4560 ;; Hardware stack levels used:    1
  4561 ;; This function calls:
  4562 ;;		Nothing
  4563 ;; This function is called by:
  4564 ;;		_lcd_num
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           psect	text584,local,class=CODE,delta=2,merge=1
  4568                           global __ptext584
  4569  009D                     __ptext584:	;psect for function ___lwdiv
  4570                           psect	text584
  4571                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.11\sources\lwdiv.c"
  4572                           	line	5
  4573                           	global	__size_of___lwdiv
  4574  004D                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  4575                           	
  4576  009D                     ___lwdiv:	
  4577                           	opt	stack 6
  4578                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4579                           	line	9
  4580                           	
  4581  009D                     l1988:	
  4582  009D  01F5               	clrf	(___lwdiv@quotient)
  4583  009E  01F6               	clrf	(___lwdiv@quotient+1)
  4584                           	line	10
  4585                           	
  4586  009F                     l1990:	
  4587  009F  0871               	movf	(___lwdiv@divisor+1),w
  4588  00A0  0470               	iorwf	(___lwdiv@divisor),w
  4589  00A1  1903               	skipnz
  4590  00A2  28A4               	goto	u1121
  4591  00A3  28A5               	goto	u1120
  4592  00A4                     u1121:
  4593  00A4  28E2               	goto	l2010
  4594  00A5                     u1120:
  4595                           	line	11
  4596                           	
  4597  00A5                     l1992:	
  4598  00A5  01F7               	clrf	(___lwdiv@counter)
  4599  00A6  0AF7               	incf	(___lwdiv@counter),f
  4600                           	line	12
  4601  00A7  28B4               	goto	l1998
  4602                           	
  4603  00A8                     l402:	
  4604                           	line	13
  4605                           	
  4606  00A8                     l1994:	
  4607  00A8  3001               	movlw	01h
  4608                           	
  4609  00A9                     u1135:
  4610  00A9  1003               	clrc
  4611  00AA  0DF0               	rlf	(___lwdiv@divisor),f
  4612  00AB  0DF1               	rlf	(___lwdiv@divisor+1),f
  4613  00AC  3EFF               	addlw	-1
  4614  00AD  1D03               	skipz
  4615  00AE  28A9               	goto	u1135
  4616                           	line	14
  4617                           	
  4618  00AF                     l1996:	
  4619  00AF  3001               	movlw	(01h)
  4620  00B0  00F4               	movwf	(??___lwdiv+0)+0
  4621  00B1  0874               	movf	(??___lwdiv+0)+0,w
  4622  00B2  07F7               	addwf	(___lwdiv@counter),f
  4623  00B3  28B4               	goto	l1998
  4624                           	line	15
  4625                           	
  4626  00B4                     l401:	
  4627                           	line	12
  4628                           	
  4629  00B4                     l1998:	
  4630  00B4  1FF1               	btfss	(___lwdiv@divisor+1),(15)&7
  4631  00B5  28B7               	goto	u1141
  4632  00B6  28B8               	goto	u1140
  4633  00B7                     u1141:
  4634  00B7  28A8               	goto	l1994
  4635  00B8                     u1140:
  4636  00B8  28BA               	goto	l2000
  4637                           	
  4638  00B9                     l403:	
  4639  00B9  28BA               	goto	l2000
  4640                           	line	16
  4641                           	
  4642  00BA                     l404:	
  4643                           	line	17
  4644                           	
  4645  00BA                     l2000:	
  4646  00BA  3001               	movlw	01h
  4647                           	
  4648  00BB                     u1155:
  4649  00BB  1003               	clrc
  4650  00BC  0DF5               	rlf	(___lwdiv@quotient),f
  4651  00BD  0DF6               	rlf	(___lwdiv@quotient+1),f
  4652  00BE  3EFF               	addlw	-1
  4653  00BF  1D03               	skipz
  4654  00C0  28BB               	goto	u1155
  4655                           	line	18
  4656  00C1  0871               	movf	(___lwdiv@divisor+1),w
  4657  00C2  0273               	subwf	(___lwdiv@dividend+1),w
  4658  00C3  1D03               	skipz
  4659  00C4  28C7               	goto	u1165
  4660  00C5  0870               	movf	(___lwdiv@divisor),w
  4661  00C6  0272               	subwf	(___lwdiv@dividend),w
  4662  00C7                     u1165:
  4663  00C7  1C03               	skipc
  4664  00C8  28CA               	goto	u1161
  4665  00C9  28CB               	goto	u1160
  4666  00CA                     u1161:
  4667  00CA  28D3               	goto	l2006
  4668  00CB                     u1160:
  4669                           	line	19
  4670                           	
  4671  00CB                     l2002:	
  4672  00CB  0870               	movf	(___lwdiv@divisor),w
  4673  00CC  02F2               	subwf	(___lwdiv@dividend),f
  4674  00CD  0871               	movf	(___lwdiv@divisor+1),w
  4675  00CE  1C03               	skipc
  4676  00CF  03F3               	decf	(___lwdiv@dividend+1),f
  4677  00D0  02F3               	subwf	(___lwdiv@dividend+1),f
  4678                           	line	20
  4679                           	
  4680  00D1                     l2004:	
  4681  00D1  1475               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  4682  00D2  28D3               	goto	l2006
  4683                           	line	21
  4684                           	
  4685  00D3                     l405:	
  4686                           	line	22
  4687                           	
  4688  00D3                     l2006:	
  4689  00D3  3001               	movlw	01h
  4690                           	
  4691  00D4                     u1175:
  4692  00D4  1003               	clrc
  4693  00D5  0CF1               	rrf	(___lwdiv@divisor+1),f
  4694  00D6  0CF0               	rrf	(___lwdiv@divisor),f
  4695  00D7  3EFF               	addlw	-1
  4696  00D8  1D03               	skipz
  4697  00D9  28D4               	goto	u1175
  4698                           	line	23
  4699                           	
  4700  00DA                     l2008:	
  4701  00DA  3001               	movlw	low(01h)
  4702  00DB  02F7               	subwf	(___lwdiv@counter),f
  4703  00DC  1D03               	btfss	status,2
  4704  00DD  28DF               	goto	u1181
  4705  00DE  28E0               	goto	u1180
  4706  00DF                     u1181:
  4707  00DF  28BA               	goto	l2000
  4708  00E0                     u1180:
  4709  00E0  28E2               	goto	l2010
  4710                           	
  4711  00E1                     l406:	
  4712  00E1  28E2               	goto	l2010
  4713                           	line	24
  4714                           	
  4715  00E2                     l400:	
  4716                           	line	25
  4717                           	
  4718  00E2                     l2010:	
  4719  00E2  0876               	movf	(___lwdiv@quotient+1),w
  4720  00E3  01F1               	clrf	(?___lwdiv+1)
  4721  00E4  07F1               	addwf	(?___lwdiv+1)
  4722  00E5  0875               	movf	(___lwdiv@quotient),w
  4723  00E6  01F0               	clrf	(?___lwdiv)
  4724  00E7  07F0               	addwf	(?___lwdiv)
  4725                           
  4726  00E8  28E9               	goto	l407
  4727                           	
  4728  00E9                     l2012:	
  4729                           	line	26
  4730                           	
  4731  00E9                     l407:	
  4732  00E9  0008               	return
  4733                           	opt stack 0
  4734                           GLOBAL	__end_of___lwdiv
  4735  00EA                     	__end_of___lwdiv:
  4736                           	signat	___lwdiv,8314
  4737                           	global	___lwmod
  4738                           
  4739 ;; *************** function ___lwmod *****************
  4740 ;; Defined at:
  4741 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.11\sources\lwmod.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;  divisor         2    0[COMMON] unsigned int 
  4744 ;;  dividend        2    2[COMMON] unsigned int 
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;  counter         1    5[COMMON] unsigned char 
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  2    0[COMMON] unsigned int 
  4749 ;; Registers used:
  4750 ;;		wreg, status,2, status,0
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4756 ;;      Params:         4       0       0       0       0
  4757 ;;      Locals:         1       0       0       0       0
  4758 ;;      Temps:          1       0       0       0       0
  4759 ;;      Totals:         6       0       0       0       0
  4760 ;;Total ram usage:        6 bytes
  4761 ;; Hardware stack levels used:    1
  4762 ;; This function calls:
  4763 ;;		Nothing
  4764 ;; This function is called by:
  4765 ;;		_lcd_num
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           psect	text585,local,class=CODE,delta=2,merge=1
  4769                           global __ptext585
  4770  005A                     __ptext585:	;psect for function ___lwmod
  4771                           psect	text585
  4772                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.11\sources\lwmod.c"
  4773                           	line	5
  4774                           	global	__size_of___lwmod
  4775  0043                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  4776                           	
  4777  005A                     ___lwmod:	
  4778                           	opt	stack 6
  4779                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4780                           	line	8
  4781                           	
  4782  005A                     l2014:	
  4783  005A  0871               	movf	(___lwmod@divisor+1),w
  4784  005B  0470               	iorwf	(___lwmod@divisor),w
  4785  005C  1903               	skipnz
  4786  005D  285F               	goto	u1191
  4787  005E  2860               	goto	u1190
  4788  005F                     u1191:
  4789  005F  2895               	goto	l2032
  4790  0060                     u1190:
  4791                           	line	9
  4792                           	
  4793  0060                     l2016:	
  4794  0060  01F5               	clrf	(___lwmod@counter)
  4795  0061  0AF5               	incf	(___lwmod@counter),f
  4796                           	line	10
  4797  0062  286F               	goto	l2022
  4798                           	
  4799  0063                     l412:	
  4800                           	line	11
  4801                           	
  4802  0063                     l2018:	
  4803  0063  3001               	movlw	01h
  4804                           	
  4805  0064                     u1205:
  4806  0064  1003               	clrc
  4807  0065  0DF0               	rlf	(___lwmod@divisor),f
  4808  0066  0DF1               	rlf	(___lwmod@divisor+1),f
  4809  0067  3EFF               	addlw	-1
  4810  0068  1D03               	skipz
  4811  0069  2864               	goto	u1205
  4812                           	line	12
  4813                           	
  4814  006A                     l2020:	
  4815  006A  3001               	movlw	(01h)
  4816  006B  00F4               	movwf	(??___lwmod+0)+0
  4817  006C  0874               	movf	(??___lwmod+0)+0,w
  4818  006D  07F5               	addwf	(___lwmod@counter),f
  4819  006E  286F               	goto	l2022
  4820                           	line	13
  4821                           	
  4822  006F                     l411:	
  4823                           	line	10
  4824                           	
  4825  006F                     l2022:	
  4826  006F  1FF1               	btfss	(___lwmod@divisor+1),(15)&7
  4827  0070  2872               	goto	u1211
  4828  0071  2873               	goto	u1210
  4829  0072                     u1211:
  4830  0072  2863               	goto	l2018
  4831  0073                     u1210:
  4832  0073  2875               	goto	l2024
  4833                           	
  4834  0074                     l413:	
  4835  0074  2875               	goto	l2024
  4836                           	line	14
  4837                           	
  4838  0075                     l414:	
  4839                           	line	15
  4840                           	
  4841  0075                     l2024:	
  4842  0075  0871               	movf	(___lwmod@divisor+1),w
  4843  0076  0273               	subwf	(___lwmod@dividend+1),w
  4844  0077  1D03               	skipz
  4845  0078  287B               	goto	u1225
  4846  0079  0870               	movf	(___lwmod@divisor),w
  4847  007A  0272               	subwf	(___lwmod@dividend),w
  4848  007B                     u1225:
  4849  007B  1C03               	skipc
  4850  007C  287E               	goto	u1221
  4851  007D  287F               	goto	u1220
  4852  007E                     u1221:
  4853  007E  2886               	goto	l2028
  4854  007F                     u1220:
  4855                           	line	16
  4856                           	
  4857  007F                     l2026:	
  4858  007F  0870               	movf	(___lwmod@divisor),w
  4859  0080  02F2               	subwf	(___lwmod@dividend),f
  4860  0081  0871               	movf	(___lwmod@divisor+1),w
  4861  0082  1C03               	skipc
  4862  0083  03F3               	decf	(___lwmod@dividend+1),f
  4863  0084  02F3               	subwf	(___lwmod@dividend+1),f
  4864  0085  2886               	goto	l2028
  4865                           	
  4866  0086                     l415:	
  4867                           	line	17
  4868                           	
  4869  0086                     l2028:	
  4870  0086  3001               	movlw	01h
  4871                           	
  4872  0087                     u1235:
  4873  0087  1003               	clrc
  4874  0088  0CF1               	rrf	(___lwmod@divisor+1),f
  4875  0089  0CF0               	rrf	(___lwmod@divisor),f
  4876  008A  3EFF               	addlw	-1
  4877  008B  1D03               	skipz
  4878  008C  2887               	goto	u1235
  4879                           	line	18
  4880                           	
  4881  008D                     l2030:	
  4882  008D  3001               	movlw	low(01h)
  4883  008E  02F5               	subwf	(___lwmod@counter),f
  4884  008F  1D03               	btfss	status,2
  4885  0090  2892               	goto	u1241
  4886  0091  2893               	goto	u1240
  4887  0092                     u1241:
  4888  0092  2875               	goto	l2024
  4889  0093                     u1240:
  4890  0093  2895               	goto	l2032
  4891                           	
  4892  0094                     l416:	
  4893  0094  2895               	goto	l2032
  4894                           	line	19
  4895                           	
  4896  0095                     l410:	
  4897                           	line	20
  4898                           	
  4899  0095                     l2032:	
  4900  0095  0873               	movf	(___lwmod@dividend+1),w
  4901  0096  01F1               	clrf	(?___lwmod+1)
  4902  0097  07F1               	addwf	(?___lwmod+1)
  4903  0098  0872               	movf	(___lwmod@dividend),w
  4904  0099  01F0               	clrf	(?___lwmod)
  4905  009A  07F0               	addwf	(?___lwmod)
  4906                           
  4907  009B  289C               	goto	l417
  4908                           	
  4909  009C                     l2034:	
  4910                           	line	21
  4911                           	
  4912  009C                     l417:	
  4913  009C  0008               	return
  4914                           	opt stack 0
  4915                           GLOBAL	__end_of___lwmod
  4916  009D                     	__end_of___lwmod:
  4917                           	signat	___lwmod,8314
  4918                           	global	___ftdiv
  4919                           
  4920 ;; *************** function ___ftdiv *****************
  4921 ;; Defined at:
  4922 ;;		line 50 in file "C:\Program Files (x86)\Microchip\xc8\v1.11\sources\ftdiv.c"
  4923 ;; Parameters:    Size  Location     Type
  4924 ;;  f2              3   29[BANK0 ] float 
  4925 ;;  f1              3   32[BANK0 ] float 
  4926 ;; Auto vars:     Size  Location     Type
  4927 ;;  f3              3   40[BANK0 ] float 
  4928 ;;  sign            1   44[BANK0 ] unsigned char 
  4929 ;;  exp             1   43[BANK0 ] unsigned char 
  4930 ;;  cntr            1   39[BANK0 ] unsigned char 
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  3   29[BANK0 ] float 
  4933 ;; Registers used:
  4934 ;;		wreg, status,2, status,0, pclath, cstack
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4940 ;;      Params:         0       6       0       0       0
  4941 ;;      Locals:         0       6       0       0       0
  4942 ;;      Temps:          0       4       0       0       0
  4943 ;;      Totals:         0      16       0       0       0
  4944 ;;Total ram usage:       16 bytes
  4945 ;; Hardware stack levels used:    1
  4946 ;; Hardware stack levels required when called:    1
  4947 ;; This function calls:
  4948 ;;		___ftpack
  4949 ;; This function is called by:
  4950 ;;		_main
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           psect	text586,local,class=CODE,delta=2,merge=1
  4954                           global __ptext586
  4955  02F9                     __ptext586:	;psect for function ___ftdiv
  4956                           psect	text586
  4957                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.11\sources\ftdiv.c"
  4958                           	line	50
  4959                           	global	__size_of___ftdiv
  4960  00C8                     	__size_of___ftdiv	equ	__end_of___ftdiv-___ftdiv
  4961                           	
  4962  02F9                     ___ftdiv:	
  4963                           	opt	stack 6
  4964                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4965                           	line	55
  4966                           	
  4967  02F9                     l2396:	
  4968  02F9  1283               	bcf	status, 5	;RP0=0, select bank0
  4969  02FA  1303               	bcf	status, 6	;RP1=0, select bank0
  4970  02FB  0840               	movf	(___ftdiv@f1),w
  4971  02FC  00C3               	movwf	((??___ftdiv+0)+0)
  4972  02FD  0841               	movf	(___ftdiv@f1+1),w
  4973  02FE  00C4               	movwf	((??___ftdiv+0)+0+1)
  4974  02FF  0842               	movf	(___ftdiv@f1+2),w
  4975  0300  00C5               	movwf	((??___ftdiv+0)+0+2)
  4976  0301  1003               	clrc
  4977  0302  0D44               	rlf	(??___ftdiv+0)+1,w
  4978  0303  0D45               	rlf	(??___ftdiv+0)+2,w
  4979  0304  00C6               	movwf	(??___ftdiv+3)+0
  4980  0305  0846               	movf	(??___ftdiv+3)+0,w
  4981  0306  00CB               	movwf	(___ftdiv@exp)
  4982  0307  08CB               	movf	((___ftdiv@exp)),f
  4983  0308  1D03               	skipz
  4984  0309  2B0B               	goto	u1841
  4985  030A  2B0C               	goto	u1840
  4986  030B                     u1841:
  4987  030B  2B14               	goto	l2402
  4988  030C                     u1840:
  4989                           	line	56
  4990                           	
  4991  030C                     l2398:	
  4992  030C  3000               	movlw	0x0
  4993  030D  00BD               	movwf	(?___ftdiv)
  4994  030E  3000               	movlw	0x0
  4995  030F  00BE               	movwf	(?___ftdiv+1)
  4996  0310  3000               	movlw	0x0
  4997  0311  00BF               	movwf	(?___ftdiv+2)
  4998  0312  2BC0               	goto	l483
  4999                           	
  5000  0313                     l2400:	
  5001  0313  2BC0               	goto	l483
  5002                           	
  5003  0314                     l482:	
  5004                           	line	57
  5005                           	
  5006  0314                     l2402:	
  5007  0314  083D               	movf	(___ftdiv@f2),w
  5008  0315  00C3               	movwf	((??___ftdiv+0)+0)
  5009  0316  083E               	movf	(___ftdiv@f2+1),w
  5010  0317  00C4               	movwf	((??___ftdiv+0)+0+1)
  5011  0318  083F               	movf	(___ftdiv@f2+2),w
  5012  0319  00C5               	movwf	((??___ftdiv+0)+0+2)
  5013  031A  1003               	clrc
  5014  031B  0D44               	rlf	(??___ftdiv+0)+1,w
  5015  031C  0D45               	rlf	(??___ftdiv+0)+2,w
  5016  031D  00C6               	movwf	(??___ftdiv+3)+0
  5017  031E  0846               	movf	(??___ftdiv+3)+0,w
  5018  031F  00CC               	movwf	(___ftdiv@sign)
  5019  0320  08CC               	movf	((___ftdiv@sign)),f
  5020  0321  1D03               	skipz
  5021  0322  2B24               	goto	u1851
  5022  0323  2B25               	goto	u1850
  5023  0324                     u1851:
  5024  0324  2B2D               	goto	l2408
  5025  0325                     u1850:
  5026                           	line	58
  5027                           	
  5028  0325                     l2404:	
  5029  0325  3000               	movlw	0x0
  5030  0326  00BD               	movwf	(?___ftdiv)
  5031  0327  3000               	movlw	0x0
  5032  0328  00BE               	movwf	(?___ftdiv+1)
  5033  0329  3000               	movlw	0x0
  5034  032A  00BF               	movwf	(?___ftdiv+2)
  5035  032B  2BC0               	goto	l483
  5036                           	
  5037  032C                     l2406:	
  5038  032C  2BC0               	goto	l483
  5039                           	
  5040  032D                     l484:	
  5041                           	line	59
  5042                           	
  5043  032D                     l2408:	
  5044  032D  3000               	movlw	0
  5045  032E  00C8               	movwf	(___ftdiv@f3)
  5046  032F  3000               	movlw	0
  5047  0330  00C9               	movwf	(___ftdiv@f3+1)
  5048  0331  3000               	movlw	0
  5049  0332  00CA               	movwf	(___ftdiv@f3+2)
  5050                           	line	60
  5051                           	
  5052  0333                     l2410:	
  5053  0333  3089               	movlw	(089h)
  5054  0334  074C               	addwf	(___ftdiv@sign),w
  5055  0335  00C3               	movwf	(??___ftdiv+0)+0
  5056  0336  0843               	movf	0+(??___ftdiv+0)+0,w
  5057  0337  02CB               	subwf	(___ftdiv@exp),f
  5058                           	line	61
  5059                           	
  5060  0338                     l2412:	
  5061  0338  0840               	movf	(___ftdiv@f1),w
  5062  0339  00C3               	movwf	((??___ftdiv+0)+0)
  5063  033A  0841               	movf	(___ftdiv@f1+1),w
  5064  033B  00C4               	movwf	((??___ftdiv+0)+0+1)
  5065  033C  0842               	movf	(___ftdiv@f1+2),w
  5066  033D  00C5               	movwf	((??___ftdiv+0)+0+2)
  5067  033E  3010               	movlw	010h
  5068  033F                     u1865:
  5069  033F  1003               	clrc
  5070  0340  0CC5               	rrf	(??___ftdiv+0)+2,f
  5071  0341  0CC4               	rrf	(??___ftdiv+0)+1,f
  5072  0342  0CC3               	rrf	(??___ftdiv+0)+0,f
  5073  0343                     u1860:
  5074  0343  3EFF               	addlw	-1
  5075  0344  1D03               	skipz
  5076  0345  2B3F               	goto	u1865
  5077  0346  0843               	movf	0+(??___ftdiv+0)+0,w
  5078  0347  00C6               	movwf	(??___ftdiv+3)+0
  5079  0348  0846               	movf	(??___ftdiv+3)+0,w
  5080  0349  00CC               	movwf	(___ftdiv@sign)
  5081                           	line	62
  5082                           	
  5083  034A                     l2414:	
  5084  034A  083D               	movf	(___ftdiv@f2),w
  5085  034B  00C3               	movwf	((??___ftdiv+0)+0)
  5086  034C  083E               	movf	(___ftdiv@f2+1),w
  5087  034D  00C4               	movwf	((??___ftdiv+0)+0+1)
  5088  034E  083F               	movf	(___ftdiv@f2+2),w
  5089  034F  00C5               	movwf	((??___ftdiv+0)+0+2)
  5090  0350  3010               	movlw	010h
  5091  0351                     u1875:
  5092  0351  1003               	clrc
  5093  0352  0CC5               	rrf	(??___ftdiv+0)+2,f
  5094  0353  0CC4               	rrf	(??___ftdiv+0)+1,f
  5095  0354  0CC3               	rrf	(??___ftdiv+0)+0,f
  5096  0355                     u1870:
  5097  0355  3EFF               	addlw	-1
  5098  0356  1D03               	skipz
  5099  0357  2B51               	goto	u1875
  5100  0358  0843               	movf	0+(??___ftdiv+0)+0,w
  5101  0359  00C6               	movwf	(??___ftdiv+3)+0
  5102  035A  0846               	movf	(??___ftdiv+3)+0,w
  5103  035B  06CC               	xorwf	(___ftdiv@sign),f
  5104                           	line	63
  5105                           	
  5106  035C                     l2416:	
  5107  035C  3080               	movlw	(080h)
  5108  035D  00C3               	movwf	(??___ftdiv+0)+0
  5109  035E  0843               	movf	(??___ftdiv+0)+0,w
  5110  035F  05CC               	andwf	(___ftdiv@sign),f
  5111                           	line	64
  5112                           	
  5113  0360                     l2418:	
  5114  0360  17C1               	bsf	(___ftdiv@f1)+(15/8),(15)&7
  5115                           	line	65
  5116  0361  30FF               	movlw	0FFh
  5117  0362  05C0               	andwf	(___ftdiv@f1),f
  5118  0363  30FF               	movlw	0FFh
  5119  0364  05C1               	andwf	(___ftdiv@f1+1),f
  5120  0365  3000               	movlw	0
  5121  0366  05C2               	andwf	(___ftdiv@f1+2),f
  5122                           	line	66
  5123                           	
  5124  0367                     l2420:	
  5125  0367  17BE               	bsf	(___ftdiv@f2)+(15/8),(15)&7
  5126                           	line	67
  5127  0368  30FF               	movlw	0FFh
  5128  0369  05BD               	andwf	(___ftdiv@f2),f
  5129  036A  30FF               	movlw	0FFh
  5130  036B  05BE               	andwf	(___ftdiv@f2+1),f
  5131  036C  3000               	movlw	0
  5132  036D  05BF               	andwf	(___ftdiv@f2+2),f
  5133                           	line	68
  5134  036E  3018               	movlw	(018h)
  5135  036F  00C3               	movwf	(??___ftdiv+0)+0
  5136  0370  0843               	movf	(??___ftdiv+0)+0,w
  5137  0371  00C7               	movwf	(___ftdiv@cntr)
  5138  0372  2B73               	goto	l2422
  5139                           	line	69
  5140                           	
  5141  0373                     l485:	
  5142                           	line	70
  5143                           	
  5144  0373                     l2422:	
  5145  0373  3001               	movlw	01h
  5146  0374                     u1885:
  5147  0374  1003               	clrc
  5148  0375  0DC8               	rlf	(___ftdiv@f3),f
  5149  0376  0DC9               	rlf	(___ftdiv@f3+1),f
  5150  0377  0DCA               	rlf	(___ftdiv@f3+2),f
  5151  0378  3EFF               	addlw	-1
  5152  0379  1D03               	skipz
  5153  037A  2B74               	goto	u1885
  5154                           	line	71
  5155                           	
  5156  037B                     l2424:	
  5157  037B  083F               	movf	(___ftdiv@f2+2),w
  5158  037C  0242               	subwf	(___ftdiv@f1+2),w
  5159  037D  1D03               	skipz
  5160  037E  2B85               	goto	u1895
  5161  037F  083E               	movf	(___ftdiv@f2+1),w
  5162  0380  0241               	subwf	(___ftdiv@f1+1),w
  5163  0381  1D03               	skipz
  5164  0382  2B85               	goto	u1895
  5165  0383  083D               	movf	(___ftdiv@f2),w
  5166  0384  0240               	subwf	(___ftdiv@f1),w
  5167  0385                     u1895:
  5168  0385  1C03               	skipc
  5169  0386  2B88               	goto	u1891
  5170  0387  2B89               	goto	u1890
  5171  0388                     u1891:
  5172  0388  2B95               	goto	l2430
  5173  0389                     u1890:
  5174                           	line	72
  5175                           	
  5176  0389                     l2426:	
  5177  0389  083D               	movf	(___ftdiv@f2),w
  5178  038A  02C0               	subwf	(___ftdiv@f1),f
  5179  038B  083E               	movf	(___ftdiv@f2+1),w
  5180  038C  1C03               	skipc
  5181  038D  0F3E               	incfsz	(___ftdiv@f2+1),w
  5182  038E  02C1               	subwf	(___ftdiv@f1+1),f
  5183  038F  083F               	movf	(___ftdiv@f2+2),w
  5184  0390  1C03               	skipc
  5185  0391  0A3F               	incf	(___ftdiv@f2+2),w
  5186  0392  02C2               	subwf	(___ftdiv@f1+2),f
  5187                           	line	73
  5188                           	
  5189  0393                     l2428:	
  5190  0393  1448               	bsf	(___ftdiv@f3)+(0/8),(0)&7
  5191  0394  2B95               	goto	l2430
  5192                           	line	74
  5193                           	
  5194  0395                     l486:	
  5195                           	line	75
  5196                           	
  5197  0395                     l2430:	
  5198  0395  3001               	movlw	01h
  5199  0396                     u1905:
  5200  0396  1003               	clrc
  5201  0397  0DC0               	rlf	(___ftdiv@f1),f
  5202  0398  0DC1               	rlf	(___ftdiv@f1+1),f
  5203  0399  0DC2               	rlf	(___ftdiv@f1+2),f
  5204  039A  3EFF               	addlw	-1
  5205  039B  1D03               	skipz
  5206  039C  2B96               	goto	u1905
  5207                           	line	76
  5208                           	
  5209  039D                     l2432:	
  5210  039D  3001               	movlw	low(01h)
  5211  039E  02C7               	subwf	(___ftdiv@cntr),f
  5212  039F  1D03               	btfss	status,2
  5213  03A0  2BA2               	goto	u1911
  5214  03A1  2BA3               	goto	u1910
  5215  03A2                     u1911:
  5216  03A2  2B73               	goto	l2422
  5217  03A3                     u1910:
  5218  03A3  2BA4               	goto	l2434
  5219                           	
  5220  03A4                     l487:	
  5221                           	line	77
  5222                           	
  5223  03A4                     l2434:	
  5224  03A4  0848               	movf	(___ftdiv@f3),w
  5225  03A5  00F0               	movwf	(?___ftpack)
  5226  03A6  0849               	movf	(___ftdiv@f3+1),w
  5227  03A7  00F1               	movwf	(?___ftpack+1)
  5228  03A8  084A               	movf	(___ftdiv@f3+2),w
  5229  03A9  00F2               	movwf	(?___ftpack+2)
  5230  03AA  084B               	movf	(___ftdiv@exp),w
  5231  03AB  00C3               	movwf	(??___ftdiv+0)+0
  5232  03AC  0843               	movf	(??___ftdiv+0)+0,w
  5233  03AD  00F3               	movwf	0+(?___ftpack)+03h
  5234  03AE  084C               	movf	(___ftdiv@sign),w
  5235  03AF  00C4               	movwf	(??___ftdiv+1)+0
  5236  03B0  0844               	movf	(??___ftdiv+1)+0,w
  5237  03B1  00F4               	movwf	0+(?___ftpack)+04h
  5238  03B2  120A  118A  2148   	fcall	___ftpack
              120A  118A         
  5239  03B7  0870               	movf	(0+(?___ftpack)),w
  5240  03B8  1283               	bcf	status, 5	;RP0=0, select bank0
  5241  03B9  1303               	bcf	status, 6	;RP1=0, select bank0
  5242  03BA  00BD               	movwf	(?___ftdiv)
  5243  03BB  0871               	movf	(1+(?___ftpack)),w
  5244  03BC  00BE               	movwf	(?___ftdiv+1)
  5245  03BD  0872               	movf	(2+(?___ftpack)),w
  5246  03BE  00BF               	movwf	(?___ftdiv+2)
  5247  03BF  2BC0               	goto	l483
  5248                           	
  5249  03C0                     l2436:	
  5250                           	line	78
  5251                           	
  5252  03C0                     l483:	
  5253  03C0  0008               	return
  5254                           	opt stack 0
  5255                           GLOBAL	__end_of___ftdiv
  5256  03C1                     	__end_of___ftdiv:
  5257                           	signat	___ftdiv,8315
  5258                           	global	___ftmul
  5259                           
  5260 ;; *************** function ___ftmul *****************
  5261 ;; Defined at:
  5262 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.11\sources\ftmul.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;  f1              3   13[BANK0 ] float 
  5265 ;;  f2              3   16[BANK0 ] float 
  5266 ;; Auto vars:     Size  Location     Type
  5267 ;;  f3_as_produc    3   24[BANK0 ] unsigned um
  5268 ;;  sign            1   28[BANK0 ] unsigned char 
  5269 ;;  cntr            1   27[BANK0 ] unsigned char 
  5270 ;;  exp             1   23[BANK0 ] unsigned char 
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  3   13[BANK0 ] float 
  5273 ;; Registers used:
  5274 ;;		wreg, status,2, status,0, pclath, cstack
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5280 ;;      Params:         0       6       0       0       0
  5281 ;;      Locals:         0       6       0       0       0
  5282 ;;      Temps:          0       4       0       0       0
  5283 ;;      Totals:         0      16       0       0       0
  5284 ;;Total ram usage:       16 bytes
  5285 ;; Hardware stack levels used:    1
  5286 ;; Hardware stack levels required when called:    1
  5287 ;; This function calls:
  5288 ;;		___ftpack
  5289 ;; This function is called by:
  5290 ;;		_main
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           psect	text587,local,class=CODE,delta=2,merge=1
  5294                           global __ptext587
  5295  03C1                     __ptext587:	;psect for function ___ftmul
  5296                           psect	text587
  5297                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.11\sources\ftmul.c"
  5298                           	line	52
  5299                           	global	__size_of___ftmul
  5300  00EE                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  5301                           	
  5302  03C1                     ___ftmul:	
  5303                           	opt	stack 6
  5304                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5305                           	line	56
  5306                           	
  5307  03C1                     l2300:	
  5308  03C1  1283               	bcf	status, 5	;RP0=0, select bank0
  5309  03C2  1303               	bcf	status, 6	;RP1=0, select bank0
  5310  03C3  082D               	movf	(___ftmul@f1),w
  5311  03C4  00B3               	movwf	((??___ftmul+0)+0)
  5312  03C5  082E               	movf	(___ftmul@f1+1),w
  5313  03C6  00B4               	movwf	((??___ftmul+0)+0+1)
  5314  03C7  082F               	movf	(___ftmul@f1+2),w
  5315  03C8  00B5               	movwf	((??___ftmul+0)+0+2)
  5316  03C9  1003               	clrc
  5317  03CA  0D34               	rlf	(??___ftmul+0)+1,w
  5318  03CB  0D35               	rlf	(??___ftmul+0)+2,w
  5319  03CC  00B6               	movwf	(??___ftmul+3)+0
  5320  03CD  0836               	movf	(??___ftmul+3)+0,w
  5321  03CE  00B7               	movwf	(___ftmul@exp)
  5322  03CF  08B7               	movf	((___ftmul@exp)),f
  5323  03D0  1D03               	skipz
  5324  03D1  2BD3               	goto	u1671
  5325  03D2  2BD4               	goto	u1670
  5326  03D3                     u1671:
  5327  03D3  2BDC               	goto	l2306
  5328  03D4                     u1670:
  5329                           	line	57
  5330                           	
  5331  03D4                     l2302:	
  5332  03D4  3000               	movlw	0x0
  5333  03D5  00AD               	movwf	(?___ftmul)
  5334  03D6  3000               	movlw	0x0
  5335  03D7  00AE               	movwf	(?___ftmul+1)
  5336  03D8  3000               	movlw	0x0
  5337  03D9  00AF               	movwf	(?___ftmul+2)
  5338  03DA  2CAE               	goto	l493
  5339                           	
  5340  03DB                     l2304:	
  5341  03DB  2CAE               	goto	l493
  5342                           	
  5343  03DC                     l492:	
  5344                           	line	58
  5345                           	
  5346  03DC                     l2306:	
  5347  03DC  0830               	movf	(___ftmul@f2),w
  5348  03DD  00B3               	movwf	((??___ftmul+0)+0)
  5349  03DE  0831               	movf	(___ftmul@f2+1),w
  5350  03DF  00B4               	movwf	((??___ftmul+0)+0+1)
  5351  03E0  0832               	movf	(___ftmul@f2+2),w
  5352  03E1  00B5               	movwf	((??___ftmul+0)+0+2)
  5353  03E2  1003               	clrc
  5354  03E3  0D34               	rlf	(??___ftmul+0)+1,w
  5355  03E4  0D35               	rlf	(??___ftmul+0)+2,w
  5356  03E5  00B6               	movwf	(??___ftmul+3)+0
  5357  03E6  0836               	movf	(??___ftmul+3)+0,w
  5358  03E7  00BC               	movwf	(___ftmul@sign)
  5359  03E8  08BC               	movf	((___ftmul@sign)),f
  5360  03E9  1D03               	skipz
  5361  03EA  2BEC               	goto	u1681
  5362  03EB  2BED               	goto	u1680
  5363  03EC                     u1681:
  5364  03EC  2BF5               	goto	l2312
  5365  03ED                     u1680:
  5366                           	line	59
  5367                           	
  5368  03ED                     l2308:	
  5369  03ED  3000               	movlw	0x0
  5370  03EE  00AD               	movwf	(?___ftmul)
  5371  03EF  3000               	movlw	0x0
  5372  03F0  00AE               	movwf	(?___ftmul+1)
  5373  03F1  3000               	movlw	0x0
  5374  03F2  00AF               	movwf	(?___ftmul+2)
  5375  03F3  2CAE               	goto	l493
  5376                           	
  5377  03F4                     l2310:	
  5378  03F4  2CAE               	goto	l493
  5379                           	
  5380  03F5                     l494:	
  5381                           	line	60
  5382                           	
  5383  03F5                     l2312:	
  5384  03F5  083C               	movf	(___ftmul@sign),w
  5385  03F6  3E7B               	addlw	07Bh
  5386  03F7  00B3               	movwf	(??___ftmul+0)+0
  5387  03F8  0833               	movf	(??___ftmul+0)+0,w
  5388  03F9  07B7               	addwf	(___ftmul@exp),f
  5389                           	line	61
  5390  03FA  082D               	movf	(___ftmul@f1),w
  5391  03FB  00B3               	movwf	((??___ftmul+0)+0)
  5392  03FC  082E               	movf	(___ftmul@f1+1),w
  5393  03FD  00B4               	movwf	((??___ftmul+0)+0+1)
  5394  03FE  082F               	movf	(___ftmul@f1+2),w
  5395  03FF  00B5               	movwf	((??___ftmul+0)+0+2)
  5396  0400  3010               	movlw	010h
  5397  0401                     u1695:
  5398  0401  1003               	clrc
  5399  0402  0CB5               	rrf	(??___ftmul+0)+2,f
  5400  0403  0CB4               	rrf	(??___ftmul+0)+1,f
  5401  0404  0CB3               	rrf	(??___ftmul+0)+0,f
  5402  0405                     u1690:
  5403  0405  3EFF               	addlw	-1
  5404  0406  1D03               	skipz
  5405  0407  2C01               	goto	u1695
  5406  0408  0833               	movf	0+(??___ftmul+0)+0,w
  5407  0409  00B6               	movwf	(??___ftmul+3)+0
  5408  040A  0836               	movf	(??___ftmul+3)+0,w
  5409  040B  00BC               	movwf	(___ftmul@sign)
  5410                           	line	62
  5411  040C  0830               	movf	(___ftmul@f2),w
  5412  040D  00B3               	movwf	((??___ftmul+0)+0)
  5413  040E  0831               	movf	(___ftmul@f2+1),w
  5414  040F  00B4               	movwf	((??___ftmul+0)+0+1)
  5415  0410  0832               	movf	(___ftmul@f2+2),w
  5416  0411  00B5               	movwf	((??___ftmul+0)+0+2)
  5417  0412  3010               	movlw	010h
  5418  0413                     u1705:
  5419  0413  1003               	clrc
  5420  0414  0CB5               	rrf	(??___ftmul+0)+2,f
  5421  0415  0CB4               	rrf	(??___ftmul+0)+1,f
  5422  0416  0CB3               	rrf	(??___ftmul+0)+0,f
  5423  0417                     u1700:
  5424  0417  3EFF               	addlw	-1
  5425  0418  1D03               	skipz
  5426  0419  2C13               	goto	u1705
  5427  041A  0833               	movf	0+(??___ftmul+0)+0,w
  5428  041B  00B6               	movwf	(??___ftmul+3)+0
  5429  041C  0836               	movf	(??___ftmul+3)+0,w
  5430  041D  06BC               	xorwf	(___ftmul@sign),f
  5431                           	line	63
  5432  041E  3080               	movlw	(080h)
  5433  041F  00B3               	movwf	(??___ftmul+0)+0
  5434  0420  0833               	movf	(??___ftmul+0)+0,w
  5435  0421  05BC               	andwf	(___ftmul@sign),f
  5436                           	line	64
  5437                           	
  5438  0422                     l2314:	
  5439  0422  17AE               	bsf	(___ftmul@f1)+(15/8),(15)&7
  5440                           	line	66
  5441                           	
  5442  0423                     l2316:	
  5443  0423  17B1               	bsf	(___ftmul@f2)+(15/8),(15)&7
  5444                           	line	67
  5445                           	
  5446  0424                     l2318:	
  5447  0424  30FF               	movlw	0FFh
  5448  0425  05B0               	andwf	(___ftmul@f2),f
  5449  0426  30FF               	movlw	0FFh
  5450  0427  05B1               	andwf	(___ftmul@f2+1),f
  5451  0428  3000               	movlw	0
  5452  0429  05B2               	andwf	(___ftmul@f2+2),f
  5453                           	line	68
  5454                           	
  5455  042A                     l2320:	
  5456  042A  3000               	movlw	0
  5457  042B  00B8               	movwf	(___ftmul@f3_as_product)
  5458  042C  3000               	movlw	0
  5459  042D  00B9               	movwf	(___ftmul@f3_as_product+1)
  5460  042E  3000               	movlw	0
  5461  042F  00BA               	movwf	(___ftmul@f3_as_product+2)
  5462                           	line	69
  5463                           	
  5464  0430                     l2322:	
  5465  0430  3007               	movlw	(07h)
  5466  0431  00B3               	movwf	(??___ftmul+0)+0
  5467  0432  0833               	movf	(??___ftmul+0)+0,w
  5468  0433  00BB               	movwf	(___ftmul@cntr)
  5469  0434  2C35               	goto	l2324
  5470                           	line	70
  5471                           	
  5472  0435                     l495:	
  5473                           	line	71
  5474                           	
  5475  0435                     l2324:	
  5476  0435  1C2D               	btfss	(___ftmul@f1),(0)&7
  5477  0436  2C38               	goto	u1711
  5478  0437  2C39               	goto	u1710
  5479  0438                     u1711:
  5480  0438  2C4A               	goto	l2328
  5481  0439                     u1710:
  5482                           	line	72
  5483                           	
  5484  0439                     l2326:	
  5485  0439  0830               	movf	(___ftmul@f2),w
  5486  043A  07B8               	addwf	(___ftmul@f3_as_product),f
  5487  043B  0831               	movf	(___ftmul@f2+1),w
  5488  043C  1103               	clrz
  5489  043D  1803               	skipnc
  5490  043E  0A31               	incf	(___ftmul@f2+1),w
  5491  043F  1903               	skipnz
  5492  0440  2C42               	goto	u1721
  5493  0441  07B9               	addwf	(___ftmul@f3_as_product+1),f
  5494  0442                     u1721:
  5495  0442  0832               	movf	(___ftmul@f2+2),w
  5496  0443  1103               	clrz
  5497  0444  1803               	skipnc
  5498  0445  0A32               	incf	(___ftmul@f2+2),w
  5499  0446  1903               	skipnz
  5500  0447  2C49               	goto	u1722
  5501  0448  07BA               	addwf	(___ftmul@f3_as_product+2),f
  5502  0449                     u1722:
  5503                           
  5504  0449  2C4A               	goto	l2328
  5505                           	
  5506  044A                     l496:	
  5507                           	line	73
  5508                           	
  5509  044A                     l2328:	
  5510  044A  3001               	movlw	01h
  5511  044B                     u1735:
  5512  044B  1003               	clrc
  5513  044C  0CAF               	rrf	(___ftmul@f1+2),f
  5514  044D  0CAE               	rrf	(___ftmul@f1+1),f
  5515  044E  0CAD               	rrf	(___ftmul@f1),f
  5516  044F  3EFF               	addlw	-1
  5517  0450  1D03               	skipz
  5518  0451  2C4B               	goto	u1735
  5519                           
  5520                           	line	74
  5521                           	
  5522  0452                     l2330:	
  5523  0452  3001               	movlw	01h
  5524  0453                     u1745:
  5525  0453  1003               	clrc
  5526  0454  0DB0               	rlf	(___ftmul@f2),f
  5527  0455  0DB1               	rlf	(___ftmul@f2+1),f
  5528  0456  0DB2               	rlf	(___ftmul@f2+2),f
  5529  0457  3EFF               	addlw	-1
  5530  0458  1D03               	skipz
  5531  0459  2C53               	goto	u1745
  5532                           	line	75
  5533                           	
  5534  045A                     l2332:	
  5535  045A  3001               	movlw	low(01h)
  5536  045B  02BB               	subwf	(___ftmul@cntr),f
  5537  045C  1D03               	btfss	status,2
  5538  045D  2C5F               	goto	u1751
  5539  045E  2C60               	goto	u1750
  5540  045F                     u1751:
  5541  045F  2C35               	goto	l2324
  5542  0460                     u1750:
  5543  0460  2C61               	goto	l2334
  5544                           	
  5545  0461                     l497:	
  5546                           	line	76
  5547                           	
  5548  0461                     l2334:	
  5549  0461  3009               	movlw	(09h)
  5550  0462  00B3               	movwf	(??___ftmul+0)+0
  5551  0463  0833               	movf	(??___ftmul+0)+0,w
  5552  0464  00BB               	movwf	(___ftmul@cntr)
  5553  0465  2C66               	goto	l2336
  5554                           	line	77
  5555                           	
  5556  0466                     l498:	
  5557                           	line	78
  5558                           	
  5559  0466                     l2336:	
  5560  0466  1C2D               	btfss	(___ftmul@f1),(0)&7
  5561  0467  2C69               	goto	u1761
  5562  0468  2C6A               	goto	u1760
  5563  0469                     u1761:
  5564  0469  2C7B               	goto	l2340
  5565  046A                     u1760:
  5566                           	line	79
  5567                           	
  5568  046A                     l2338:	
  5569  046A  0830               	movf	(___ftmul@f2),w
  5570  046B  07B8               	addwf	(___ftmul@f3_as_product),f
  5571  046C  0831               	movf	(___ftmul@f2+1),w
  5572  046D  1103               	clrz
  5573  046E  1803               	skipnc
  5574  046F  0A31               	incf	(___ftmul@f2+1),w
  5575  0470  1903               	skipnz
  5576  0471  2C73               	goto	u1771
  5577  0472  07B9               	addwf	(___ftmul@f3_as_product+1),f
  5578  0473                     u1771:
  5579  0473  0832               	movf	(___ftmul@f2+2),w
  5580  0474  1103               	clrz
  5581  0475  1803               	skipnc
  5582  0476  0A32               	incf	(___ftmul@f2+2),w
  5583  0477  1903               	skipnz
  5584  0478  2C7A               	goto	u1772
  5585  0479  07BA               	addwf	(___ftmul@f3_as_product+2),f
  5586  047A                     u1772:
  5587                           
  5588  047A  2C7B               	goto	l2340
  5589                           	
  5590  047B                     l499:	
  5591                           	line	80
  5592                           	
  5593  047B                     l2340:	
  5594  047B  3001               	movlw	01h
  5595  047C                     u1785:
  5596  047C  1003               	clrc
  5597  047D  0CAF               	rrf	(___ftmul@f1+2),f
  5598  047E  0CAE               	rrf	(___ftmul@f1+1),f
  5599  047F  0CAD               	rrf	(___ftmul@f1),f
  5600  0480  3EFF               	addlw	-1
  5601  0481  1D03               	skipz
  5602  0482  2C7C               	goto	u1785
  5603                           
  5604                           	line	81
  5605                           	
  5606  0483                     l2342:	
  5607  0483  3001               	movlw	01h
  5608  0484                     u1795:
  5609  0484  1003               	clrc
  5610  0485  0CBA               	rrf	(___ftmul@f3_as_product+2),f
  5611  0486  0CB9               	rrf	(___ftmul@f3_as_product+1),f
  5612  0487  0CB8               	rrf	(___ftmul@f3_as_product),f
  5613  0488  3EFF               	addlw	-1
  5614  0489  1D03               	skipz
  5615  048A  2C84               	goto	u1795
  5616                           
  5617                           	line	82
  5618                           	
  5619  048B                     l2344:	
  5620  048B  3001               	movlw	low(01h)
  5621  048C  02BB               	subwf	(___ftmul@cntr),f
  5622  048D  1D03               	btfss	status,2
  5623  048E  2C90               	goto	u1801
  5624  048F  2C91               	goto	u1800
  5625  0490                     u1801:
  5626  0490  2C66               	goto	l2336
  5627  0491                     u1800:
  5628  0491  2C92               	goto	l2346
  5629                           	
  5630  0492                     l500:	
  5631                           	line	83
  5632                           	
  5633  0492                     l2346:	
  5634  0492  0838               	movf	(___ftmul@f3_as_product),w
  5635  0493  00F0               	movwf	(?___ftpack)
  5636  0494  0839               	movf	(___ftmul@f3_as_product+1),w
  5637  0495  00F1               	movwf	(?___ftpack+1)
  5638  0496  083A               	movf	(___ftmul@f3_as_product+2),w
  5639  0497  00F2               	movwf	(?___ftpack+2)
  5640  0498  0837               	movf	(___ftmul@exp),w
  5641  0499  00B3               	movwf	(??___ftmul+0)+0
  5642  049A  0833               	movf	(??___ftmul+0)+0,w
  5643  049B  00F3               	movwf	0+(?___ftpack)+03h
  5644  049C  083C               	movf	(___ftmul@sign),w
  5645  049D  00B4               	movwf	(??___ftmul+1)+0
  5646  049E  0834               	movf	(??___ftmul+1)+0,w
  5647  049F  00F4               	movwf	0+(?___ftpack)+04h
  5648  04A0  120A  118A  2148   	fcall	___ftpack
              120A  118A         
  5649  04A5  0870               	movf	(0+(?___ftpack)),w
  5650  04A6  1283               	bcf	status, 5	;RP0=0, select bank0
  5651  04A7  1303               	bcf	status, 6	;RP1=0, select bank0
  5652  04A8  00AD               	movwf	(?___ftmul)
  5653  04A9  0871               	movf	(1+(?___ftpack)),w
  5654  04AA  00AE               	movwf	(?___ftmul+1)
  5655  04AB  0872               	movf	(2+(?___ftpack)),w
  5656  04AC  00AF               	movwf	(?___ftmul+2)
  5657  04AD  2CAE               	goto	l493
  5658                           	
  5659  04AE                     l2348:	
  5660                           	line	84
  5661                           	
  5662  04AE                     l493:	
  5663  04AE  0008               	return
  5664                           	opt stack 0
  5665                           GLOBAL	__end_of___ftmul
  5666  04AF                     	__end_of___ftmul:
  5667                           	signat	___ftmul,8315
  5668                           	global	___fttol
  5669                           
  5670 ;; *************** function ___fttol *****************
  5671 ;; Defined at:
  5672 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.11\sources\fttol.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;  f1              3    8[COMMON] float 
  5675 ;; Auto vars:     Size  Location     Type
  5676 ;;  lval            4    5[BANK0 ] unsigned long 
  5677 ;;  exp1            1    9[BANK0 ] unsigned char 
  5678 ;;  sign1           1    4[BANK0 ] unsigned char 
  5679 ;; Return value:  Size  Location     Type
  5680 ;;                  4    8[COMMON] long 
  5681 ;; Registers used:
  5682 ;;		wreg, status,2, status,0
  5683 ;; Tracked objects:
  5684 ;;		On entry : 0/0
  5685 ;;		On exit  : 0/0
  5686 ;;		Unchanged: 0/0
  5687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5688 ;;      Params:         4       0       0       0       0
  5689 ;;      Locals:         0       6       0       0       0
  5690 ;;      Temps:          0       4       0       0       0
  5691 ;;      Totals:         4      10       0       0       0
  5692 ;;Total ram usage:       14 bytes
  5693 ;; Hardware stack levels used:    1
  5694 ;; This function calls:
  5695 ;;		Nothing
  5696 ;; This function is called by:
  5697 ;;		_main
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           psect	text588,local,class=CODE,delta=2,merge=1
  5701                           global __ptext588
  5702  0253                     __ptext588:	;psect for function ___fttol
  5703                           psect	text588
  5704                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.11\sources\fttol.c"
  5705                           	line	45
  5706                           	global	__size_of___fttol
  5707  00A6                     	__size_of___fttol	equ	__end_of___fttol-___fttol
  5708                           	
  5709  0253                     ___fttol:	
  5710                           	opt	stack 7
  5711                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5712                           	line	49
  5713                           	
  5714  0253                     l2204:	
  5715  0253  0878               	movf	(___fttol@f1),w
  5716  0254  1283               	bcf	status, 5	;RP0=0, select bank0
  5717  0255  1303               	bcf	status, 6	;RP1=0, select bank0
  5718  0256  00A0               	movwf	((??___fttol+0)+0)
  5719  0257  0879               	movf	(___fttol@f1+1),w
  5720  0258  00A1               	movwf	((??___fttol+0)+0+1)
  5721  0259  087A               	movf	(___fttol@f1+2),w
  5722  025A  00A2               	movwf	((??___fttol+0)+0+2)
  5723  025B  1003               	clrc
  5724  025C  0D21               	rlf	(??___fttol+0)+1,w
  5725  025D  0D22               	rlf	(??___fttol+0)+2,w
  5726  025E  00A3               	movwf	(??___fttol+3)+0
  5727  025F  0823               	movf	(??___fttol+3)+0,w
  5728  0260  00A9               	movwf	(___fttol@exp1)
  5729  0261  08A9               	movf	((___fttol@exp1)),f
  5730  0262  1D03               	skipz
  5731  0263  2A65               	goto	u1541
  5732  0264  2A66               	goto	u1540
  5733  0265                     u1541:
  5734  0265  2A70               	goto	l2210
  5735  0266                     u1540:
  5736                           	line	50
  5737                           	
  5738  0266                     l2206:	
  5739  0266  3000               	movlw	0
  5740  0267  00FB               	movwf	(?___fttol+3)
  5741  0268  3000               	movlw	0
  5742  0269  00FA               	movwf	(?___fttol+2)
  5743  026A  3000               	movlw	0
  5744  026B  00F9               	movwf	(?___fttol+1)
  5745  026C  3000               	movlw	0
  5746  026D  00F8               	movwf	(?___fttol)
  5747                           
  5748  026E  2AF8               	goto	l504
  5749                           	
  5750  026F                     l2208:	
  5751  026F  2AF8               	goto	l504
  5752                           	
  5753  0270                     l503:	
  5754                           	line	51
  5755                           	
  5756  0270                     l2210:	
  5757  0270  0878               	movf	(___fttol@f1),w
  5758  0271  00A0               	movwf	((??___fttol+0)+0)
  5759  0272  0879               	movf	(___fttol@f1+1),w
  5760  0273  00A1               	movwf	((??___fttol+0)+0+1)
  5761  0274  087A               	movf	(___fttol@f1+2),w
  5762  0275  00A2               	movwf	((??___fttol+0)+0+2)
  5763  0276  3017               	movlw	017h
  5764  0277                     u1555:
  5765  0277  1003               	clrc
  5766  0278  0CA2               	rrf	(??___fttol+0)+2,f
  5767  0279  0CA1               	rrf	(??___fttol+0)+1,f
  5768  027A  0CA0               	rrf	(??___fttol+0)+0,f
  5769  027B                     u1550:
  5770  027B  3EFF               	addlw	-1
  5771  027C  1D03               	skipz
  5772  027D  2A77               	goto	u1555
  5773  027E  0820               	movf	0+(??___fttol+0)+0,w
  5774  027F  00A3               	movwf	(??___fttol+3)+0
  5775  0280  0823               	movf	(??___fttol+3)+0,w
  5776  0281  00A4               	movwf	(___fttol@sign1)
  5777                           	line	52
  5778                           	
  5779  0282                     l2212:	
  5780  0282  17F9               	bsf	(___fttol@f1)+(15/8),(15)&7
  5781                           	line	53
  5782                           	
  5783  0283                     l2214:	
  5784  0283  30FF               	movlw	0FFh
  5785  0284  05F8               	andwf	(___fttol@f1),f
  5786  0285  30FF               	movlw	0FFh
  5787  0286  05F9               	andwf	(___fttol@f1+1),f
  5788  0287  3000               	movlw	0
  5789  0288  05FA               	andwf	(___fttol@f1+2),f
  5790                           	line	54
  5791                           	
  5792  0289                     l2216:	
  5793  0289  0878               	movf	(___fttol@f1),w
  5794  028A  00A5               	movwf	(___fttol@lval)
  5795  028B  0879               	movf	(___fttol@f1+1),w
  5796  028C  00A6               	movwf	((___fttol@lval))+1
  5797  028D  087A               	movf	(___fttol@f1+2),w
  5798  028E  00A7               	movwf	((___fttol@lval))+2
  5799  028F  01A8               	clrf	((___fttol@lval))+3
  5800                           	line	55
  5801                           	
  5802  0290                     l2218:	
  5803  0290  308E               	movlw	low(08Eh)
  5804  0291  02A9               	subwf	(___fttol@exp1),f
  5805                           	line	56
  5806                           	
  5807  0292                     l2220:	
  5808  0292  1FA9               	btfss	(___fttol@exp1),7
  5809  0293  2A95               	goto	u1561
  5810  0294  2A96               	goto	u1560
  5811  0295                     u1561:
  5812  0295  2ABB               	goto	l2230
  5813  0296                     u1560:
  5814                           	line	57
  5815                           	
  5816  0296                     l2222:	
  5817  0296  0829               	movf	(___fttol@exp1),w
  5818  0297  3A80               	xorlw	80h
  5819  0298  3E8F               	addlw	-((-15)^80h)
  5820  0299  1803               	skipnc
  5821  029A  2A9C               	goto	u1571
  5822  029B  2A9D               	goto	u1570
  5823  029C                     u1571:
  5824  029C  2AA8               	goto	l2228
  5825  029D                     u1570:
  5826                           	line	58
  5827                           	
  5828  029D                     l2224:	
  5829  029D  3000               	movlw	0
  5830  029E  00FB               	movwf	(?___fttol+3)
  5831  029F  3000               	movlw	0
  5832  02A0  00FA               	movwf	(?___fttol+2)
  5833  02A1  3000               	movlw	0
  5834  02A2  00F9               	movwf	(?___fttol+1)
  5835  02A3  3000               	movlw	0
  5836  02A4  00F8               	movwf	(?___fttol)
  5837                           
  5838  02A5  2AF8               	goto	l504
  5839                           	
  5840  02A6                     l2226:	
  5841  02A6  2AF8               	goto	l504
  5842                           	
  5843  02A7                     l506:	
  5844  02A7  2AA8               	goto	l2228
  5845                           	line	59
  5846                           	
  5847  02A8                     l507:	
  5848                           	line	60
  5849                           	
  5850  02A8                     l2228:	
  5851  02A8  3001               	movlw	01h
  5852  02A9                     u1585:
  5853  02A9  1003               	clrc
  5854  02AA  0CA8               	rrf	(___fttol@lval+3),f
  5855  02AB  0CA7               	rrf	(___fttol@lval+2),f
  5856  02AC  0CA6               	rrf	(___fttol@lval+1),f
  5857  02AD  0CA5               	rrf	(___fttol@lval),f
  5858  02AE  3EFF               	addlw	-1
  5859  02AF  1D03               	skipz
  5860  02B0  2AA9               	goto	u1585
  5861                           
  5862                           	line	61
  5863  02B1  3001               	movlw	(01h)
  5864  02B2  00A0               	movwf	(??___fttol+0)+0
  5865  02B3  0820               	movf	(??___fttol+0)+0,w
  5866  02B4  07A9               	addwf	(___fttol@exp1),f
  5867  02B5  1D03               	btfss	status,2
  5868  02B6  2AB8               	goto	u1591
  5869  02B7  2AB9               	goto	u1590
  5870  02B8                     u1591:
  5871  02B8  2AA8               	goto	l2228
  5872  02B9                     u1590:
  5873  02B9  2ADF               	goto	l2240
  5874                           	
  5875  02BA                     l508:	
  5876                           	line	62
  5877  02BA  2ADF               	goto	l2240
  5878                           	
  5879  02BB                     l505:	
  5880                           	line	63
  5881                           	
  5882  02BB                     l2230:	
  5883  02BB  3018               	movlw	(018h)
  5884  02BC  0229               	subwf	(___fttol@exp1),w
  5885  02BD  1C03               	skipc
  5886  02BE  2AC0               	goto	u1601
  5887  02BF  2AC1               	goto	u1600
  5888  02C0                     u1601:
  5889  02C0  2AD8               	goto	l2238
  5890  02C1                     u1600:
  5891                           	line	64
  5892                           	
  5893  02C1                     l2232:	
  5894  02C1  3000               	movlw	0
  5895  02C2  00FB               	movwf	(?___fttol+3)
  5896  02C3  3000               	movlw	0
  5897  02C4  00FA               	movwf	(?___fttol+2)
  5898  02C5  3000               	movlw	0
  5899  02C6  00F9               	movwf	(?___fttol+1)
  5900  02C7  3000               	movlw	0
  5901  02C8  00F8               	movwf	(?___fttol)
  5902                           
  5903  02C9  2AF8               	goto	l504
  5904                           	
  5905  02CA                     l2234:	
  5906  02CA  2AF8               	goto	l504
  5907                           	
  5908  02CB                     l510:	
  5909                           	line	65
  5910  02CB  2AD8               	goto	l2238
  5911                           	
  5912  02CC                     l512:	
  5913                           	line	66
  5914                           	
  5915  02CC                     l2236:	
  5916  02CC  3001               	movlw	01h
  5917  02CD  00A0               	movwf	(??___fttol+0)+0
  5918  02CE                     u1615:
  5919  02CE  1003               	clrc
  5920  02CF  0DA5               	rlf	(___fttol@lval),f
  5921  02D0  0DA6               	rlf	(___fttol@lval+1),f
  5922  02D1  0DA7               	rlf	(___fttol@lval+2),f
  5923  02D2  0DA8               	rlf	(___fttol@lval+3),f
  5924  02D3  0BA0               	decfsz	(??___fttol+0)+0
  5925  02D4  2ACE               	goto	u1615
  5926                           	line	67
  5927  02D5  3001               	movlw	low(01h)
  5928  02D6  02A9               	subwf	(___fttol@exp1),f
  5929  02D7  2AD8               	goto	l2238
  5930                           	line	68
  5931                           	
  5932  02D8                     l511:	
  5933                           	line	65
  5934                           	
  5935  02D8                     l2238:	
  5936  02D8  08A9               	movf	(___fttol@exp1),f
  5937  02D9  1D03               	skipz
  5938  02DA  2ADC               	goto	u1621
  5939  02DB  2ADD               	goto	u1620
  5940  02DC                     u1621:
  5941  02DC  2ACC               	goto	l2236
  5942  02DD                     u1620:
  5943  02DD  2ADF               	goto	l2240
  5944                           	
  5945  02DE                     l513:	
  5946  02DE  2ADF               	goto	l2240
  5947                           	line	69
  5948                           	
  5949  02DF                     l509:	
  5950                           	line	70
  5951                           	
  5952  02DF                     l2240:	
  5953  02DF  0824               	movf	(___fttol@sign1),w
  5954  02E0  1D03               	skipz
  5955  02E1  2AE3               	goto	u1630
  5956  02E2  2AEF               	goto	l2244
  5957  02E3                     u1630:
  5958                           	line	71
  5959                           	
  5960  02E3                     l2242:	
  5961  02E3  09A5               	comf	(___fttol@lval),f
  5962  02E4  09A6               	comf	(___fttol@lval+1),f
  5963  02E5  09A7               	comf	(___fttol@lval+2),f
  5964  02E6  09A8               	comf	(___fttol@lval+3),f
  5965  02E7  0AA5               	incf	(___fttol@lval),f
  5966  02E8  1903               	skipnz
  5967  02E9  0AA6               	incf	(___fttol@lval+1),f
  5968  02EA  1903               	skipnz
  5969  02EB  0AA7               	incf	(___fttol@lval+2),f
  5970  02EC  1903               	skipnz
  5971  02ED  0AA8               	incf	(___fttol@lval+3),f
  5972  02EE  2AEF               	goto	l2244
  5973                           	
  5974  02EF                     l514:	
  5975                           	line	72
  5976                           	
  5977  02EF                     l2244:	
  5978  02EF  0828               	movf	(___fttol@lval+3),w
  5979  02F0  00FB               	movwf	(?___fttol+3)
  5980  02F1  0827               	movf	(___fttol@lval+2),w
  5981  02F2  00FA               	movwf	(?___fttol+2)
  5982  02F3  0826               	movf	(___fttol@lval+1),w
  5983  02F4  00F9               	movwf	(?___fttol+1)
  5984  02F5  0825               	movf	(___fttol@lval),w
  5985  02F6  00F8               	movwf	(?___fttol)
  5986                           
  5987  02F7  2AF8               	goto	l504
  5988                           	
  5989  02F8                     l2246:	
  5990                           	line	73
  5991                           	
  5992  02F8                     l504:	
  5993  02F8  0008               	return
  5994                           	opt stack 0
  5995                           GLOBAL	__end_of___fttol
  5996  02F9                     	__end_of___fttol:
  5997                           	signat	___fttol,4220
  5998                           	global	___lwtoft
  5999                           
  6000 ;; *************** function ___lwtoft *****************
  6001 ;; Defined at:
  6002 ;;		line 29 in file "C:\Program Files (x86)\Microchip\xc8\v1.11\sources\lwtoft.c"
  6003 ;; Parameters:    Size  Location     Type
  6004 ;;  c               2   10[BANK0 ] unsigned int 
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;		None
  6007 ;; Return value:  Size  Location     Type
  6008 ;;                  3   10[BANK0 ] float 
  6009 ;; Registers used:
  6010 ;;		wreg, status,2, status,0, pclath, cstack
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6016 ;;      Params:         0       3       0       0       0
  6017 ;;      Locals:         0       0       0       0       0
  6018 ;;      Temps:          1       0       0       0       0
  6019 ;;      Totals:         1       3       0       0       0
  6020 ;;Total ram usage:        4 bytes
  6021 ;; Hardware stack levels used:    1
  6022 ;; Hardware stack levels required when called:    1
  6023 ;; This function calls:
  6024 ;;		___ftpack
  6025 ;; This function is called by:
  6026 ;;		_main
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           psect	text589,local,class=CODE,delta=2,merge=1
  6030                           global __ptext589
  6031  0E48                     __ptext589:	;psect for function ___lwtoft
  6032                           psect	text589
  6033                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.11\sources\lwtoft.c"
  6034                           	line	29
  6035                           	global	__size_of___lwtoft
  6036  001B                     	__size_of___lwtoft	equ	__end_of___lwtoft-___lwtoft
  6037                           	
  6038  0E48                     ___lwtoft:	
  6039                           	opt	stack 6
  6040                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  6041                           	line	30
  6042                           	
  6043  0E48                     l2248:	
  6044  0E48  1283               	bcf	status, 5	;RP0=0, select bank0
  6045  0E49  1303               	bcf	status, 6	;RP1=0, select bank0
  6046  0E4A  082A               	movf	(___lwtoft@c),w
  6047  0E4B  00F0               	movwf	(?___ftpack)
  6048  0E4C  082B               	movf	(___lwtoft@c+1),w
  6049  0E4D  00F1               	movwf	(?___ftpack+1)
  6050  0E4E  01F2               	clrf	(?___ftpack+2)
  6051  0E4F  308E               	movlw	(08Eh)
  6052  0E50  00FC               	movwf	(??___lwtoft+0)+0
  6053  0E51  087C               	movf	(??___lwtoft+0)+0,w
  6054  0E52  00F3               	movwf	0+(?___ftpack)+03h
  6055  0E53  01F4               	clrf	0+(?___ftpack)+04h
  6056  0E54  120A  118A  2148   	fcall	___ftpack
              120A  158A         
  6057  0E59  0870               	movf	(0+(?___ftpack)),w
  6058  0E5A  1283               	bcf	status, 5	;RP0=0, select bank0
  6059  0E5B  1303               	bcf	status, 6	;RP1=0, select bank0
  6060  0E5C  00AA               	movwf	(?___lwtoft)
  6061  0E5D  0871               	movf	(1+(?___ftpack)),w
  6062  0E5E  00AB               	movwf	(?___lwtoft+1)
  6063  0E5F  0872               	movf	(2+(?___ftpack)),w
  6064  0E60  00AC               	movwf	(?___lwtoft+2)
  6065  0E61  2E62               	goto	l617
  6066                           	
  6067  0E62                     l2250:	
  6068                           	line	31
  6069                           	
  6070  0E62                     l617:	
  6071  0E62  0008               	return
  6072                           	opt stack 0
  6073                           GLOBAL	__end_of___lwtoft
  6074  0E63                     	__end_of___lwtoft:
  6075                           	signat	___lwtoft,4219
  6076                           	global	___ftpack
  6077                           
  6078 ;; *************** function ___ftpack *****************
  6079 ;; Defined at:
  6080 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.11\sources\float.c"
  6081 ;; Parameters:    Size  Location     Type
  6082 ;;  arg             3    0[COMMON] unsigned um
  6083 ;;  exp             1    3[COMMON] unsigned char 
  6084 ;;  sign            1    4[COMMON] unsigned char 
  6085 ;; Auto vars:     Size  Location     Type
  6086 ;;		None
  6087 ;; Return value:  Size  Location     Type
  6088 ;;                  3    0[COMMON] float 
  6089 ;; Registers used:
  6090 ;;		wreg, status,2, status,0
  6091 ;; Tracked objects:
  6092 ;;		On entry : 0/0
  6093 ;;		On exit  : 0/0
  6094 ;;		Unchanged: 0/0
  6095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6096 ;;      Params:         5       0       0       0       0
  6097 ;;      Locals:         0       0       0       0       0
  6098 ;;      Temps:          3       0       0       0       0
  6099 ;;      Totals:         8       0       0       0       0
  6100 ;;Total ram usage:        8 bytes
  6101 ;; Hardware stack levels used:    1
  6102 ;; This function calls:
  6103 ;;		Nothing
  6104 ;; This function is called by:
  6105 ;;		___ftdiv
  6106 ;;		___ftmul
  6107 ;;		___lwtoft
  6108 ;; This function uses a non-reentrant model
  6109 ;;
  6110                           psect	text590,local,class=CODE,delta=2,merge=1
  6111                           global __ptext590
  6112  0148                     __ptext590:	;psect for function ___ftpack
  6113                           psect	text590
  6114                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.11\sources\float.c"
  6115                           	line	63
  6116                           	global	__size_of___ftpack
  6117  007B                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  6118                           	
  6119  0148                     ___ftpack:	
  6120                           	opt	stack 6
  6121                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6122                           	line	64
  6123                           	
  6124  0148                     l2036:	
  6125  0148  0873               	movf	(___ftpack@exp),w
  6126  0149  1D03               	skipz
  6127  014A  294C               	goto	u1250
  6128  014B  2954               	goto	l2040
  6129  014C                     u1250:
  6130                           	
  6131  014C                     l2038:	
  6132  014C  0872               	movf	(___ftpack@arg+2),w
  6133  014D  0471               	iorwf	(___ftpack@arg+1),w
  6134  014E  0470               	iorwf	(___ftpack@arg),w
  6135  014F  1D03               	skipz
  6136  0150  2952               	goto	u1261
  6137  0151  2953               	goto	u1260
  6138  0152                     u1261:
  6139  0152  296A               	goto	l2046
  6140  0153                     u1260:
  6141  0153  2954               	goto	l2040
  6142                           	
  6143  0154                     l728:	
  6144                           	line	65
  6145                           	
  6146  0154                     l2040:	
  6147  0154  3000               	movlw	0x0
  6148  0155  00F0               	movwf	(?___ftpack)
  6149  0156  3000               	movlw	0x0
  6150  0157  00F1               	movwf	(?___ftpack+1)
  6151  0158  3000               	movlw	0x0
  6152  0159  00F2               	movwf	(?___ftpack+2)
  6153  015A  29C2               	goto	l729
  6154                           	
  6155  015B                     l2042:	
  6156  015B  29C2               	goto	l729
  6157                           	
  6158  015C                     l726:	
  6159                           	line	66
  6160  015C  296A               	goto	l2046
  6161                           	
  6162  015D                     l731:	
  6163                           	line	67
  6164                           	
  6165  015D                     l2044:	
  6166  015D  3001               	movlw	(01h)
  6167  015E  00F5               	movwf	(??___ftpack+0)+0
  6168  015F  0875               	movf	(??___ftpack+0)+0,w
  6169  0160  07F3               	addwf	(___ftpack@exp),f
  6170                           	line	68
  6171  0161  3001               	movlw	01h
  6172  0162                     u1275:
  6173  0162  1003               	clrc
  6174  0163  0CF2               	rrf	(___ftpack@arg+2),f
  6175  0164  0CF1               	rrf	(___ftpack@arg+1),f
  6176  0165  0CF0               	rrf	(___ftpack@arg),f
  6177  0166  3EFF               	addlw	-1
  6178  0167  1D03               	skipz
  6179  0168  2962               	goto	u1275
  6180                           
  6181  0169  296A               	goto	l2046
  6182                           	line	69
  6183                           	
  6184  016A                     l730:	
  6185                           	line	66
  6186                           	
  6187  016A                     l2046:	
  6188  016A  30FE               	movlw	low highword(0FE0000h)
  6189  016B  0572               	andwf	(___ftpack@arg+2),w
  6190  016C  1D03               	btfss	status,2
  6191  016D  296F               	goto	u1281
  6192  016E  2970               	goto	u1280
  6193  016F                     u1281:
  6194  016F  295D               	goto	l2044
  6195  0170                     u1280:
  6196  0170  2988               	goto	l733
  6197                           	
  6198  0171                     l732:	
  6199                           	line	70
  6200  0171  2988               	goto	l733
  6201                           	
  6202  0172                     l734:	
  6203                           	line	71
  6204                           	
  6205  0172                     l2048:	
  6206  0172  3001               	movlw	(01h)
  6207  0173  00F5               	movwf	(??___ftpack+0)+0
  6208  0174  0875               	movf	(??___ftpack+0)+0,w
  6209  0175  07F3               	addwf	(___ftpack@exp),f
  6210                           	line	72
  6211                           	
  6212  0176                     l2050:	
  6213  0176  3001               	movlw	01h
  6214  0177  07F0               	addwf	(___ftpack@arg),f
  6215  0178  3000               	movlw	0
  6216  0179  1803               	skipnc
  6217  017A  3001               movlw 1
  6218  017B  07F1               	addwf	(___ftpack@arg+1),f
  6219  017C  3000               	movlw	0
  6220  017D  1803               	skipnc
  6221  017E  3001               movlw 1
  6222  017F  07F2               	addwf	(___ftpack@arg+2),f
  6223                           	line	73
  6224                           	
  6225  0180                     l2052:	
  6226  0180  3001               	movlw	01h
  6227  0181                     u1295:
  6228  0181  1003               	clrc
  6229  0182  0CF2               	rrf	(___ftpack@arg+2),f
  6230  0183  0CF1               	rrf	(___ftpack@arg+1),f
  6231  0184  0CF0               	rrf	(___ftpack@arg),f
  6232  0185  3EFF               	addlw	-1
  6233  0186  1D03               	skipz
  6234  0187  2981               	goto	u1295
  6235                           
  6236                           	line	74
  6237                           	
  6238  0188                     l733:	
  6239                           	line	70
  6240  0188  30FF               	movlw	low highword(0FF0000h)
  6241  0189  0572               	andwf	(___ftpack@arg+2),w
  6242  018A  1D03               	btfss	status,2
  6243  018B  298D               	goto	u1301
  6244  018C  298E               	goto	u1300
  6245  018D                     u1301:
  6246  018D  2972               	goto	l2048
  6247  018E                     u1300:
  6248  018E  299B               	goto	l2056
  6249                           	
  6250  018F                     l735:	
  6251                           	line	75
  6252  018F  299B               	goto	l2056
  6253                           	
  6254  0190                     l737:	
  6255                           	line	76
  6256                           	
  6257  0190                     l2054:	
  6258  0190  3001               	movlw	low(01h)
  6259  0191  02F3               	subwf	(___ftpack@exp),f
  6260                           	line	77
  6261  0192  3001               	movlw	01h
  6262  0193                     u1315:
  6263  0193  1003               	clrc
  6264  0194  0DF0               	rlf	(___ftpack@arg),f
  6265  0195  0DF1               	rlf	(___ftpack@arg+1),f
  6266  0196  0DF2               	rlf	(___ftpack@arg+2),f
  6267  0197  3EFF               	addlw	-1
  6268  0198  1D03               	skipz
  6269  0199  2993               	goto	u1315
  6270  019A  299B               	goto	l2056
  6271                           	line	78
  6272                           	
  6273  019B                     l736:	
  6274                           	line	75
  6275                           	
  6276  019B                     l2056:	
  6277  019B  1FF1               	btfss	(___ftpack@arg+1),(15)&7
  6278  019C  299E               	goto	u1321
  6279  019D  299F               	goto	u1320
  6280  019E                     u1321:
  6281  019E  2990               	goto	l2054
  6282  019F                     u1320:
  6283                           	
  6284  019F                     l738:	
  6285                           	line	79
  6286  019F  1873               	btfsc	(___ftpack@exp),(0)&7
  6287  01A0  29A2               	goto	u1331
  6288  01A1  29A3               	goto	u1330
  6289  01A2                     u1331:
  6290  01A2  29A9               	goto	l739
  6291  01A3                     u1330:
  6292                           	line	80
  6293                           	
  6294  01A3                     l2058:	
  6295  01A3  30FF               	movlw	0FFh
  6296  01A4  05F0               	andwf	(___ftpack@arg),f
  6297  01A5  307F               	movlw	07Fh
  6298  01A6  05F1               	andwf	(___ftpack@arg+1),f
  6299  01A7  30FF               	movlw	0FFh
  6300  01A8  05F2               	andwf	(___ftpack@arg+2),f
  6301                           	
  6302  01A9                     l739:	
  6303                           	line	81
  6304  01A9  1003               	clrc
  6305  01AA  0CF3               	rrf	(___ftpack@exp),f
  6306                           
  6307                           	line	82
  6308                           	
  6309  01AB                     l2060:	
  6310  01AB  0873               	movf	(___ftpack@exp),w
  6311  01AC  00F5               	movwf	((??___ftpack+0)+0)
  6312  01AD  01F6               	clrf	((??___ftpack+0)+0+1)
  6313  01AE  01F7               	clrf	((??___ftpack+0)+0+2)
  6314  01AF  3010               	movlw	010h
  6315  01B0                     u1345:
  6316  01B0  1003               	clrc
  6317  01B1  0DF5               	rlf	(??___ftpack+0)+0,f
  6318  01B2  0DF6               	rlf	(??___ftpack+0)+1,f
  6319  01B3  0DF7               	rlf	(??___ftpack+0)+2,f
  6320  01B4                     u1340:
  6321  01B4  3EFF               	addlw	-1
  6322  01B5  1D03               	skipz
  6323  01B6  29B0               	goto	u1345
  6324  01B7  0875               	movf	0+(??___ftpack+0)+0,w
  6325  01B8  04F0               	iorwf	(___ftpack@arg),f
  6326  01B9  0876               	movf	1+(??___ftpack+0)+0,w
  6327  01BA  04F1               	iorwf	(___ftpack@arg+1),f
  6328  01BB  0877               	movf	2+(??___ftpack+0)+0,w
  6329  01BC  04F2               	iorwf	(___ftpack@arg+2),f
  6330                           	line	83
  6331                           	
  6332  01BD                     l2062:	
  6333  01BD  0874               	movf	(___ftpack@sign),w
  6334  01BE  1D03               	skipz
  6335  01BF  29C1               	goto	u1350
  6336  01C0  29C2               	goto	l740
  6337  01C1                     u1350:
  6338                           	line	84
  6339                           	
  6340  01C1                     l2064:	
  6341  01C1  17F2               	bsf	(___ftpack@arg)+(23/8),(23)&7
  6342                           	
  6343  01C2                     l740:	
  6344                           	line	85
  6345                           	line	86
  6346                           	
  6347  01C2                     l729:	
  6348  01C2  0008               	return
  6349                           	opt stack 0
  6350                           GLOBAL	__end_of___ftpack
  6351  01C3                     	__end_of___ftpack:
  6352                           	signat	___ftpack,12411
  6353                           psect	text591,local,class=CODE,delta=2,merge=1
  6354                           global __ptext591
  6355  0000                     __ptext591:	;psect for function ___ftpack
  6356                           	global	btemp
  6357  007E                     	btemp set 07Eh
  6358                           
  6359                           	DABS	1,126,2	;btemp
  6360                           	global	wtemp0
  6361  007E                     	wtemp0 set btemp


Data Sizes:
    Strings     61
    Constant    0
    Data        4
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     65      70
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ?___ftpack	float  size(1) Largest target is 0

    ?___lwdiv	unsigned int  size(1) Largest target is 0

    ?___lwmod	unsigned int  size(1) Largest target is 0

    ?___ftmul	float  size(1) Largest target is 0

    ?___fttol	long  size(1) Largest target is 0

    ?___lwtoft	float  size(1) Largest target is 0

    ?___ftdiv	float  size(1) Largest target is 0

    ?_GetPos	unsigned short  size(1) Largest target is 0

    ?_SetLED	unsigned short  size(1) Largest target is 0

    ?_SetPos	unsigned short  size(1) Largest target is 0

    ?_SetTorqueOnOff	unsigned short  size(1) Largest target is 0

    ?_send_packet	unsigned short  size(1) Largest target is 0

    send_string@s	PTR const unsigned char  size(2) Largest target is 18
		 -> lcd_num@num(BANK0[16]), STR_4(CODE[16]), STR_3(CODE[17]), STR_2(CODE[18]), 
		 -> STR_1(CODE[10]), 

    GetPos@data	PTR unsigned char  size(1) Largest target is 10
		 -> main@DATA(BANK0[10]), 

    send_packet@data	PTR unsigned char  size(1) Largest target is 10
		 -> main@DATA(BANK0[10]), SetAction@TxBuff(COMMON[1]), FactoryReset@TxBuff(COMMON[1]), SetBaudRate@TxBuff(COMMON[2]), 
		 -> SetMarginSlopePunch@TxBuff(COMMON[5]), SetAlarmShutDown@TxBuff(COMMON[2]), SetAlarmLED@TxBuff(COMMON[2]), SetLED@TxBuff(BANK0[2]), 
		 -> SetID@TxBuff(COMMON[2]), SetVoltageLimit@TxBuff(COMMON[3]), SetTemperatureLimit@TxBuff(COMMON[2]), SetTorqueLimit@TxBuff(COMMON[3]), 
		 -> SetAngleLimit@TxBuff(COMMON[5]), SetSpeed@TxBuff(COMMON[3]), SetTorqueOnOff@TxBuff(BANK0[2]), SetPos@TxBuff(BANK0[3]), 


Critical Paths under _main in COMMON

    _main->_SetPos
    _main->_lcd_num
    _SetTorqueOnOff->_send_packet
    _SetPos->_send_packet
    _SetLED->_send_packet
    _GetPos->_send_packet
    _send_packet->_UART_REC
    _lcdinit->_send_config
    _lcd_clr->_send_config
    _lcd_goto->_send_config
    _lcd_num->_send_string
    _send_string->_send_char
    _send_config->_delay
    _send_char->_delay
    ___ftdiv->___lwtoft
    ___ftmul->___lwtoft
    ___fttol->___ftpack
    ___lwtoft->___fttol

Critical Paths under _main in BANK0

    _main->_SetPos
    _SetTorqueOnOff->_send_packet
    _SetPos->_send_packet
    _SetLED->_send_packet
    _GetPos->_send_packet
    ___ftdiv->___ftmul
    ___ftmul->___lwtoft
    ___lwtoft->___fttol

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0    9372
                                             46 BANK0     19    19      0
                             _initIO
                            _lcdinit
                          _UART_INIT
                            _lcd_clr
                           _lcd_goto
                        _send_string
                             _SetLED
                             _SetPos
                     _SetTorqueOnOff
                             _GetPos
                           ___lwtoft
                            ___fttol
                            ___ftmul
                            ___ftdiv
                            _lcd_num
 ---------------------------------------------------------------------------------
 (1) _SetTorqueOnOff                                       8     6      2    1546
                                             11 COMMON     2     0      2
                                             39 BANK0      6     6      0
                        _send_packet
 ---------------------------------------------------------------------------------
 (1) _SetPos                                              10     7      3    1592
                                             11 COMMON     3     0      3
                                             39 BANK0      7     7      0
                        _send_packet
 ---------------------------------------------------------------------------------
 (1) _SetLED                                               8     6      2    1546
                                             11 COMMON     2     0      2
                                             39 BANK0      6     6      0
                        _send_packet
 ---------------------------------------------------------------------------------
 (1) _GetPos                                               5     4      1    1514
                                             11 COMMON     2     1      1
                                             39 BANK0      3     3      0
                        _send_packet
 ---------------------------------------------------------------------------------
 (2) _send_packet                                         44    41      3    1426
                                              6 COMMON     5     2      3
                                              0 BANK0     39    39      0
                          _UART_SEND
                           _UART_REC
 ---------------------------------------------------------------------------------
 (3) _UART_SEND                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _UART_REC                                             6     6      0      48
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 (1) _initIO                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcdinit                                              0     0      0     179
                        _send_config
                            _lcd_clr
 ---------------------------------------------------------------------------------
 (1) _UART_INIT                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_clr                                              0     0      0     112
                        _send_config
                              _delay
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             2     2      0     156
                                              9 COMMON     2     2      0
                        _send_config
 ---------------------------------------------------------------------------------
 (1) _lcd_num                                             26    23      3     914
                                             11 COMMON     3     0      3
                                              0 BANK0     23    23      0
                            ___lwmod
                            ___lwdiv
                        _send_string
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_string                                          2     0      2     134
                                              9 COMMON     2     0      2
                          _send_char
 ---------------------------------------------------------------------------------
 (2) _send_config                                          1     1      0      67
                                              8 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _send_char                                            1     1      0      67
                                              8 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                8     4      4      45
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     162
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     159
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6     489
                                             29 BANK0     16    10      6
                           ___ftpack
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6     535
                                             13 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     252
                                              8 COMMON     4     0      4
                                              0 BANK0     10    10      0
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3     231
                                             12 COMMON     1     1      0
                                             10 BANK0      3     0      3
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5     209
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initIO
   _lcdinit
     _send_config
       _delay
     _lcd_clr
       _send_config
         _delay
       _delay
   _UART_INIT
   _lcd_clr
     _send_config
       _delay
     _delay
   _lcd_goto
     _send_config
       _delay
   _send_string
     _send_char
       _delay
   _SetLED
     _send_packet
       _UART_SEND
       _UART_REC
   _SetPos
     _send_packet
       _UART_SEND
       _UART_REC
   _SetTorqueOnOff
     _send_packet
       _UART_SEND
       _UART_REC
   _GetPos
     _send_packet
       _UART_SEND
       _UART_REC
   ___lwtoft
     ___ftpack
     ___fttol (ARG)
       ___ftpack (ARG)
   ___fttol
     ___ftpack (ARG)
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
       ___fttol (ARG)
         ___ftpack (ARG)
     ___fttol (ARG)
       ___ftpack (ARG)
   ___ftdiv
     ___ftpack
     ___ftmul (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
         ___fttol (ARG)
           ___ftpack (ARG)
       ___fttol (ARG)
         ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
       ___fttol (ARG)
         ___ftpack (ARG)
     ___fttol (ARG)
       ___ftpack (ARG)
   _lcd_num
     ___lwmod
     ___lwdiv
     _send_string
       _send_char
         _delay
     _send_char
       _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     41      46       5       87.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      58      12        0.0%
ABS                  0      0      54       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       4       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.11 build 48931 
Symbol Table                                                                                   Mon Dec 03 16:04:26 2012

                      pc 0002                       l95 04FA                       l96 04DB  
                     l97 0508                       l98 0530                       l99 051B  
                     fsr 0004                      l100 053E                      l101 0631  
                    l110 05A5                      l103 054D                      l120 05FF  
                    l112 05A3                      l104 0562                      l121 062F  
                    l113 05AD                      l105 0567                      l122 062E  
                    l114 05B9                      l106 0587                      l123 061F  
                    l115 05D0                      l107 056D                      l300 012A  
                    l124 0608                      l116 05BF                      l108 0581  
                    l140 0FA0                      l301 0143                      l125 062D  
                    l117 05DE                      l109 0595                      l302 0139  
                    l126 063A                      l118 05E8                      l230 07FB  
                    l303 0134                      l119 0630                      l231 074E  
                    l223 069B                      l400 00E2                      l240 0E47  
                    l304 013D                      l232 07F8                      l224 072D  
                    l401 00B4                      l305 0147                      l233 07FA  
                    l225 06B1                      l410 0095                      l402 00A8  
                    l234 07F9                      l226 06F9                      l411 006F  
                    l403 00B9                      l251 0F29                      l243 0F77  
                    l235 07FC                      l227 072D                      l500 0492  
                    l412 0063                      l404 00BA                      l236 07FD  
                    l228 072B                      l413 0074                      l405 00D3  
                    l173 0EBB                      l149 0F4E                      l237 07FD  
                    l229 072C                      l510 02CB                      l414 0075  
                    l406 00E1                      l246 0FDA                      l254 0F04  
                    l270 0FCF                      l262 0DFD                      l511 02D8  
                    l503 0270                      l415 0086                      l407 00E9  
                    l247 0FFF                      l512 02CC                      l504 02F8  
                    l416 0094                      l248 0FFF                      l280 0252  
                    l513 02DE                      l505 02BB                      l417 009C  
                    l265 0FB7                      l273 0211                      l257 0E72  
                    l514 02EF                      l506 02A7                      l266 0FA2  
                    l274 01D1                      l258 0E7F                      l290 0E0C  
                    l507 02A8                      l275 020A                      l259 0E7F  
                    l283 0E2D                      l291 0E13                      l195 0EDF  
                    l508 02BA                      l268 0FCE                      l276 0218  
                    l292 0E13                      l509 02DF                      l269 0FCF  
                    l277 0237                      l278 022A                      l286 0E00  
                    l279 0252                      l295 00FF                      l287 0E00  
                    l296 0147                      l288 0E07                      l617 0E62  
                    l297 0125                      l289 0E0C                      l730 016A  
                    l482 0314                      l298 0100                      l731 015D  
                    l483 03C0                      l299 0125                      l740 01C2  
                    l732 0171                      l492 03DC                      l484 032D  
                    l733 0188                      l493 04AE                      l485 0373  
                    l734 0172                      l726 015C                      l494 03F5  
                    l486 0395                      l735 018F                      l495 0435  
                    l487 03A4                      l736 019B                      l728 0154  
                    l496 044A                      l737 0190                      l729 01C2  
                    l497 0461                      l738 019F                      l498 0466  
                    l739 01A9                      l499 047B                      _RB0 0030  
                    _RB1 0031                      _RB4 0034                      _RB5 0035  
                    _RC4 003C                      _RB6 0036                      _RB7 0037  
                    u990 0E06                      u991 0E05                      fsr0 0004  
                    indf 0000             __CFG_FOSC$HS 0000          SetLED@Write_Reg 007C  
        send_config@data 0078             __CFG_LVP$OFF 0000             ___ftdiv@cntr 0047  
           ___ftdiv@sign 004C                     l2000 00BA                     l2002 00CB  
                   l2010 00E2                     l2020 006A                     l2012 00E9  
                   l2004 00D1                     l2100 0518                     l2030 008D  
                   l2022 006F                     l2014 005A                     l2006 00D3  
                   l2110 0546                     l2102 051B                     l2040 0154  
                   l2024 0075                     l2016 0060                     l2032 0095  
                   l2008 00DA                     l2200 0EF4                     l2120 0567  
                   l2112 054D                     l2104 0527                     l2050 0176  
                   l2042 015B                     l2210 0270                     l2034 009C  
                   l2026 007F                     l2018 0063                     l2202 0EF7  
                   l2130 057F                     l2122 0568                     l2114 0553  
                   l2106 0530                     l2060 01AB                     l2052 0180  
                   l2044 015D                     l2036 0148                     l2220 0292  
                   l2212 0282                     l2204 0253                     l2300 03C1  
                   l2028 0086                     l2140 05AB                     l2132 0581  
                   l2124 056A                     l2116 055A                     l2108 053E  
                   l2062 01BD                     l2054 0190                     l2046 016A  
                   l2038 014C                     l2222 0296                     l2230 02BB  
                   l2214 0283                     l2206 0266                     l2310 03F4  
                   l2302 03D4                     l2150 05C9                     l2142 05AD  
                   l2134 0595                     l2126 056D                     l2118 0562  
                   l2070 04B5                     l2064 01C1                     l2056 019B  
                   l2048 0172                     l2232 02C1                     l2240 02DF  
                   l2224 029D                     l2216 0289                     l2208 026F  
                   l2320 042A                     l2312 03F5                     l2304 03DB  
                   l2400 0313                     l2160 05ED                     l2152 05D0  
                   l2144 05B1                     l2136 059D                     l2128 057B  
                   l2080 04C3                     l2072 04B6                     l2058 01A3  
                   l2250 0E62                     l2242 02E3                     l2234 02CA  
                   l2226 02A6                     l2218 0290                     l2330 0452  
                   l2322 0430                     l2314 0422                     l2306 03DC  
                   l2410 0333                     l2402 0314                     l2170 0608  
                   l2162 05F1                     l2154 05DE                     l2146 05B9  
                   l2138 05A5                     l2090 04DB                     l2082 04C7  
                   l2074 04B7                     l2066 04B2                     l2244 02EF  
                   l2236 02CC                     l2228 02A8                     l2340 047B  
                   l2332 045A                     l2324 0435                     l2316 0423  
                   l2308 03ED                     l2420 0367                     l2412 0338  
                   l2404 0325                     l2180 0F06                     l2172 0618  
                   l2164 05F7                     l2156 05E6                     l2148 05BF  
                   l2092 04F3                     l2084 04CC                     l2076 04BB  
                   l2068 04B3                     l2260 0F83                     l2252 0F2D  
                   l2500 0793                     l2246 02F8                     l2238 02D8  
                   l2342 0483                     l2334 0461                     l2326 0439  
                   l2318 0424                     l2430 0395                     l2422 0373  
                   l2414 034A                     l2406 032C                     l2190 0F1C  
                   l2182 0F09                     l2350 0F4F                     l2174 061F  
                   l2166 05FF                     l2158 05E8                     l2094 04FA  
                   l2086 04D0                     l2078 04BF                     l2270 0EBB  
                   l2262 0F87                     l2254 0F35                     l2502 07D9  
                   l2248 0E48                     l2344 048B                     l2336 0466  
                   l2328 044A                     l2432 039D                     l2424 037B  
                   l2416 035C                     l2408 032D                     l2192 0EE1  
                   l2184 0F0B                     l2280 0DEA                     l2360 0F60  
                   l2352 0F52                     l1720 00EA                     l2168 0605  
                   l2176 0631                     l2096 0508                     l2088 04D4  
                   l2272 0EBD                     l2264 0FA0                     l2256 0F4E  
                   l2504 07DF                     l2440 064A                     l2346 0492  
                   l2338 046A                     l2434 03A4                     l2426 0389  
                   l2418 0360                     l2194 0EE4                     l2186 0F0C  
                   l2290 0FA1                     l2370 01CA                     l2282 0E64  
                   l2362 0F66                     l2354 0F53                     l1730 0100  
                   l1722 00F2                     l2178 063A                     l2098 0513  
                   l2274 0EC6                     l2266 0EA0                     l2258 0F7B  
                   l2506 07F0                     l2450 0673                     l2442 0659  
                   l2348 04AE                     l2436 03C0                     l2428 0393  
                   l2196 0EE6                     l2188 0F19                     l2292 0FA2  
                   l2380 0209                     l2372 01CF                     l2284 0E6A  
                   l2364 0F6C                     l2356 0F54                     l1740 012E  
                   l1732 0120                     l1724 00F8                     l1716 0DFF  
                   l2276 0ECC                     l2268 0EA8                     l2508 07F7  
                   l2460 06B5                     l2452 069B                     l2444 065E  
                   l2198 0EE7                     l2294 0FB2                     l2390 022A  
                   l2382 020A                     l2374 01D1                     l2286 0E72  
                   l2366 0F72                     l2358 0F5A                     l1750 0141  
                   l1742 0133                     l1734 0122                     l1726 00FC  
                   l1718 0E07                     l2278 0EDF                     l2470 06F1  
                   l2462 06C2                     l2454 06A1                     l2446 0664  
                   l2438 063B                     l2296 0FB7                     l2392 0230  
                   l2376 01ED                     l2384 0211                     l2368 01C3  
                   l2288 0E77                     l1752 0142                     l1744 0134  
                   l1736 0124                     l1728 00FE                     l2480 072A  
                   l2472 06F8                     l2464 06C6                     l2456 06A7  
                   l2448 066D                     l2298 0FBD                     l2394 0237  
                   l2386 0218                     l2378 0202                     l1754 0144  
                   l1746 0139                     l1738 012A                     l2490 075A  
                   l2482 0731                     l2474 06F9                     l2466 06D2  
                   l2458 06B1                     l2396 02F9                     l2388 0226  
                   l1756 0146                     l1748 013F                     l2492 075E  
                   l2484 0737                     l2476 0714                     l2468 06E2  
                   l2398 030C                     l2494 0765                     l2486 0740  
                   l2478 0723                     l1960 0E3A                     l2496 076C  
                   l2488 074E                     l1970 0E46                     l1962 0E3C  
                   l1954 0E2E                     l2498 0773                     l1980 0E2A  
                   l1972 0E14                     l1964 0E3F                     l1956 0E34  
                   l1990 009F                     l1982 0FD0                     l1974 0E1E  
                   l1966 0E42                     l1958 0E38                     l1992 00A5  
                   l1984 0FD9                     l1976 0E24                     l1968 0E43  
                   l1994 00A8                     l1986 0FDA                     l1978 0E27  
                   l1996 00AF                     l1988 009D                     l1998 00B4  
         _SetTorqueOnOff 0F2A                     STR_1 0046                     STR_2 0013  
                   STR_3 0025                     STR_4 0036                     u1000 0E12  
                   u1001 0E11                     u1010 00F8                     _FERR 00C2  
                   u1011 00F7                     u1100 0FF6                     u1020 0120  
                   u1021 011F                     u1110 0FFE                     u1030 0129  
                   u1111 0FFD                     u1031 0128                     u1120 00A5  
                   u1040 0132                     u1121 00A4                     u1105 0FE9  
                   u1041 0131                     u1025 011C                     u1210 0073  
                   u1106 0FEA                     u1050 013D                     u1211 0072  
                   u1107 0FEF                     u1051 013C                     u1300 018E  
                   u1220 007F                     u1140 00B8                     u1108 0FF0  
                   u1301 018D                     u1221 007E                     u1205 0064  
                   u1141 00B7                     u1109 0FF5                     u1135 00A9  
                   u2007 06BB                     u1320 019F                     u1240 0093  
                   u1160 00CB                     u1400 0553                     u1321 019E  
                   u1241 0092                     u1225 007B                     u1161 00CA  
                   u1401 0552                     u2017 06EA                     u1330 01A3  
                   u1250 014C                     u1090 0FD8                     u1410 057F  
                   u1331 01A2                     u1315 0193                     u1235 0087  
                   u1155 00BB                     u1091 0FD7                     u2027 071C  
                   u1340 01B4                     u1260 0153                     u1180 00E0  
                   u1500 05F1                     u1420 0594                     u1261 0152  
                   u1181 00DF                     u1165 00C7                     u1501 05F0  
                   u1421 0593                     u1350 01C1                     u1190 0060  
                   u1510 05F7                     u1430 059D                     u1191 005F  
                   u1175 00D4                     u1511 05F6                     u1431 059C  
                   u1280 0170                     u1600 02C1                     u1520 0605  
                   u1440 05A3                     u1360 0507                     u1345 01B0  
                   u1281 016F                     u1601 02C0                     u1521 0604  
                   u1441 05A2                     u1425 0590                     u1361 0506  
                   u1530 062C                     u1450 05AB                     u1370 053D  
                   u1275 0162                     u1531 062B                     u1451 05AA  
                   u1371 053C                     u1620 02DD                     u1540 0266  
                   u1700 0417                     u1460 05B1                     u1380 0546  
                   u1621 02DC                     u1541 0265                     u1381 0545  
                   u1365 0503                     u1630 02E3                     u1550 027B  
                   u1710 0439                     u1470 05DD                     u1390 054C  
                   u1295 0181                     u1615 02CE                     u1711 0438  
                   u1535 0628                     u1471 05DC                     u1391 054B  
                   u1375 0539                     u1560 0296                     u1800 0491  
                   u1640 0E6A                     u1480 05E6                     u1561 0295  
                   u1801 0490                     u1721 0442                     u1705 0413  
                   u1641 0E69                     u1481 05E5                     u1570 029D  
                   u1722 0449                     u1650 0FBD                     u1810 0208  
                   u1490 05ED                     u1571 029C                     u1555 0277  
                   u1651 0FBC                     u1811 0207                     u1491 05EC  
                   u1475 05D9                     u1660 0FCD                     u1820 0217  
                   u1661 0FCC                     u1821 0216                     u1590 02B9  
                   u1750 0460                     u1670 03D4                     u1910 03A3  
                   u1830 0251                     u1591 02B8                     u1751 045F  
                   u1735 044B                     u1671 03D3                     u1911 03A2  
                   u1831 0250                     u1760 046A                     u1680 03ED  
                   u1840 030C                     u1920 06A1                     u1585 02A9  
                   u1761 0469                     u1745 0453                     u1681 03EC  
                   u1905 0396                     u1841 030B                     u1921 06A0  
                   u1690 0405                     u1850 0325                     u1930 06F7  
                   u1771 0473                     u1851 0324                     u1835 024D  
                   u1931 06F6                     u1772 047A                     u1860 0343  
                   u1940 0729                     u1941 0728                     u1870 0355  
                   u1950 0731                     u1695 0401                     u1951 0730  
                   u1960 07F6                     u1785 047C                     u1865 033F  
                   u1961 07F5                     u1890 0389                     u1795 0484  
                   u1891 0388                     u1875 0351                     u1885 0374  
                   u1895 0385                     u1977 0652                     u1987 0684  
                   _RCIF 0065                     u1997 0693                     _TRMT 04C1  
                   _main 063B             ___ftpack@arg 0070             ___ftpack@exp 0073  
                   btemp 007E             lcd_goto@data 007A                     start 0000  
           ___ftmul@cntr 003B     SetTorqueOnOff@TxBuff 004B             ___ftmul@sign 003C  
           ___fttol@exp1 0029             ___fttol@lval 0025             lcd_num@digit 007D  
   SetTorqueOnOff@on_off 007B                    ?_main 0070            __CFG_WDTE$OFF 0000  
        __end_of___ftdiv 03C1                    _ANSEL 0188          __end_of___ftmul 04AF  
        __end_of___fttol 02F9          __end_of___lwdiv 00EA          __end_of___lwmod 009D  
                  _RCREG 001A                    _SPBRG 0099                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _TXREG 0019  
     __size_of_UART_INIT 001A       __size_of_UART_SEND 0016         __end_of_UART_REC 0148  
        __end_of_lcd_clr 0DFE          __end_of_lcd_num 0253   __end_of_SetTorqueOnOff 0F4F  
        __end_of_lcdinit 0F78                    _delay 0FD0          send_packet@data 0077  
        send_packet@inst 0076            ___ftpack@sign 0074           __CFG_BOREN$OFF 0000  
                  pclath 000A                    status 0003                    wtemp0 007E  
          SetPos@ServoID 004A        UART_REC@waitcount 0071          __initialization 0E80  
  SetTorqueOnOff@ServoID 004A             __end_of_main 0800                   ??_main 004E  
          ___fttol@sign1 0024            lcd_num@number 007B          ?_SetTorqueOnOff 007B  
                 ?_delay 0070             ?_send_config 0070             ?_send_packet 0076  
       __end_of___ftpack 01C3                   _ANSELH 0189             ?_send_string 0079  
       __end_of___lwtoft 0E63                   _SPBRGH 009A                   _TRISB4 0434  
                 _TRISB5 0435                   _GetPos 0EBC                   _SetLED 0E9D  
      __end_of_UART_INIT 0E2E                   _SetPos 0F78        __end_of_UART_SEND 0E14  
       __end_of_lcd_goto 0E80                ??___ftdiv 0043                ??___ftmul 0033  
              ??___fttol 0020                ??___lwdiv 0074                ??___lwmod 0074  
                 _initIO 0E2E         send_packet@error 0041                ??_lcd_clr 0079  
              ??_lcd_num 0020                ??_lcdinit 0079    ___ftmul@f3_as_product 0038  
         SetPos@Position 007B             SetLED@TxBuff 004B  __end_of__initialization 0E99  
             ___ftdiv@f1 0040               ___ftdiv@f2 003D               ___ftdiv@f3 0048  
           SetLED@on_off 007B               ___ftmul@f1 002D               ___ftmul@f2 0030  
             ___fttol@f1 0078           __pcstackCOMMON 0070             __pidataBANK0 0056  
              ?_UART_REC 0070            __end_of_delay 1000               ___lwtoft@c 002A  
                ??_delay 0074               __pbssBANK0 0065                  ?_GetPos 007B  
                ?_SetLED 007B                  ?_SetPos 007B               __pmaintext 063B  
             ??_UART_REC 0070       __size_of_send_char 0025                  ?_initIO 0070  
              ?___ftpack 0070                ?___lwtoft 002A                ?_lcd_goto 0070  
             __stringtab 0003     __size_of_send_config 0025     __size_of_send_packet 018C  
   __size_of_send_string 002F          __size_of_GetPos 0024          __size_of_SetLED 001F  
        __size_of_SetPos 0029                  ___ftdiv 02F9                  ___ftmul 03C1  
                ___fttol 0253                  ___lwdiv 009D                  ___lwmod 005A  
        __size_of_initIO 001A               ??___ftpack 0075        send_packet@TxBuff 0030  
      send_packet@Status 0020                  _lcd_clr 0DEA                  _lcd_num 01C3  
       ??_SetTorqueOnOff 0047               ??___lwtoft 007C                  _lcdinit 0F4F  
                main@pos 005F               ??_lcd_goto 0079     end_of_initialization 0E99  
      __end_of_send_char 0F05     send_packet@param_len 0078                _RCSTAbits 0018  
              _UART_INIT 0E14                _UART_SEND 0DFE            send_char@data 0078  
          GetPos@ServoID 007C            SetLED@ServoID 004A                _TRISCbits 0087  
        SetPos@Write_Reg 007D               lcd_num@num 0024              ___ftdiv@exp 004B  
              _TXSTAbits 0098            send_packet@ID 0040           __end_of_GetPos 0EE0  
            ___ftmul@exp 0037           __end_of_SetLED 0EBC           __end_of_SetPos 0FA1  
             ?_UART_INIT 0070               ?_UART_SEND 0070         UART_REC@rec_data 0075  
      __size_of_UART_REC 005E              _BAUDCTLbits 0187           __end_of_initIO 0E48  
           SetPos@TxBuff 004B      start_initialization 0E80            UART_SEND@data 0070  
SetTorqueOnOff@Write_Reg 007C                 ??_GetPos 0047                 ??_SetLED 0047  
               ??_SetPos 0047              __pdataBANK0 0061                 ??_initIO 0070  
      __size_of___ftpack 007B        __size_of___lwtoft 001B            __pcstackBANK0 0020  
    __end_of__stringdata 0050        __size_of_lcd_goto 001D         ___lwdiv@dividend 0072  
              __ptext570 0EBC                __ptext571 04AF                __ptext580 0FA1  
              __ptext572 0DFE                __ptext581 0F05                __ptext573 00EA  
              __ptext590 0148                __ptext582 0EE0                __ptext574 0E2E  
              __ptext591 0000                __ptext583 0FD0                __ptext575 0F4F  
              __ptext567 0F2A                __ptext584 009D                __ptext576 0E14  
              __ptext568 0F78                __ptext585 005A                __ptext577 0DEA  
              __ptext569 0E9D                __ptext586 02F9                __ptext578 0E63  
              __ptext587 03C1                __ptext579 01C3                __ptext588 0253  
              __ptext589 0E48                 ?___ftdiv 003D                 ?___ftmul 002D  
               ?___fttol 0078                 ?___lwdiv 0070                 ?___lwmod 0070  
            ??_UART_INIT 0070              ??_UART_SEND 0070                __pstrings 0003  
               ?_lcd_clr 0070                 ?_lcd_num 007B                 ?_lcdinit 0070  
    send_packet@checksum 0043            ??_send_config 0078            ??_send_packet 0079  
       ___lwdiv@quotient 0075           __size_of_delay 0030                delay@data 0070  
          ??_send_string 007B                 _ERR_FLAG 0065                _send_char 0EE0  
               _UARTWAIT 0061                 _UART_REC 00EA              __stringbase 0012  
            __stringdata 0013                main@angle 005B             send_packet@i 0045  
    __end_of_send_config 0F2A      __end_of_send_packet 063B               ?_send_char 0070  
           send_string@s 0079      __end_of_send_string 0FD0         __size_of___ftdiv 00C8  
       __size_of___ftmul 00EE         __size_of___fttol 00A6         __size_of___lwdiv 004D  
       __size_of___lwmod 0043                 ___ftpack 0148       __end_of__stringtab 0013  
               ___lwtoft 0E48         __size_of_lcd_clr 0014         __size_of_lcd_num 0090  
       __size_of_lcdinit 0029                 _main$972 005D          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0077                 _lcd_goto 0E63  __size_of_SetTorqueOnOff 0025  
          __size_of_main 01C5                 main@DATA 0051    send_packet@packet_len 0044  
               lcd_num@i 0036                 lcd_num@j 0034                 lcd_num@k 0035  
            _send_config 0F05              _send_packet 04AF              _send_string 0FA1  
       ___lwmod@dividend 0072              ??_send_char 0078                stringcode 000D  
             GetPos@data 007B          ___lwmod@divisor 0070          ___lwmod@counter 0075  
               stringdir 000D                 stringtab 0003  
